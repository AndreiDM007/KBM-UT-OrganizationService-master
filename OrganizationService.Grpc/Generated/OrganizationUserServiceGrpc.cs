// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OrganizationUserService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Kebormed.Core.OrganizationService.Grpc.Generated {
  public static partial class OrganizationUserService
  {
    static readonly string __ServiceName = "Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserService";

    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryUserOrganizations_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryUserOrganizations_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryOrganizationUser_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryOrganizationUser_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryOrganizationUsers_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryOrganizationUsers_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUser_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUser_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUserByExternalUserId_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUserByExternalUserId_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationAdmin_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationAdmin_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUser_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUser_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUserByEmail_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUserByEmail_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUserByUsername_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUserByUsername_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateOrganizationUser_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateOrganizationUser_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateOrganizationUser_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateOrganizationUser_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteOrganizationUser_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteOrganizationUser_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateOrganizationUsersAssociation_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateOrganizationUsersAssociation_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateOrganizationUsersAssociation_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateOrganizationUsersAssociation_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteOrganizationUsersAssociation_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteOrganizationUsersAssociation_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_PublishCreateOrganizationUser_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_PublishCreateOrganizationUser_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_PublishUpdateOrganizationUser_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_PublishUpdateOrganizationUser_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUserType_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUserType_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetSingleOrganizationOrgUsers_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetSingleOrganizationOrgUsers_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetUserLockStatus_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetUserLockStatus_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetUserPendingActivationStatus_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetUserPendingActivationStatus_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetLastLoginTime_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetLastLoginTime_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response.Parser.ParseFrom);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response> __Method_QueryUserOrganizations = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryUserOrganizations",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryUserOrganizations_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryUserOrganizations_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response> __Method_QueryOrganizationUser = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryOrganizationUser",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryOrganizationUser_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryOrganizationUser_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response> __Method_QueryOrganizationUsers = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryOrganizationUsers",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryOrganizationUsers_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryOrganizationUsers_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response> __Method_GetOrganizationUser = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationUser",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUser_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUser_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response> __Method_GetOrganizationUserByExternalUserId = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationUserByExternalUserId",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUserByExternalUserId_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUserByExternalUserId_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response> __Method_GetOrganizationAdmin = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationAdmin",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationAdmin_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationAdmin_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response> __Method_ExistOrganizationUser = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExistOrganizationUser",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUser_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUser_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response> __Method_ExistOrganizationUserByEmail = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExistOrganizationUserByEmail",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUserByEmail_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUserByEmail_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response> __Method_ExistOrganizationUserByUsername = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExistOrganizationUserByUsername",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUserByUsername_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistOrganizationUserByUsername_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response> __Method_CreateOrganizationUser = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateOrganizationUser",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateOrganizationUser_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateOrganizationUser_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response> __Method_UpdateOrganizationUser = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrganizationUser",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateOrganizationUser_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateOrganizationUser_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response> __Method_DeleteOrganizationUser = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteOrganizationUser",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteOrganizationUser_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteOrganizationUser_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response> __Method_CreateOrganizationUsersAssociation = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateOrganizationUsersAssociation",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateOrganizationUsersAssociation_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateOrganizationUsersAssociation_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response> __Method_UpdateOrganizationUsersAssociation = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrganizationUsersAssociation",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateOrganizationUsersAssociation_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateOrganizationUsersAssociation_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response> __Method_DeleteOrganizationUsersAssociation = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteOrganizationUsersAssociation",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteOrganizationUsersAssociation_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteOrganizationUsersAssociation_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response> __Method_PublishCreateOrganizationUser = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PublishCreateOrganizationUser",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_PublishCreateOrganizationUser_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_PublishCreateOrganizationUser_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response> __Method_PublishUpdateOrganizationUser = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PublishUpdateOrganizationUser",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_PublishUpdateOrganizationUser_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_PublishUpdateOrganizationUser_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response> __Method_GetOrganizationUserType = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationUserType",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUserType_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetOrganizationUserType_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response> __Method_GetSingleOrganizationOrgUsers = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSingleOrganizationOrgUsers",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetSingleOrganizationOrgUsers_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_GetSingleOrganizationOrgUsers_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response> __Method_SetUserLockStatus = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetUserLockStatus",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetUserLockStatus_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetUserLockStatus_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response> __Method_SetUserPendingActivationStatus = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetUserPendingActivationStatus",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetUserPendingActivationStatus_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetUserPendingActivationStatus_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response> __Method_SetLastLoginTime = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetLastLoginTime",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetLastLoginTime_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_SetLastLoginTime_Response);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of OrganizationUserService</summary>
    public abstract partial class OrganizationUserServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response> QueryUserOrganizations(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response> QueryOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response> QueryOrganizationUsers(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response> GetOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response> GetOrganizationUserByExternalUserId(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response> GetOrganizationAdmin(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response> ExistOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response> ExistOrganizationUserByEmail(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response> ExistOrganizationUserByUsername(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response> CreateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response> UpdateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response> DeleteOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response> CreateOrganizationUsersAssociation(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response> UpdateOrganizationUsersAssociation(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response> DeleteOrganizationUsersAssociation(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response> PublishCreateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response> PublishUpdateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response> GetOrganizationUserType(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response> GetSingleOrganizationOrgUsers(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response> SetUserLockStatus(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response> SetUserPendingActivationStatus(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response> SetLastLoginTime(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for OrganizationUserService</summary>
    public partial class OrganizationUserServiceClient : grpc::ClientBase<OrganizationUserServiceClient>
    {
      /// <summary>Creates a new client for OrganizationUserService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public OrganizationUserServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OrganizationUserService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public OrganizationUserServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected OrganizationUserServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected OrganizationUserServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response QueryUserOrganizations(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryUserOrganizations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response QueryUserOrganizations(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryUserOrganizations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response> QueryUserOrganizationsAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryUserOrganizationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response> QueryUserOrganizationsAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryUserOrganizations, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response QueryOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryOrganizationUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response QueryOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryOrganizationUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response> QueryOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryOrganizationUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response> QueryOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryOrganizationUser, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response QueryOrganizationUsers(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryOrganizationUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response QueryOrganizationUsers(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryOrganizationUsers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response> QueryOrganizationUsersAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryOrganizationUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response> QueryOrganizationUsersAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryOrganizationUsers, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response GetOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response GetOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response> GetOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response> GetOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationUser, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response GetOrganizationUserByExternalUserId(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationUserByExternalUserId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response GetOrganizationUserByExternalUserId(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationUserByExternalUserId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response> GetOrganizationUserByExternalUserIdAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationUserByExternalUserIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response> GetOrganizationUserByExternalUserIdAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationUserByExternalUserId, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response GetOrganizationAdmin(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationAdmin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response GetOrganizationAdmin(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationAdmin, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response> GetOrganizationAdminAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationAdminAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response> GetOrganizationAdminAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationAdmin, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response ExistOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExistOrganizationUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response ExistOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExistOrganizationUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response> ExistOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExistOrganizationUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response> ExistOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExistOrganizationUser, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response ExistOrganizationUserByEmail(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExistOrganizationUserByEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response ExistOrganizationUserByEmail(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExistOrganizationUserByEmail, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response> ExistOrganizationUserByEmailAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExistOrganizationUserByEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response> ExistOrganizationUserByEmailAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExistOrganizationUserByEmail, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response ExistOrganizationUserByUsername(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExistOrganizationUserByUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response ExistOrganizationUserByUsername(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExistOrganizationUserByUsername, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response> ExistOrganizationUserByUsernameAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExistOrganizationUserByUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response> ExistOrganizationUserByUsernameAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExistOrganizationUserByUsername, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response CreateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOrganizationUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response CreateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateOrganizationUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response> CreateOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOrganizationUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response> CreateOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateOrganizationUser, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response UpdateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response UpdateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrganizationUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response> UpdateOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response> UpdateOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrganizationUser, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response DeleteOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganizationUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response DeleteOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteOrganizationUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response> DeleteOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganizationUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response> DeleteOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteOrganizationUser, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response CreateOrganizationUsersAssociation(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOrganizationUsersAssociation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response CreateOrganizationUsersAssociation(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateOrganizationUsersAssociation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response> CreateOrganizationUsersAssociationAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOrganizationUsersAssociationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response> CreateOrganizationUsersAssociationAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateOrganizationUsersAssociation, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response UpdateOrganizationUsersAssociation(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationUsersAssociation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response UpdateOrganizationUsersAssociation(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrganizationUsersAssociation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response> UpdateOrganizationUsersAssociationAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationUsersAssociationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response> UpdateOrganizationUsersAssociationAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrganizationUsersAssociation, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response DeleteOrganizationUsersAssociation(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganizationUsersAssociation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response DeleteOrganizationUsersAssociation(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteOrganizationUsersAssociation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response> DeleteOrganizationUsersAssociationAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteOrganizationUsersAssociationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response> DeleteOrganizationUsersAssociationAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteOrganizationUsersAssociation, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response PublishCreateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PublishCreateOrganizationUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response PublishCreateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PublishCreateOrganizationUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response> PublishCreateOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PublishCreateOrganizationUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response> PublishCreateOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PublishCreateOrganizationUser, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response PublishUpdateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PublishUpdateOrganizationUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response PublishUpdateOrganizationUser(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PublishUpdateOrganizationUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response> PublishUpdateOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PublishUpdateOrganizationUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response> PublishUpdateOrganizationUserAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PublishUpdateOrganizationUser, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response GetOrganizationUserType(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationUserType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response GetOrganizationUserType(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationUserType, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response> GetOrganizationUserTypeAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationUserTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response> GetOrganizationUserTypeAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationUserType, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response GetSingleOrganizationOrgUsers(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSingleOrganizationOrgUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response GetSingleOrganizationOrgUsers(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSingleOrganizationOrgUsers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response> GetSingleOrganizationOrgUsersAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSingleOrganizationOrgUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response> GetSingleOrganizationOrgUsersAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSingleOrganizationOrgUsers, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response SetUserLockStatus(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetUserLockStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response SetUserLockStatus(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetUserLockStatus, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response> SetUserLockStatusAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetUserLockStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response> SetUserLockStatusAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetUserLockStatus, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response SetUserPendingActivationStatus(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetUserPendingActivationStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response SetUserPendingActivationStatus(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetUserPendingActivationStatus, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response> SetUserPendingActivationStatusAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetUserPendingActivationStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response> SetUserPendingActivationStatusAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetUserPendingActivationStatus, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response SetLastLoginTime(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetLastLoginTime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response SetLastLoginTime(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetLastLoginTime, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response> SetLastLoginTimeAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetLastLoginTimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response> SetLastLoginTimeAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetLastLoginTime, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override OrganizationUserServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OrganizationUserServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(OrganizationUserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_QueryUserOrganizations, serviceImpl.QueryUserOrganizations)
          .AddMethod(__Method_QueryOrganizationUser, serviceImpl.QueryOrganizationUser)
          .AddMethod(__Method_QueryOrganizationUsers, serviceImpl.QueryOrganizationUsers)
          .AddMethod(__Method_GetOrganizationUser, serviceImpl.GetOrganizationUser)
          .AddMethod(__Method_GetOrganizationUserByExternalUserId, serviceImpl.GetOrganizationUserByExternalUserId)
          .AddMethod(__Method_GetOrganizationAdmin, serviceImpl.GetOrganizationAdmin)
          .AddMethod(__Method_ExistOrganizationUser, serviceImpl.ExistOrganizationUser)
          .AddMethod(__Method_ExistOrganizationUserByEmail, serviceImpl.ExistOrganizationUserByEmail)
          .AddMethod(__Method_ExistOrganizationUserByUsername, serviceImpl.ExistOrganizationUserByUsername)
          .AddMethod(__Method_CreateOrganizationUser, serviceImpl.CreateOrganizationUser)
          .AddMethod(__Method_UpdateOrganizationUser, serviceImpl.UpdateOrganizationUser)
          .AddMethod(__Method_DeleteOrganizationUser, serviceImpl.DeleteOrganizationUser)
          .AddMethod(__Method_CreateOrganizationUsersAssociation, serviceImpl.CreateOrganizationUsersAssociation)
          .AddMethod(__Method_UpdateOrganizationUsersAssociation, serviceImpl.UpdateOrganizationUsersAssociation)
          .AddMethod(__Method_DeleteOrganizationUsersAssociation, serviceImpl.DeleteOrganizationUsersAssociation)
          .AddMethod(__Method_PublishCreateOrganizationUser, serviceImpl.PublishCreateOrganizationUser)
          .AddMethod(__Method_PublishUpdateOrganizationUser, serviceImpl.PublishUpdateOrganizationUser)
          .AddMethod(__Method_GetOrganizationUserType, serviceImpl.GetOrganizationUserType)
          .AddMethod(__Method_GetSingleOrganizationOrgUsers, serviceImpl.GetSingleOrganizationOrgUsers)
          .AddMethod(__Method_SetUserLockStatus, serviceImpl.SetUserLockStatus)
          .AddMethod(__Method_SetUserPendingActivationStatus, serviceImpl.SetUserPendingActivationStatus)
          .AddMethod(__Method_SetLastLoginTime, serviceImpl.SetLastLoginTime).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, OrganizationUserServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_QueryUserOrganizations, serviceImpl.QueryUserOrganizations);
      serviceBinder.AddMethod(__Method_QueryOrganizationUser, serviceImpl.QueryOrganizationUser);
      serviceBinder.AddMethod(__Method_QueryOrganizationUsers, serviceImpl.QueryOrganizationUsers);
      serviceBinder.AddMethod(__Method_GetOrganizationUser, serviceImpl.GetOrganizationUser);
      serviceBinder.AddMethod(__Method_GetOrganizationUserByExternalUserId, serviceImpl.GetOrganizationUserByExternalUserId);
      serviceBinder.AddMethod(__Method_GetOrganizationAdmin, serviceImpl.GetOrganizationAdmin);
      serviceBinder.AddMethod(__Method_ExistOrganizationUser, serviceImpl.ExistOrganizationUser);
      serviceBinder.AddMethod(__Method_ExistOrganizationUserByEmail, serviceImpl.ExistOrganizationUserByEmail);
      serviceBinder.AddMethod(__Method_ExistOrganizationUserByUsername, serviceImpl.ExistOrganizationUserByUsername);
      serviceBinder.AddMethod(__Method_CreateOrganizationUser, serviceImpl.CreateOrganizationUser);
      serviceBinder.AddMethod(__Method_UpdateOrganizationUser, serviceImpl.UpdateOrganizationUser);
      serviceBinder.AddMethod(__Method_DeleteOrganizationUser, serviceImpl.DeleteOrganizationUser);
      serviceBinder.AddMethod(__Method_CreateOrganizationUsersAssociation, serviceImpl.CreateOrganizationUsersAssociation);
      serviceBinder.AddMethod(__Method_UpdateOrganizationUsersAssociation, serviceImpl.UpdateOrganizationUsersAssociation);
      serviceBinder.AddMethod(__Method_DeleteOrganizationUsersAssociation, serviceImpl.DeleteOrganizationUsersAssociation);
      serviceBinder.AddMethod(__Method_PublishCreateOrganizationUser, serviceImpl.PublishCreateOrganizationUser);
      serviceBinder.AddMethod(__Method_PublishUpdateOrganizationUser, serviceImpl.PublishUpdateOrganizationUser);
      serviceBinder.AddMethod(__Method_GetOrganizationUserType, serviceImpl.GetOrganizationUserType);
      serviceBinder.AddMethod(__Method_GetSingleOrganizationOrgUsers, serviceImpl.GetSingleOrganizationOrgUsers);
      serviceBinder.AddMethod(__Method_SetUserLockStatus, serviceImpl.SetUserLockStatus);
      serviceBinder.AddMethod(__Method_SetUserPendingActivationStatus, serviceImpl.SetUserPendingActivationStatus);
      serviceBinder.AddMethod(__Method_SetLastLoginTime, serviceImpl.SetLastLoginTime);
    }

  }
}
#endregion
