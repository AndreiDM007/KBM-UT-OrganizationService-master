// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GroupService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kebormed.Core.OrganizationService.Grpc.Generated {

  /// <summary>Holder for reflection information generated from GroupService.proto</summary>
  public static partial class GroupServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for GroupService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJHcm91cFNlcnZpY2UucHJvdG8SMEtlYm9ybWVkLkNvcmUuT3JnYW5pemF0",
            "aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZBoeZ29vZ2xlL3Byb3RvYnVmL3dy",
            "YXBwZXJzLnByb3RvIsMBCgtDcmVhdGVHcm91cBqWAQoHUmVxdWVzdBIWCg5P",
            "cmdhbml6YXRpb25JZBgBIAEoBRIMCgROYW1lGAIgASgJEjIKDVBhcmVudEdy",
            "b3VwSWQYAyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIxCgtE",
            "ZXNjcmlwdGlvbhgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRobCghSZXNwb25zZRIPCgdHcm91cElkGAEgASgFIuEBCgtVcGRhdGVHcm91",
            "cBrFAQoHUmVxdWVzdBIWCg5Pcmdhbml6YXRpb25JZBgBIAEoBRIPCgdHcm91",
            "cElkGAIgASgFEjIKDVBhcmVudEdyb3VwSWQYAyABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuSW50MzJWYWx1ZRIqCgROYW1lGAQgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEjEKC0Rlc2NyaXB0aW9uGAUgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlGgoKCFJlc3BvbnNlIk0KC0RlbGV0ZUdy",
            "b3VwGjIKB1JlcXVlc3QSFgoOT3JnYW5pemF0aW9uSWQYASABKAUSDwoHR3Jv",
            "dXBJZBgCIAEoBRoKCghSZXNwb25zZSLPAgoLUXVlcnlHcm91cHMaswEKDUdy",
            "b3VwTGlzdFZpZXcSDwoHR3JvdXBJZBgBIAEoBRIyCg1QYXJlbnRHcm91cElk",
            "GAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSKgoETmFtZRgD",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIxCgtEZXNjcmlw",
            "dGlvbhgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRohCgdS",
            "ZXF1ZXN0EhYKDk9yZ2FuaXphdGlvbklkGAEgASgFGmcKCFJlc3BvbnNlElsK",
            "BlJlc3VsdBgCIAMoCzJLLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2Vy",
            "dmljZS5HcnBjLkdlbmVyYXRlZC5RdWVyeUdyb3Vwcy5Hcm91cExpc3RWaWV3",
            "IrYBCiBBc3NvY2lhdGVPcmdhbml6YXRpb25Vc2VyVG9Hcm91cBqFAQoHUmVx",
            "dWVzdBIWCg5Pcmdhbml6YXRpb25JZBgBIAEoBRIPCgdHcm91cElkGAIgASgF",
            "EhoKEk9yZ2FuaXphdGlvblVzZXJJZBgDIAEoBRI1ChBBbGxvd2VkVXNlclR5",
            "cGVzGAQgAygLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUaCgoIUmVz",
            "cG9uc2UigwEKJURpc2Fzc29jaWF0ZU9yZ2FuaXphdGlvblVzZXJGcm9tR3Jv",
            "dXAaTgoHUmVxdWVzdBIWCg5Pcmdhbml6YXRpb25JZBgBIAEoBRIPCgdHcm91",
            "cElkGAIgASgFEhoKEk9yZ2FuaXphdGlvblVzZXJJZBgDIAEoBRoKCghSZXNw",
            "b25zZSLrBQoQUXVlcnlHcm91cE1lbWJlchqiAgoHUmVxdWVzdBIPCgdHcm91",
            "cElkGAEgASgFEhYKDk9yZ2FuaXphdGlvbklkGAIgASgFEikKBFBhZ2UYAyAB",
            "KAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRItCghQYWdlU2l6ZRgE",
            "IAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEi8KCURpcmVjdGlv",
            "bhgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCgdPcmRl",
            "ckJ5GAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQKD1Rh",
            "cmdldFVzZXJUeXBlcxgHIAMoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlGtUBCghSZXNwb25zZRJhCgpQYWdpbmF0aW9uGAEgASgLMk0uS2Vib3Jt",
            "ZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLlF1",
            "ZXJ5R3JvdXBNZW1iZXIuUGFnaW5hdGlvbhJmCgZSZXN1bHQYAiADKAsyVi5L",
            "ZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0",
            "ZWQuUXVlcnlHcm91cE1lbWJlci5Hcm91cE1lbWJlckxpc3RWaWV3GjsKClBh",
            "Z2luYXRpb24SDQoFVG90YWwYASABKAUSDAoEUGFnZRgCIAEoBRIQCghQYWdl",
            "U2l6ZRgDIAEoBRqcAQoTR3JvdXBNZW1iZXJMaXN0VmlldxIKCgJJZBgBIAEo",
            "CRIUCgxDcmVhdGlvblRpbWUYAiABKAMSEAoIVXNlck5hbWUYAyABKAkSEAoI",
            "VXNlclR5cGUYBCABKAUSEQoJRmlyc3ROYW1lGAUgASgJEhAKCExhc3ROYW1l",
            "GAYgASgJEhoKEk9yZ2FuaXphdGlvblVzZXJJZBgHIAEoBSL2AQoQUXVlcnlN",
            "ZW1iZXJHcm91cBozCgdSZXF1ZXN0EhAKCE1lbWJlcklkGAEgASgFEhYKDk9y",
            "Z2FuaXphdGlvbklkGAIgASgFGnIKCFJlc3BvbnNlEmYKBlJlc3VsdBgBIAMo",
            "CzJWLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdl",
            "bmVyYXRlZC5RdWVyeU1lbWJlckdyb3VwLk1lbWJlckdyb3VwTGlzdFZpZXca",
            "OQoTTWVtYmVyR3JvdXBMaXN0VmlldxIPCgdHcm91cElkGAEgASgJEhEKCUdy",
            "b3VwTmFtZRgCIAEoCSJfChBFeGlzdEdyb3VwQnlOYW1lGi8KB1JlcXVlc3QS",
            "DAoETmFtZRgBIAEoCRIWCg5Pcmdhbml6YXRpb25JZBgDIAEoBRoaCghSZXNw",
            "b25zZRIOCgZFeGlzdHMYASABKAgy3wwKDEdyb3VwU2VydmljZRKcAQoLQ3Jl",
            "YXRlR3JvdXASRS5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2Uu",
            "R3JwYy5HZW5lcmF0ZWQuQ3JlYXRlR3JvdXAuUmVxdWVzdBpGLktlYm9ybWVk",
            "LkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5DcmVh",
            "dGVHcm91cC5SZXNwb25zZRKcAQoLVXBkYXRlR3JvdXASRS5LZWJvcm1lZC5D",
            "b3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuVXBkYXRl",
            "R3JvdXAuUmVxdWVzdBpGLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2Vy",
            "dmljZS5HcnBjLkdlbmVyYXRlZC5VcGRhdGVHcm91cC5SZXNwb25zZRKcAQoL",
            "RGVsZXRlR3JvdXASRS5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZp",
            "Y2UuR3JwYy5HZW5lcmF0ZWQuRGVsZXRlR3JvdXAuUmVxdWVzdBpGLktlYm9y",
            "bWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5E",
            "ZWxldGVHcm91cC5SZXNwb25zZRKcAQoLUXVlcnlHcm91cHMSRS5LZWJvcm1l",
            "ZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuUXVl",
            "cnlHcm91cHMuUmVxdWVzdBpGLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9u",
            "U2VydmljZS5HcnBjLkdlbmVyYXRlZC5RdWVyeUdyb3Vwcy5SZXNwb25zZRLb",
            "AQogQXNzb2NpYXRlT3JnYW5pemF0aW9uVXNlclRvR3JvdXASWi5LZWJvcm1l",
            "ZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuQXNz",
            "b2NpYXRlT3JnYW5pemF0aW9uVXNlclRvR3JvdXAuUmVxdWVzdBpbLktlYm9y",
            "bWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5B",
            "c3NvY2lhdGVPcmdhbml6YXRpb25Vc2VyVG9Hcm91cC5SZXNwb25zZRLqAQol",
            "RGlzYXNzb2NpYXRlT3JnYW5pemF0aW9uVXNlckZyb21Hcm91cBJfLktlYm9y",
            "bWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5E",
            "aXNhc3NvY2lhdGVPcmdhbml6YXRpb25Vc2VyRnJvbUdyb3VwLlJlcXVlc3Qa",
            "YC5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5l",
            "cmF0ZWQuRGlzYXNzb2NpYXRlT3JnYW5pemF0aW9uVXNlckZyb21Hcm91cC5S",
            "ZXNwb25zZRKrAQoQUXVlcnlHcm91cE1lbWJlchJKLktlYm9ybWVkLkNvcmUu",
            "T3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5RdWVyeUdyb3Vw",
            "TWVtYmVyLlJlcXVlc3QaSy5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNl",
            "cnZpY2UuR3JwYy5HZW5lcmF0ZWQuUXVlcnlHcm91cE1lbWJlci5SZXNwb25z",
            "ZRKrAQoQUXVlcnlNZW1iZXJHcm91cBJKLktlYm9ybWVkLkNvcmUuT3JnYW5p",
            "emF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5RdWVyeU1lbWJlckdyb3Vw",
            "LlJlcXVlc3QaSy5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2Uu",
            "R3JwYy5HZW5lcmF0ZWQuUXVlcnlNZW1iZXJHcm91cC5SZXNwb25zZRKrAQoQ",
            "RXhpc3RHcm91cEJ5TmFtZRJKLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9u",
            "U2VydmljZS5HcnBjLkdlbmVyYXRlZC5FeGlzdEdyb3VwQnlOYW1lLlJlcXVl",
            "c3QaSy5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5H",
            "ZW5lcmF0ZWQuRXhpc3RHcm91cEJ5TmFtZS5SZXNwb25zZUIzqgIwS2Vib3Jt",
            "ZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request.Parser, new[]{ "OrganizationId", "Name", "ParentGroupId", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response.Parser, new[]{ "GroupId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request.Parser, new[]{ "OrganizationId", "GroupId", "ParentGroupId", "Name", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request.Parser, new[]{ "OrganizationId", "GroupId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.GroupListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.GroupListView.Parser, new[]{ "GroupId", "ParentGroupId", "Name", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request.Parser, new[]{ "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response.Parser, new[]{ "Result" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup), global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request.Parser, new[]{ "OrganizationId", "GroupId", "OrganizationUserId", "AllowedUserTypes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup), global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request.Parser, new[]{ "OrganizationId", "GroupId", "OrganizationUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request.Parser, new[]{ "GroupId", "OrganizationId", "Page", "PageSize", "Direction", "OrderBy", "TargetUserTypes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response.Parser, new[]{ "Pagination", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Pagination), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Pagination.Parser, new[]{ "Total", "Page", "PageSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.GroupMemberListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.GroupMemberListView.Parser, new[]{ "Id", "CreationTime", "UserName", "UserType", "FirstName", "LastName", "OrganizationUserId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request.Parser, new[]{ "MemberId", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.MemberGroupListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.MemberGroupListView.Parser, new[]{ "GroupId", "GroupName" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request.Parser, new[]{ "Name", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response.Parser, new[]{ "Exists" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CreateGroup : pb::IMessage<CreateGroup> {
    private static readonly pb::MessageParser<CreateGroup> _parser = new pb::MessageParser<CreateGroup>(() => new CreateGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGroup(CreateGroup other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGroup Clone() {
      return new CreateGroup(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateGroup other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateGroup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationId_ = other.organizationId_;
          name_ = other.name_;
          ParentGroupId = other.ParentGroupId;
          Description = other.Description;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "Name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ParentGroupId" field.</summary>
        public const int ParentGroupIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_parentGroupId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? parentGroupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? ParentGroupId {
          get { return parentGroupId_; }
          set {
            parentGroupId_ = value;
          }
        }

        /// <summary>Field number for the "Description" field.</summary>
        public const int DescriptionFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string description_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (Name != other.Name) return false;
          if (ParentGroupId != other.ParentGroupId) return false;
          if (Description != other.Description) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (parentGroupId_ != null) hash ^= ParentGroupId.GetHashCode();
          if (description_ != null) hash ^= Description.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (parentGroupId_ != null) {
            _single_parentGroupId_codec.WriteTagAndValue(output, ParentGroupId);
          }
          if (description_ != null) {
            _single_description_codec.WriteTagAndValue(output, Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (parentGroupId_ != null) {
            size += _single_parentGroupId_codec.CalculateSizeWithTag(ParentGroupId);
          }
          if (description_ != null) {
            size += _single_description_codec.CalculateSizeWithTag(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.parentGroupId_ != null) {
            if (parentGroupId_ == null || other.ParentGroupId != 0) {
              ParentGroupId = other.ParentGroupId;
            }
          }
          if (other.description_ != null) {
            if (description_ == null || other.Description != "") {
              Description = other.Description;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                int? value = _single_parentGroupId_codec.Read(input);
                if (parentGroupId_ == null || value != 0) {
                  ParentGroupId = value;
                }
                break;
              }
              case 34: {
                string value = _single_description_codec.Read(input);
                if (description_ == null || value != "") {
                  Description = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          groupId_ = other.groupId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "GroupId" field.</summary>
        public const int GroupIdFieldNumber = 1;
        private int groupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int GroupId {
          get { return groupId_; }
          set {
            groupId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GroupId != other.GroupId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GroupId != 0) hash ^= GroupId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (GroupId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(GroupId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GroupId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.GroupId != 0) {
            GroupId = other.GroupId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                GroupId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class UpdateGroup : pb::IMessage<UpdateGroup> {
    private static readonly pb::MessageParser<UpdateGroup> _parser = new pb::MessageParser<UpdateGroup>(() => new UpdateGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroup(UpdateGroup other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateGroup Clone() {
      return new UpdateGroup(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateGroup other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateGroup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationId_ = other.organizationId_;
          groupId_ = other.groupId_;
          ParentGroupId = other.ParentGroupId;
          Name = other.Name;
          Description = other.Description;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "GroupId" field.</summary>
        public const int GroupIdFieldNumber = 2;
        private int groupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int GroupId {
          get { return groupId_; }
          set {
            groupId_ = value;
          }
        }

        /// <summary>Field number for the "ParentGroupId" field.</summary>
        public const int ParentGroupIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_parentGroupId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? parentGroupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? ParentGroupId {
          get { return parentGroupId_; }
          set {
            parentGroupId_ = value;
          }
        }

        /// <summary>Field number for the "Name" field.</summary>
        public const int NameFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = value;
          }
        }

        /// <summary>Field number for the "Description" field.</summary>
        public const int DescriptionFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string description_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (GroupId != other.GroupId) return false;
          if (ParentGroupId != other.ParentGroupId) return false;
          if (Name != other.Name) return false;
          if (Description != other.Description) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (GroupId != 0) hash ^= GroupId.GetHashCode();
          if (parentGroupId_ != null) hash ^= ParentGroupId.GetHashCode();
          if (name_ != null) hash ^= Name.GetHashCode();
          if (description_ != null) hash ^= Description.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationId);
          }
          if (GroupId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(GroupId);
          }
          if (parentGroupId_ != null) {
            _single_parentGroupId_codec.WriteTagAndValue(output, ParentGroupId);
          }
          if (name_ != null) {
            _single_name_codec.WriteTagAndValue(output, Name);
          }
          if (description_ != null) {
            _single_description_codec.WriteTagAndValue(output, Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (GroupId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
          }
          if (parentGroupId_ != null) {
            size += _single_parentGroupId_codec.CalculateSizeWithTag(ParentGroupId);
          }
          if (name_ != null) {
            size += _single_name_codec.CalculateSizeWithTag(Name);
          }
          if (description_ != null) {
            size += _single_description_codec.CalculateSizeWithTag(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.GroupId != 0) {
            GroupId = other.GroupId;
          }
          if (other.parentGroupId_ != null) {
            if (parentGroupId_ == null || other.ParentGroupId != 0) {
              ParentGroupId = other.ParentGroupId;
            }
          }
          if (other.name_ != null) {
            if (name_ == null || other.Name != "") {
              Name = other.Name;
            }
          }
          if (other.description_ != null) {
            if (description_ == null || other.Description != "") {
              Description = other.Description;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 16: {
                GroupId = input.ReadInt32();
                break;
              }
              case 26: {
                int? value = _single_parentGroupId_codec.Read(input);
                if (parentGroupId_ == null || value != 0) {
                  ParentGroupId = value;
                }
                break;
              }
              case 34: {
                string value = _single_name_codec.Read(input);
                if (name_ == null || value != "") {
                  Name = value;
                }
                break;
              }
              case 42: {
                string value = _single_description_codec.Read(input);
                if (description_ == null || value != "") {
                  Description = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteGroup : pb::IMessage<DeleteGroup> {
    private static readonly pb::MessageParser<DeleteGroup> _parser = new pb::MessageParser<DeleteGroup>(() => new DeleteGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGroup(DeleteGroup other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteGroup Clone() {
      return new DeleteGroup(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteGroup other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteGroup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationId_ = other.organizationId_;
          groupId_ = other.groupId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "GroupId" field.</summary>
        public const int GroupIdFieldNumber = 2;
        private int groupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int GroupId {
          get { return groupId_; }
          set {
            groupId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (GroupId != other.GroupId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (GroupId != 0) hash ^= GroupId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationId);
          }
          if (GroupId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(GroupId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (GroupId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.GroupId != 0) {
            GroupId = other.GroupId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 16: {
                GroupId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryGroups : pb::IMessage<QueryGroups> {
    private static readonly pb::MessageParser<QueryGroups> _parser = new pb::MessageParser<QueryGroups>(() => new QueryGroups());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryGroups> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGroups() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGroups(QueryGroups other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGroups Clone() {
      return new QueryGroups(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryGroups);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryGroups other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryGroups other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryGroups message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class GroupListView : pb::IMessage<GroupListView> {
        private static readonly pb::MessageParser<GroupListView> _parser = new pb::MessageParser<GroupListView>(() => new GroupListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GroupListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GroupListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GroupListView(GroupListView other) : this() {
          groupId_ = other.groupId_;
          ParentGroupId = other.ParentGroupId;
          Name = other.Name;
          Description = other.Description;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GroupListView Clone() {
          return new GroupListView(this);
        }

        /// <summary>Field number for the "GroupId" field.</summary>
        public const int GroupIdFieldNumber = 1;
        private int groupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int GroupId {
          get { return groupId_; }
          set {
            groupId_ = value;
          }
        }

        /// <summary>Field number for the "ParentGroupId" field.</summary>
        public const int ParentGroupIdFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_parentGroupId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? parentGroupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? ParentGroupId {
          get { return parentGroupId_; }
          set {
            parentGroupId_ = value;
          }
        }

        /// <summary>Field number for the "Name" field.</summary>
        public const int NameFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = value;
          }
        }

        /// <summary>Field number for the "Description" field.</summary>
        public const int DescriptionFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string description_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GroupListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GroupListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GroupId != other.GroupId) return false;
          if (ParentGroupId != other.ParentGroupId) return false;
          if (Name != other.Name) return false;
          if (Description != other.Description) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GroupId != 0) hash ^= GroupId.GetHashCode();
          if (parentGroupId_ != null) hash ^= ParentGroupId.GetHashCode();
          if (name_ != null) hash ^= Name.GetHashCode();
          if (description_ != null) hash ^= Description.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (GroupId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(GroupId);
          }
          if (parentGroupId_ != null) {
            _single_parentGroupId_codec.WriteTagAndValue(output, ParentGroupId);
          }
          if (name_ != null) {
            _single_name_codec.WriteTagAndValue(output, Name);
          }
          if (description_ != null) {
            _single_description_codec.WriteTagAndValue(output, Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GroupId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
          }
          if (parentGroupId_ != null) {
            size += _single_parentGroupId_codec.CalculateSizeWithTag(ParentGroupId);
          }
          if (name_ != null) {
            size += _single_name_codec.CalculateSizeWithTag(Name);
          }
          if (description_ != null) {
            size += _single_description_codec.CalculateSizeWithTag(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GroupListView other) {
          if (other == null) {
            return;
          }
          if (other.GroupId != 0) {
            GroupId = other.GroupId;
          }
          if (other.parentGroupId_ != null) {
            if (parentGroupId_ == null || other.ParentGroupId != 0) {
              ParentGroupId = other.ParentGroupId;
            }
          }
          if (other.name_ != null) {
            if (name_ == null || other.Name != "") {
              Name = other.Name;
            }
          }
          if (other.description_ != null) {
            if (description_ == null || other.Description != "") {
              Description = other.Description;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                GroupId = input.ReadInt32();
                break;
              }
              case 18: {
                int? value = _single_parentGroupId_codec.Read(input);
                if (parentGroupId_ == null || value != 0) {
                  ParentGroupId = value;
                }
                break;
              }
              case 26: {
                string value = _single_name_codec.Read(input);
                if (name_ == null || value != "") {
                  Name = value;
                }
                break;
              }
              case 34: {
                string value = _single_description_codec.Read(input);
                if (description_ == null || value != "") {
                  Description = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          result_ = other.result_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Result" field.</summary>
        public const int ResultFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.GroupListView> _repeated_result_codec
            = pb::FieldCodec.ForMessage(18, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.GroupListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.GroupListView> result_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.GroupListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.GroupListView> Result {
          get { return result_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!result_.Equals(other.result_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= result_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          result_.WriteTo(output, _repeated_result_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += result_.CalculateSize(_repeated_result_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          result_.Add(other.result_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 18: {
                result_.AddEntriesFrom(input, _repeated_result_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AssociateOrganizationUserToGroup : pb::IMessage<AssociateOrganizationUserToGroup> {
    private static readonly pb::MessageParser<AssociateOrganizationUserToGroup> _parser = new pb::MessageParser<AssociateOrganizationUserToGroup>(() => new AssociateOrganizationUserToGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssociateOrganizationUserToGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssociateOrganizationUserToGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssociateOrganizationUserToGroup(AssociateOrganizationUserToGroup other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssociateOrganizationUserToGroup Clone() {
      return new AssociateOrganizationUserToGroup(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssociateOrganizationUserToGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssociateOrganizationUserToGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssociateOrganizationUserToGroup other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AssociateOrganizationUserToGroup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationId_ = other.organizationId_;
          groupId_ = other.groupId_;
          organizationUserId_ = other.organizationUserId_;
          allowedUserTypes_ = other.allowedUserTypes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "GroupId" field.</summary>
        public const int GroupIdFieldNumber = 2;
        private int groupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int GroupId {
          get { return groupId_; }
          set {
            groupId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 3;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "AllowedUserTypes" field.</summary>
        public const int AllowedUserTypesFieldNumber = 4;
        private static readonly pb::FieldCodec<int?> _repeated_allowedUserTypes_codec
            = pb::FieldCodec.ForStructWrapper<int>(34);
        private readonly pbc::RepeatedField<int?> allowedUserTypes_ = new pbc::RepeatedField<int?>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int?> AllowedUserTypes {
          get { return allowedUserTypes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (GroupId != other.GroupId) return false;
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if(!allowedUserTypes_.Equals(other.allowedUserTypes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (GroupId != 0) hash ^= GroupId.GetHashCode();
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          hash ^= allowedUserTypes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationId);
          }
          if (GroupId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(GroupId);
          }
          if (OrganizationUserId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(OrganizationUserId);
          }
          allowedUserTypes_.WriteTo(output, _repeated_allowedUserTypes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (GroupId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
          }
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          size += allowedUserTypes_.CalculateSize(_repeated_allowedUserTypes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.GroupId != 0) {
            GroupId = other.GroupId;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          allowedUserTypes_.Add(other.allowedUserTypes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 16: {
                GroupId = input.ReadInt32();
                break;
              }
              case 24: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 34: {
                allowedUserTypes_.AddEntriesFrom(input, _repeated_allowedUserTypes_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DisassociateOrganizationUserFromGroup : pb::IMessage<DisassociateOrganizationUserFromGroup> {
    private static readonly pb::MessageParser<DisassociateOrganizationUserFromGroup> _parser = new pb::MessageParser<DisassociateOrganizationUserFromGroup>(() => new DisassociateOrganizationUserFromGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisassociateOrganizationUserFromGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisassociateOrganizationUserFromGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisassociateOrganizationUserFromGroup(DisassociateOrganizationUserFromGroup other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisassociateOrganizationUserFromGroup Clone() {
      return new DisassociateOrganizationUserFromGroup(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisassociateOrganizationUserFromGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisassociateOrganizationUserFromGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisassociateOrganizationUserFromGroup other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DisassociateOrganizationUserFromGroup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationId_ = other.organizationId_;
          groupId_ = other.groupId_;
          organizationUserId_ = other.organizationUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "GroupId" field.</summary>
        public const int GroupIdFieldNumber = 2;
        private int groupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int GroupId {
          get { return groupId_; }
          set {
            groupId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 3;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (GroupId != other.GroupId) return false;
          if (OrganizationUserId != other.OrganizationUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (GroupId != 0) hash ^= GroupId.GetHashCode();
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationId);
          }
          if (GroupId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(GroupId);
          }
          if (OrganizationUserId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(OrganizationUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (GroupId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
          }
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.GroupId != 0) {
            GroupId = other.GroupId;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 16: {
                GroupId = input.ReadInt32();
                break;
              }
              case 24: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryGroupMember : pb::IMessage<QueryGroupMember> {
    private static readonly pb::MessageParser<QueryGroupMember> _parser = new pb::MessageParser<QueryGroupMember>(() => new QueryGroupMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryGroupMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGroupMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGroupMember(QueryGroupMember other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGroupMember Clone() {
      return new QueryGroupMember(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryGroupMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryGroupMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryGroupMember other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryGroupMember message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          groupId_ = other.groupId_;
          organizationId_ = other.organizationId_;
          Page = other.Page;
          PageSize = other.PageSize;
          Direction = other.Direction;
          OrderBy = other.OrderBy;
          targetUserTypes_ = other.targetUserTypes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "GroupId" field.</summary>
        public const int GroupIdFieldNumber = 1;
        private int groupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int GroupId {
          get { return groupId_; }
          set {
            groupId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_page_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 4;
        private static readonly pb::FieldCodec<int?> _single_pageSize_codec = pb::FieldCodec.ForStructWrapper<int>(34);
        private int? pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        /// <summary>Field number for the "Direction" field.</summary>
        public const int DirectionFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_direction_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string direction_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Direction {
          get { return direction_; }
          set {
            direction_ = value;
          }
        }

        /// <summary>Field number for the "OrderBy" field.</summary>
        public const int OrderByFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(50);
        private string orderBy_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderBy {
          get { return orderBy_; }
          set {
            orderBy_ = value;
          }
        }

        /// <summary>Field number for the "TargetUserTypes" field.</summary>
        public const int TargetUserTypesFieldNumber = 7;
        private static readonly pb::FieldCodec<int?> _repeated_targetUserTypes_codec
            = pb::FieldCodec.ForStructWrapper<int>(58);
        private readonly pbc::RepeatedField<int?> targetUserTypes_ = new pbc::RepeatedField<int?>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int?> TargetUserTypes {
          get { return targetUserTypes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GroupId != other.GroupId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          if (Direction != other.Direction) return false;
          if (OrderBy != other.OrderBy) return false;
          if(!targetUserTypes_.Equals(other.targetUserTypes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GroupId != 0) hash ^= GroupId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (page_ != null) hash ^= Page.GetHashCode();
          if (pageSize_ != null) hash ^= PageSize.GetHashCode();
          if (direction_ != null) hash ^= Direction.GetHashCode();
          if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
          hash ^= targetUserTypes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (GroupId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(GroupId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationId);
          }
          if (page_ != null) {
            _single_page_codec.WriteTagAndValue(output, Page);
          }
          if (pageSize_ != null) {
            _single_pageSize_codec.WriteTagAndValue(output, PageSize);
          }
          if (direction_ != null) {
            _single_direction_codec.WriteTagAndValue(output, Direction);
          }
          if (orderBy_ != null) {
            _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
          }
          targetUserTypes_.WriteTo(output, _repeated_targetUserTypes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GroupId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (page_ != null) {
            size += _single_page_codec.CalculateSizeWithTag(Page);
          }
          if (pageSize_ != null) {
            size += _single_pageSize_codec.CalculateSizeWithTag(PageSize);
          }
          if (direction_ != null) {
            size += _single_direction_codec.CalculateSizeWithTag(Direction);
          }
          if (orderBy_ != null) {
            size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
          }
          size += targetUserTypes_.CalculateSize(_repeated_targetUserTypes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.GroupId != 0) {
            GroupId = other.GroupId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.page_ != null) {
            if (page_ == null || other.Page != 0) {
              Page = other.Page;
            }
          }
          if (other.pageSize_ != null) {
            if (pageSize_ == null || other.PageSize != 0) {
              PageSize = other.PageSize;
            }
          }
          if (other.direction_ != null) {
            if (direction_ == null || other.Direction != "") {
              Direction = other.Direction;
            }
          }
          if (other.orderBy_ != null) {
            if (orderBy_ == null || other.OrderBy != "") {
              OrderBy = other.OrderBy;
            }
          }
          targetUserTypes_.Add(other.targetUserTypes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                GroupId = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 26: {
                int? value = _single_page_codec.Read(input);
                if (page_ == null || value != 0) {
                  Page = value;
                }
                break;
              }
              case 34: {
                int? value = _single_pageSize_codec.Read(input);
                if (pageSize_ == null || value != 0) {
                  PageSize = value;
                }
                break;
              }
              case 42: {
                string value = _single_direction_codec.Read(input);
                if (direction_ == null || value != "") {
                  Direction = value;
                }
                break;
              }
              case 50: {
                string value = _single_orderBy_codec.Read(input);
                if (orderBy_ == null || value != "") {
                  OrderBy = value;
                }
                break;
              }
              case 58: {
                targetUserTypes_.AddEntriesFrom(input, _repeated_targetUserTypes_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
          result_ = other.result_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Pagination" field.</summary>
        public const int PaginationFieldNumber = 1;
        private global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Pagination pagination_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Pagination Pagination {
          get { return pagination_; }
          set {
            pagination_ = value;
          }
        }

        /// <summary>Field number for the "Result" field.</summary>
        public const int ResultFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.GroupMemberListView> _repeated_result_codec
            = pb::FieldCodec.ForMessage(18, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.GroupMemberListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.GroupMemberListView> result_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.GroupMemberListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.GroupMemberListView> Result {
          get { return result_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Pagination, other.Pagination)) return false;
          if(!result_.Equals(other.result_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (pagination_ != null) hash ^= Pagination.GetHashCode();
          hash ^= result_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (pagination_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Pagination);
          }
          result_.WriteTo(output, _repeated_result_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (pagination_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
          }
          size += result_.CalculateSize(_repeated_result_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.pagination_ != null) {
            if (pagination_ == null) {
              pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Pagination();
            }
            Pagination.MergeFrom(other.Pagination);
          }
          result_.Add(other.result_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (pagination_ == null) {
                  pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Pagination();
                }
                input.ReadMessage(pagination_);
                break;
              }
              case 18: {
                result_.AddEntriesFrom(input, _repeated_result_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Pagination : pb::IMessage<Pagination> {
        private static readonly pb::MessageParser<Pagination> _parser = new pb::MessageParser<Pagination>(() => new Pagination());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Pagination> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination(Pagination other) : this() {
          total_ = other.total_;
          page_ = other.page_;
          pageSize_ = other.pageSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination Clone() {
          return new Pagination(this);
        }

        /// <summary>Field number for the "Total" field.</summary>
        public const int TotalFieldNumber = 1;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 2;
        private int page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 3;
        private int pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Pagination);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Pagination other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Total != other.Total) return false;
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Page != 0) hash ^= Page.GetHashCode();
          if (PageSize != 0) hash ^= PageSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Total != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Total);
          }
          if (Page != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Page);
          }
          if (PageSize != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(PageSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Page != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
          }
          if (PageSize != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Pagination other) {
          if (other == null) {
            return;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Page != 0) {
            Page = other.Page;
          }
          if (other.PageSize != 0) {
            PageSize = other.PageSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Total = input.ReadInt32();
                break;
              }
              case 16: {
                Page = input.ReadInt32();
                break;
              }
              case 24: {
                PageSize = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class GroupMemberListView : pb::IMessage<GroupMemberListView> {
        private static readonly pb::MessageParser<GroupMemberListView> _parser = new pb::MessageParser<GroupMemberListView>(() => new GroupMemberListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GroupMemberListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GroupMemberListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GroupMemberListView(GroupMemberListView other) : this() {
          id_ = other.id_;
          creationTime_ = other.creationTime_;
          userName_ = other.userName_;
          userType_ = other.userType_;
          firstName_ = other.firstName_;
          lastName_ = other.lastName_;
          organizationUserId_ = other.organizationUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GroupMemberListView Clone() {
          return new GroupMemberListView(this);
        }

        /// <summary>Field number for the "Id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "CreationTime" field.</summary>
        public const int CreationTimeFieldNumber = 2;
        private long creationTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long CreationTime {
          get { return creationTime_; }
          set {
            creationTime_ = value;
          }
        }

        /// <summary>Field number for the "UserName" field.</summary>
        public const int UserNameFieldNumber = 3;
        private string userName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserName {
          get { return userName_; }
          set {
            userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 4;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        /// <summary>Field number for the "FirstName" field.</summary>
        public const int FirstNameFieldNumber = 5;
        private string firstName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstName {
          get { return firstName_; }
          set {
            firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "LastName" field.</summary>
        public const int LastNameFieldNumber = 6;
        private string lastName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastName {
          get { return lastName_; }
          set {
            lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 7;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GroupMemberListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GroupMemberListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (CreationTime != other.CreationTime) return false;
          if (UserName != other.UserName) return false;
          if (UserType != other.UserType) return false;
          if (FirstName != other.FirstName) return false;
          if (LastName != other.LastName) return false;
          if (OrganizationUserId != other.OrganizationUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (CreationTime != 0L) hash ^= CreationTime.GetHashCode();
          if (UserName.Length != 0) hash ^= UserName.GetHashCode();
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
          if (LastName.Length != 0) hash ^= LastName.GetHashCode();
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (CreationTime != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(CreationTime);
          }
          if (UserName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(UserName);
          }
          if (UserType != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(UserType);
          }
          if (FirstName.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(FirstName);
          }
          if (LastName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(LastName);
          }
          if (OrganizationUserId != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(OrganizationUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (CreationTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationTime);
          }
          if (UserName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
          }
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (FirstName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
          }
          if (LastName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
          }
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GroupMemberListView other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.CreationTime != 0L) {
            CreationTime = other.CreationTime;
          }
          if (other.UserName.Length != 0) {
            UserName = other.UserName;
          }
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          if (other.FirstName.Length != 0) {
            FirstName = other.FirstName;
          }
          if (other.LastName.Length != 0) {
            LastName = other.LastName;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 16: {
                CreationTime = input.ReadInt64();
                break;
              }
              case 26: {
                UserName = input.ReadString();
                break;
              }
              case 32: {
                UserType = input.ReadInt32();
                break;
              }
              case 42: {
                FirstName = input.ReadString();
                break;
              }
              case 50: {
                LastName = input.ReadString();
                break;
              }
              case 56: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryMemberGroup : pb::IMessage<QueryMemberGroup> {
    private static readonly pb::MessageParser<QueryMemberGroup> _parser = new pb::MessageParser<QueryMemberGroup>(() => new QueryMemberGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryMemberGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMemberGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMemberGroup(QueryMemberGroup other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMemberGroup Clone() {
      return new QueryMemberGroup(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryMemberGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryMemberGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryMemberGroup other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryMemberGroup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          memberId_ = other.memberId_;
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "MemberId" field.</summary>
        public const int MemberIdFieldNumber = 1;
        private int memberId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MemberId {
          get { return memberId_; }
          set {
            memberId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MemberId != other.MemberId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MemberId != 0) hash ^= MemberId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (MemberId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(MemberId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MemberId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemberId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.MemberId != 0) {
            MemberId = other.MemberId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MemberId = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          result_ = other.result_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Result" field.</summary>
        public const int ResultFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.MemberGroupListView> _repeated_result_codec
            = pb::FieldCodec.ForMessage(10, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.MemberGroupListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.MemberGroupListView> result_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.MemberGroupListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.MemberGroupListView> Result {
          get { return result_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!result_.Equals(other.result_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= result_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          result_.WriteTo(output, _repeated_result_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += result_.CalculateSize(_repeated_result_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          result_.Add(other.result_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                result_.AddEntriesFrom(input, _repeated_result_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class MemberGroupListView : pb::IMessage<MemberGroupListView> {
        private static readonly pb::MessageParser<MemberGroupListView> _parser = new pb::MessageParser<MemberGroupListView>(() => new MemberGroupListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MemberGroupListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MemberGroupListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MemberGroupListView(MemberGroupListView other) : this() {
          groupId_ = other.groupId_;
          groupName_ = other.groupName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MemberGroupListView Clone() {
          return new MemberGroupListView(this);
        }

        /// <summary>Field number for the "GroupId" field.</summary>
        public const int GroupIdFieldNumber = 1;
        private string groupId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GroupId {
          get { return groupId_; }
          set {
            groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "GroupName" field.</summary>
        public const int GroupNameFieldNumber = 2;
        private string groupName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GroupName {
          get { return groupName_; }
          set {
            groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MemberGroupListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MemberGroupListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GroupId != other.GroupId) return false;
          if (GroupName != other.GroupName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
          if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (GroupId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(GroupId);
          }
          if (GroupName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(GroupName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GroupId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
          }
          if (GroupName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MemberGroupListView other) {
          if (other == null) {
            return;
          }
          if (other.GroupId.Length != 0) {
            GroupId = other.GroupId;
          }
          if (other.GroupName.Length != 0) {
            GroupName = other.GroupName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                GroupId = input.ReadString();
                break;
              }
              case 18: {
                GroupName = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ExistGroupByName : pb::IMessage<ExistGroupByName> {
    private static readonly pb::MessageParser<ExistGroupByName> _parser = new pb::MessageParser<ExistGroupByName>(() => new ExistGroupByName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExistGroupByName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistGroupByName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistGroupByName(ExistGroupByName other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistGroupByName Clone() {
      return new ExistGroupByName(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExistGroupByName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExistGroupByName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExistGroupByName other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ExistGroupByName message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          name_ = other.name_;
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "Name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          exists_ = other.exists_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Exists" field.</summary>
        public const int ExistsFieldNumber = 1;
        private bool exists_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Exists {
          get { return exists_; }
          set {
            exists_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Exists != other.Exists) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Exists != false) hash ^= Exists.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Exists != false) {
            output.WriteRawTag(8);
            output.WriteBool(Exists);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Exists != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Exists != false) {
            Exists = other.Exists;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Exists = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
