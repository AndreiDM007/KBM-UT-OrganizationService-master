// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GroupAuthorizationService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kebormed.Core.OrganizationService.Grpc.Generated {

  /// <summary>Holder for reflection information generated from GroupAuthorizationService.proto</summary>
  public static partial class GroupAuthorizationServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for GroupAuthorizationService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupAuthorizationServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9Hcm91cEF1dGhvcml6YXRpb25TZXJ2aWNlLnByb3RvEjBLZWJvcm1lZC5D",
            "b3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQaHmdvb2ds",
            "ZS9wcm90b2J1Zi93cmFwcGVycy5wcm90byLKBAoXUXVlcnlHcm91cEF1dGhv",
            "cml6YXRpb24aeAoKUGVybWlzc2lvbhI9ChhUYXJnZXRPcmdhbml6YXRpb25V",
            "c2VySWQYASABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIrCgdB",
            "bGxvd2VkGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRrHAQoH",
            "UmVxdWVzdBI+ChlSZXF1ZXN0T3JnYW5pemF0aW9uVXNlcklkGAEgASgLMhsu",
            "Z29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSRwoiVGFyZ2V0T3JnYW5pemF0",
            "aW9uVXNlcklkQ29sbGVjdGlvbhgCIAMoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQzMlZhbHVlEjMKDk9yZ2FuaXphdGlvbklkGAMgASgLMhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkludDMyVmFsdWUa6gEKCFJlc3BvbnNlEj4KGVJlcXVlc3RPcmdh",
            "bml6YXRpb25Vc2VySWQYASABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJW",
            "YWx1ZRIzCg5Pcmdhbml6YXRpb25JZBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1",
            "Zi5JbnQzMlZhbHVlEmkKC1Blcm1pc3Npb25zGAMgAygLMlQuS2Vib3JtZWQu",
            "Q29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLlF1ZXJ5",
            "R3JvdXBBdXRob3JpemF0aW9uLlBlcm1pc3Npb24y3gEKGUdyb3VwQXV0aG9y",
            "aXphdGlvblNlcnZpY2USwAEKF1F1ZXJ5R3JvdXBBdXRob3JpemF0aW9uElEu",
            "S2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJh",
            "dGVkLlF1ZXJ5R3JvdXBBdXRob3JpemF0aW9uLlJlcXVlc3QaUi5LZWJvcm1l",
            "ZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuUXVl",
            "cnlHcm91cEF1dGhvcml6YXRpb24uUmVzcG9uc2VCM6oCMEtlYm9ybWVkLkNv",
            "cmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Permission), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Permission.Parser, new[]{ "TargetOrganizationUserId", "Allowed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Request.Parser, new[]{ "RequestOrganizationUserId", "TargetOrganizationUserIdCollection", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Response.Parser, new[]{ "RequestOrganizationUserId", "OrganizationId", "Permissions" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class QueryGroupAuthorization : pb::IMessage<QueryGroupAuthorization> {
    private static readonly pb::MessageParser<QueryGroupAuthorization> _parser = new pb::MessageParser<QueryGroupAuthorization>(() => new QueryGroupAuthorization());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryGroupAuthorization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupAuthorizationServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGroupAuthorization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGroupAuthorization(QueryGroupAuthorization other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGroupAuthorization Clone() {
      return new QueryGroupAuthorization(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryGroupAuthorization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryGroupAuthorization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryGroupAuthorization other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryGroupAuthorization message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Permission : pb::IMessage<Permission> {
        private static readonly pb::MessageParser<Permission> _parser = new pb::MessageParser<Permission>(() => new Permission());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Permission> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Permission() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Permission(Permission other) : this() {
          TargetOrganizationUserId = other.TargetOrganizationUserId;
          Allowed = other.Allowed;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Permission Clone() {
          return new Permission(this);
        }

        /// <summary>Field number for the "TargetOrganizationUserId" field.</summary>
        public const int TargetOrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_targetOrganizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? targetOrganizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? TargetOrganizationUserId {
          get { return targetOrganizationUserId_; }
          set {
            targetOrganizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "Allowed" field.</summary>
        public const int AllowedFieldNumber = 2;
        private static readonly pb::FieldCodec<bool?> _single_allowed_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
        private bool? allowed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? Allowed {
          get { return allowed_; }
          set {
            allowed_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Permission);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Permission other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetOrganizationUserId != other.TargetOrganizationUserId) return false;
          if (Allowed != other.Allowed) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (targetOrganizationUserId_ != null) hash ^= TargetOrganizationUserId.GetHashCode();
          if (allowed_ != null) hash ^= Allowed.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (targetOrganizationUserId_ != null) {
            _single_targetOrganizationUserId_codec.WriteTagAndValue(output, TargetOrganizationUserId);
          }
          if (allowed_ != null) {
            _single_allowed_codec.WriteTagAndValue(output, Allowed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (targetOrganizationUserId_ != null) {
            size += _single_targetOrganizationUserId_codec.CalculateSizeWithTag(TargetOrganizationUserId);
          }
          if (allowed_ != null) {
            size += _single_allowed_codec.CalculateSizeWithTag(Allowed);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Permission other) {
          if (other == null) {
            return;
          }
          if (other.targetOrganizationUserId_ != null) {
            if (targetOrganizationUserId_ == null || other.TargetOrganizationUserId != 0) {
              TargetOrganizationUserId = other.TargetOrganizationUserId;
            }
          }
          if (other.allowed_ != null) {
            if (allowed_ == null || other.Allowed != false) {
              Allowed = other.Allowed;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_targetOrganizationUserId_codec.Read(input);
                if (targetOrganizationUserId_ == null || value != 0) {
                  TargetOrganizationUserId = value;
                }
                break;
              }
              case 18: {
                bool? value = _single_allowed_codec.Read(input);
                if (allowed_ == null || value != false) {
                  Allowed = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          RequestOrganizationUserId = other.RequestOrganizationUserId;
          targetOrganizationUserIdCollection_ = other.targetOrganizationUserIdCollection_.Clone();
          OrganizationId = other.OrganizationId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "RequestOrganizationUserId" field.</summary>
        public const int RequestOrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_requestOrganizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? requestOrganizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? RequestOrganizationUserId {
          get { return requestOrganizationUserId_; }
          set {
            requestOrganizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "TargetOrganizationUserIdCollection" field.</summary>
        public const int TargetOrganizationUserIdCollectionFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _repeated_targetOrganizationUserIdCollection_codec
            = pb::FieldCodec.ForStructWrapper<int>(18);
        private readonly pbc::RepeatedField<int?> targetOrganizationUserIdCollection_ = new pbc::RepeatedField<int?>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int?> TargetOrganizationUserIdCollection {
          get { return targetOrganizationUserIdCollection_; }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RequestOrganizationUserId != other.RequestOrganizationUserId) return false;
          if(!targetOrganizationUserIdCollection_.Equals(other.targetOrganizationUserIdCollection_)) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (requestOrganizationUserId_ != null) hash ^= RequestOrganizationUserId.GetHashCode();
          hash ^= targetOrganizationUserIdCollection_.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (requestOrganizationUserId_ != null) {
            _single_requestOrganizationUserId_codec.WriteTagAndValue(output, RequestOrganizationUserId);
          }
          targetOrganizationUserIdCollection_.WriteTo(output, _repeated_targetOrganizationUserIdCollection_codec);
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (requestOrganizationUserId_ != null) {
            size += _single_requestOrganizationUserId_codec.CalculateSizeWithTag(RequestOrganizationUserId);
          }
          size += targetOrganizationUserIdCollection_.CalculateSize(_repeated_targetOrganizationUserIdCollection_codec);
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.requestOrganizationUserId_ != null) {
            if (requestOrganizationUserId_ == null || other.RequestOrganizationUserId != 0) {
              RequestOrganizationUserId = other.RequestOrganizationUserId;
            }
          }
          targetOrganizationUserIdCollection_.Add(other.targetOrganizationUserIdCollection_);
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_requestOrganizationUserId_codec.Read(input);
                if (requestOrganizationUserId_ == null || value != 0) {
                  RequestOrganizationUserId = value;
                }
                break;
              }
              case 18: {
                targetOrganizationUserIdCollection_.AddEntriesFrom(input, _repeated_targetOrganizationUserIdCollection_codec);
                break;
              }
              case 26: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          RequestOrganizationUserId = other.RequestOrganizationUserId;
          OrganizationId = other.OrganizationId;
          permissions_ = other.permissions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "RequestOrganizationUserId" field.</summary>
        public const int RequestOrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_requestOrganizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? requestOrganizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? RequestOrganizationUserId {
          get { return requestOrganizationUserId_; }
          set {
            requestOrganizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "Permissions" field.</summary>
        public const int PermissionsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Permission> _repeated_permissions_codec
            = pb::FieldCodec.ForMessage(26, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Permission.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Permission> permissions_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Permission>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupAuthorization.Types.Permission> Permissions {
          get { return permissions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RequestOrganizationUserId != other.RequestOrganizationUserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if(!permissions_.Equals(other.permissions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (requestOrganizationUserId_ != null) hash ^= RequestOrganizationUserId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          hash ^= permissions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (requestOrganizationUserId_ != null) {
            _single_requestOrganizationUserId_codec.WriteTagAndValue(output, RequestOrganizationUserId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          permissions_.WriteTo(output, _repeated_permissions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (requestOrganizationUserId_ != null) {
            size += _single_requestOrganizationUserId_codec.CalculateSizeWithTag(RequestOrganizationUserId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          size += permissions_.CalculateSize(_repeated_permissions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.requestOrganizationUserId_ != null) {
            if (requestOrganizationUserId_ == null || other.RequestOrganizationUserId != 0) {
              RequestOrganizationUserId = other.RequestOrganizationUserId;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          permissions_.Add(other.permissions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_requestOrganizationUserId_codec.Read(input);
                if (requestOrganizationUserId_ == null || value != 0) {
                  RequestOrganizationUserId = value;
                }
                break;
              }
              case 18: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 26: {
                permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
