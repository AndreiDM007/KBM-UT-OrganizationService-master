// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AuthorizationService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kebormed.Core.OrganizationService.Grpc.Generated {

  /// <summary>Holder for reflection information generated from AuthorizationService.proto</summary>
  public static partial class AuthorizationServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for AuthorizationService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthorizationServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpBdXRob3JpemF0aW9uU2VydmljZS5wcm90bxIwS2Vib3JtZWQuQ29yZS5P",
            "cmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkGh5nb29nbGUvcHJv",
            "dG9idWYvd3JhcHBlcnMucHJvdG8i1AEKIFVwZGF0ZU9yZ2FuaXphdGlvblVz",
            "ZXJQZXJtaXNzaW9uGqMBCgdSZXF1ZXN0EjcKEk9yZ2FuaXphdGlvblVzZXJJ",
            "ZBgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEiwKBlVzZXJJ",
            "ZBgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIxCgtQZXJt",
            "aXNzaW9ucxgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRoK",
            "CghSZXNwb25zZSKPBwofUXVlcnlPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lv",
            "bhqxAgoHUmVxdWVzdBI3ChJPcmdhbml6YXRpb25Vc2VySWQYASABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIpCgRQYWdlGAMgASgLMhsuZ29v",
            "Z2xlLnByb3RvYnVmLkludDMyVmFsdWUSLQoIUGFnZVNpemUYBCABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIvCglEaXJlY3Rpb24YBSABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoHT3JkZXJCeRgGIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg5Pcmdhbml6YXRp",
            "b25JZBgHIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlGoMCCghS",
            "ZXNwb25zZRJwCgpQYWdpbmF0aW9uGAEgASgLMlwuS2Vib3JtZWQuQ29yZS5P",
            "cmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLlF1ZXJ5T3JnYW5p",
            "emF0aW9uVXNlclBlcm1pc3Npb24uUGFnaW5hdGlvbhKEAQoGUmVzdWx0GAIg",
            "AygLMnQuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMu",
            "R2VuZXJhdGVkLlF1ZXJ5T3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb24uT3Jn",
            "YW5pemF0aW9uVXNlclBlcm1pc3Npb25MaXN0Vmlldxo7CgpQYWdpbmF0aW9u",
            "Eg0KBVRvdGFsGAEgASgFEgwKBFBhZ2UYAiABKAUSEAoIUGFnZVNpemUYAyAB",
            "KAUa9AEKIk9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uTGlzdFZpZXcSNwoS",
            "T3JnYW5pemF0aW9uVXNlcklkGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDMyVmFsdWUSNAoOT3JnYW5pemF0aW9uSWQYAiABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSLAoGVXNlcklkGAMgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEjEKC1Blcm1pc3Npb25zGAQgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIvICCiZRdWVyeU9yZ2FuaXphdGlv",
            "blVzZXJBbmRSb2xlUGVybWlzc2lvbhpsCgdSZXF1ZXN0EiwKBlVzZXJJZBgB",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg5Pcmdhbml6",
            "YXRpb25JZBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlGtkB",
            "CghSZXNwb25zZRI3ChJPcmdhbml6YXRpb25Vc2VySWQYASABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50MzJWYWx1ZRIzCg5Pcmdhbml6YXRpb25JZBgCIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEiwKBlVzZXJJZBgDIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIxCgtQZXJtaXNzaW9u",
            "cxgEIAMoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSLwAQoaQ3Jl",
            "YXRlT3JnYW5pemF0aW9uVXNlclJvbGUapQEKB1JlcXVlc3QSNwoST3JnYW5p",
            "emF0aW9uVXNlcklkGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFs",
            "dWUSLAoGUm9sZUlkGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEjMKDk9yZ2FuaXphdGlvbklkGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDMyVmFsdWUaKgoIUmVzcG9uc2USHgoWT3JnYW5pemF0aW9uVXNlclJv",
            "bGVJZBgBIAEoBSLQAQoaRGVsZXRlT3JnYW5pemF0aW9uVXNlclJvbGUapQEK",
            "B1JlcXVlc3QSNwoST3JnYW5pemF0aW9uVXNlcklkGAEgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDMyVmFsdWUSLAoGUm9sZUlkGAIgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjMKDk9yZ2FuaXphdGlvbklkGAMgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUaCgoIUmVzcG9uc2Ui6gYK",
            "GVF1ZXJ5T3JnYW5pemF0aW9uVXNlclJvbGUa3wIKB1JlcXVlc3QSNwoST3Jn",
            "YW5pemF0aW9uVXNlcklkGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMy",
            "VmFsdWUSLAoGUm9sZUlkGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEjMKDk9yZ2FuaXphdGlvbklkGAMgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDMyVmFsdWUSKQoEUGFnZRgEIAEoCzIbLmdvb2dsZS5wcm90b2J1",
            "Zi5JbnQzMlZhbHVlEi0KCFBhZ2VTaXplGAUgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDMyVmFsdWUSLwoJRGlyZWN0aW9uGAYgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEi0KB09yZGVyQnkYByABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUa8AEKCFJlc3BvbnNlEmoKClBhZ2luYXRp",
            "b24YASABKAsyVi5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2Uu",
            "R3JwYy5HZW5lcmF0ZWQuUXVlcnlPcmdhbml6YXRpb25Vc2VyUm9sZS5QYWdp",
            "bmF0aW9uEngKBlJlc3VsdBgCIAMoCzJoLktlYm9ybWVkLkNvcmUuT3JnYW5p",
            "emF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5RdWVyeU9yZ2FuaXphdGlv",
            "blVzZXJSb2xlLk9yZ2FuaXphdGlvblVzZXJSb2xlTGlzdFZpZXcaOwoKUGFn",
            "aW5hdGlvbhINCgVUb3RhbBgBIAEoBRIMCgRQYWdlGAIgASgFEhAKCFBhZ2VT",
            "aXplGAMgASgFGroBChxPcmdhbml6YXRpb25Vc2VyUm9sZUxpc3RWaWV3EjcK",
            "Ek9yZ2FuaXphdGlvblVzZXJJZBgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQzMlZhbHVlEiwKBlJvbGVJZBgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIzCg5Pcmdhbml6YXRpb25JZBgDIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQzMlZhbHVlIoUBChdFeGlzdFJvbGVQZXJtaXNzaW9uQnlJ",
            "ZBpOCgdSZXF1ZXN0Eg4KBlJvbGVJZBgBIAEoCRIzCg5Pcmdhbml6YXRpb25J",
            "ZBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlGhoKCFJlc3Bv",
            "bnNlEg4KBkV4aXN0cxgBIAEoCCKjAwoUQ3JlYXRlUm9sZVBlcm1pc3Npb24a",
            "5AIKB1JlcXVlc3QSMwoOT3JnYW5pemF0aW9uSWQYASABKAsyGy5nb29nbGUu",
            "cHJvdG9idWYuSW50MzJWYWx1ZRIsCgZSb2xlSWQYAiABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSLgoIUm9sZU5hbWUYAyABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLUGVybWlzc2lvbnMYBCABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLRGVzY3JpcHRpb24Y",
            "BSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoJSXNEZWZh",
            "dWx0GAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIxCgtEaXNw",
            "bGF5TmFtZRgHIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRok",
            "CghSZXNwb25zZRIYChBSb2xlUGVybWlzc2lvbklkGAEgASgFItoCChRVcGRh",
            "dGVSb2xlUGVybWlzc2lvbhq1AgoHUmVxdWVzdBIzCg5Pcmdhbml6YXRpb25J",
            "ZBgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEiwKBlJvbGVJ",
            "ZBgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCghSb2xl",
            "TmFtZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIxCgtQ",
            "ZXJtaXNzaW9ucxgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRIxCgtEZXNjcmlwdGlvbhgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZRIxCgtEaXNwbGF5TmFtZRgHIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRoKCghSZXNwb25zZSKQAQoURGVsZXRlUm9sZVBlcm1p",
            "c3Npb24abAoHUmVxdWVzdBIzCg5Pcmdhbml6YXRpb25JZBgBIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEiwKBlJvbGVJZBgCIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRoKCghSZXNwb25zZSKCCAoTUXVl",
            "cnlSb2xlUGVybWlzc2lvbhrWAgoHUmVxdWVzdBIzCg5Pcmdhbml6YXRpb25J",
            "ZBgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEiwKBlJvbGVJ",
            "ZBgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIpCgRQYWdl",
            "GAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLQoIUGFnZVNp",
            "emUYBCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIvCglEaXJl",
            "Y3Rpb24YBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoH",
            "T3JkZXJCeRgGIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIu",
            "CghSb2xlTmFtZRgHIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRreAQoIUmVzcG9uc2USZAoKUGFnaW5hdGlvbhgBIAEoCzJQLktlYm9ybWVk",
            "LkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5RdWVy",
            "eVJvbGVQZXJtaXNzaW9uLlBhZ2luYXRpb24SbAoGUmVzdWx0GAIgAygLMlwu",
            "S2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJh",
            "dGVkLlF1ZXJ5Um9sZVBlcm1pc3Npb24uUm9sZVBlcm1pc3Npb25MaXN0Vmll",
            "dxo7CgpQYWdpbmF0aW9uEg0KBVRvdGFsGAEgASgFEgwKBFBhZ2UYAiABKAUS",
            "EAoIUGFnZVNpemUYAyABKAUa8wIKFlJvbGVQZXJtaXNzaW9uTGlzdFZpZXcS",
            "MwoOT3JnYW5pemF0aW9uSWQYASABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "MzJWYWx1ZRIsCgZSb2xlSWQYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUSLgoIUm9sZU5hbWUYAyABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSMQoLUGVybWlzc2lvbnMYBCABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSMQoLRGVzY3JpcHRpb24YBSABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoJSXNEZWZhdWx0GAYgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIxCgtEaXNwbGF5TmFtZRgHIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZTLIEQoUQXV0aG9yaXph",
            "dGlvblNlcnZpY2US2wEKIFVwZGF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNz",
            "aW9uElouS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMu",
            "R2VuZXJhdGVkLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJQZXJtaXNzaW9uLlJl",
            "cXVlc3QaWy5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3Jw",
            "Yy5HZW5lcmF0ZWQuVXBkYXRlT3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb24u",
            "UmVzcG9uc2US2AEKH1F1ZXJ5T3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb24S",
            "WS5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5l",
            "cmF0ZWQuUXVlcnlPcmdhbml6YXRpb25Vc2VyUGVybWlzc2lvbi5SZXF1ZXN0",
            "GlouS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2Vu",
            "ZXJhdGVkLlF1ZXJ5T3JnYW5pemF0aW9uVXNlclBlcm1pc3Npb24uUmVzcG9u",
            "c2US7QEKJlF1ZXJ5T3JnYW5pemF0aW9uVXNlckFuZFJvbGVQZXJtaXNzaW9u",
            "EmAuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2Vu",
            "ZXJhdGVkLlF1ZXJ5T3JnYW5pemF0aW9uVXNlckFuZFJvbGVQZXJtaXNzaW9u",
            "LlJlcXVlc3QaYS5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2Uu",
            "R3JwYy5HZW5lcmF0ZWQuUXVlcnlPcmdhbml6YXRpb25Vc2VyQW5kUm9sZVBl",
            "cm1pc3Npb24uUmVzcG9uc2USyQEKGkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJS",
            "b2xlElQuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMu",
            "R2VuZXJhdGVkLkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJSb2xlLlJlcXVlc3Qa",
            "VS5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5l",
            "cmF0ZWQuQ3JlYXRlT3JnYW5pemF0aW9uVXNlclJvbGUuUmVzcG9uc2USyQEK",
            "GkRlbGV0ZU9yZ2FuaXphdGlvblVzZXJSb2xlElQuS2Vib3JtZWQuQ29yZS5P",
            "cmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLkRlbGV0ZU9yZ2Fu",
            "aXphdGlvblVzZXJSb2xlLlJlcXVlc3QaVS5LZWJvcm1lZC5Db3JlLk9yZ2Fu",
            "aXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuRGVsZXRlT3JnYW5pemF0",
            "aW9uVXNlclJvbGUuUmVzcG9uc2USxgEKGVF1ZXJ5T3JnYW5pemF0aW9uVXNl",
            "clJvbGUSUy5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3Jw",
            "Yy5HZW5lcmF0ZWQuUXVlcnlPcmdhbml6YXRpb25Vc2VyUm9sZS5SZXF1ZXN0",
            "GlQuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2Vu",
            "ZXJhdGVkLlF1ZXJ5T3JnYW5pemF0aW9uVXNlclJvbGUuUmVzcG9uc2USwAEK",
            "F0V4aXN0Um9sZVBlcm1pc3Npb25CeUlkElEuS2Vib3JtZWQuQ29yZS5Pcmdh",
            "bml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLkV4aXN0Um9sZVBlcm1p",
            "c3Npb25CeUlkLlJlcXVlc3QaUi5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlv",
            "blNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuRXhpc3RSb2xlUGVybWlzc2lvbkJ5",
            "SWQuUmVzcG9uc2UStwEKFENyZWF0ZVJvbGVQZXJtaXNzaW9uEk4uS2Vib3Jt",
            "ZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLkNy",
            "ZWF0ZVJvbGVQZXJtaXNzaW9uLlJlcXVlc3QaTy5LZWJvcm1lZC5Db3JlLk9y",
            "Z2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuQ3JlYXRlUm9sZVBl",
            "cm1pc3Npb24uUmVzcG9uc2UStwEKFFVwZGF0ZVJvbGVQZXJtaXNzaW9uEk4u",
            "S2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJh",
            "dGVkLlVwZGF0ZVJvbGVQZXJtaXNzaW9uLlJlcXVlc3QaTy5LZWJvcm1lZC5D",
            "b3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuVXBkYXRl",
            "Um9sZVBlcm1pc3Npb24uUmVzcG9uc2UStwEKFERlbGV0ZVJvbGVQZXJtaXNz",
            "aW9uEk4uS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMu",
            "R2VuZXJhdGVkLkRlbGV0ZVJvbGVQZXJtaXNzaW9uLlJlcXVlc3QaTy5LZWJv",
            "cm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQu",
            "RGVsZXRlUm9sZVBlcm1pc3Npb24uUmVzcG9uc2UStAEKE1F1ZXJ5Um9sZVBl",
            "cm1pc3Npb24STS5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2Uu",
            "R3JwYy5HZW5lcmF0ZWQuUXVlcnlSb2xlUGVybWlzc2lvbi5SZXF1ZXN0Gk4u",
            "S2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJh",
            "dGVkLlF1ZXJ5Um9sZVBlcm1pc3Npb24uUmVzcG9uc2VCM6oCMEtlYm9ybWVk",
            "LkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZGIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUserPermission), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUserPermission.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUserPermission.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUserPermission.Types.Request.Parser, new[]{ "OrganizationUserId", "UserId", "Permissions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUserPermission.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUserPermission.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Request.Parser, new[]{ "OrganizationUserId", "Page", "PageSize", "Direction", "OrderBy", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Response.Parser, new[]{ "Pagination", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Pagination), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Pagination.Parser, new[]{ "Total", "Page", "PageSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.OrganizationUserPermissionListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.OrganizationUserPermissionListView.Parser, new[]{ "OrganizationUserId", "OrganizationId", "UserId", "Permissions" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserAndRolePermission), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserAndRolePermission.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserAndRolePermission.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserAndRolePermission.Types.Request.Parser, new[]{ "UserId", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserAndRolePermission.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserAndRolePermission.Types.Response.Parser, new[]{ "OrganizationUserId", "OrganizationId", "UserId", "Permissions" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUserRole), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUserRole.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUserRole.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUserRole.Types.Request.Parser, new[]{ "OrganizationUserId", "RoleId", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUserRole.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUserRole.Types.Response.Parser, new[]{ "OrganizationUserRoleId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUserRole), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUserRole.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUserRole.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUserRole.Types.Request.Parser, new[]{ "OrganizationUserId", "RoleId", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUserRole.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUserRole.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Request.Parser, new[]{ "OrganizationUserId", "RoleId", "OrganizationId", "Page", "PageSize", "Direction", "OrderBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Response.Parser, new[]{ "Pagination", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Pagination), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Pagination.Parser, new[]{ "Total", "Page", "PageSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.OrganizationUserRoleListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.OrganizationUserRoleListView.Parser, new[]{ "OrganizationUserId", "RoleId", "OrganizationId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistRolePermissionById), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistRolePermissionById.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistRolePermissionById.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistRolePermissionById.Types.Request.Parser, new[]{ "RoleId", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistRolePermissionById.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistRolePermissionById.Types.Response.Parser, new[]{ "Exists" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateRolePermission), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateRolePermission.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateRolePermission.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateRolePermission.Types.Request.Parser, new[]{ "OrganizationId", "RoleId", "RoleName", "Permissions", "Description", "IsDefault", "DisplayName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateRolePermission.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateRolePermission.Types.Response.Parser, new[]{ "RolePermissionId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateRolePermission), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateRolePermission.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateRolePermission.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateRolePermission.Types.Request.Parser, new[]{ "OrganizationId", "RoleId", "RoleName", "Permissions", "Description", "DisplayName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateRolePermission.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateRolePermission.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteRolePermission), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteRolePermission.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteRolePermission.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteRolePermission.Types.Request.Parser, new[]{ "OrganizationId", "RoleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteRolePermission.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteRolePermission.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Request.Parser, new[]{ "OrganizationId", "RoleId", "Page", "PageSize", "Direction", "OrderBy", "RoleName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Response.Parser, new[]{ "Pagination", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Pagination), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Pagination.Parser, new[]{ "Total", "Page", "PageSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.RolePermissionListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.RolePermissionListView.Parser, new[]{ "OrganizationId", "RoleId", "RoleName", "Permissions", "Description", "IsDefault", "DisplayName" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UpdateOrganizationUserPermission : pb::IMessage<UpdateOrganizationUserPermission> {
    private static readonly pb::MessageParser<UpdateOrganizationUserPermission> _parser = new pb::MessageParser<UpdateOrganizationUserPermission>(() => new UpdateOrganizationUserPermission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateOrganizationUserPermission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOrganizationUserPermission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOrganizationUserPermission(UpdateOrganizationUserPermission other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOrganizationUserPermission Clone() {
      return new UpdateOrganizationUserPermission(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateOrganizationUserPermission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateOrganizationUserPermission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateOrganizationUserPermission other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateOrganizationUserPermission message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUserPermission.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          UserId = other.UserId;
          Permissions = other.Permissions;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_userId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string userId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = value;
          }
        }

        /// <summary>Field number for the "Permissions" field.</summary>
        public const int PermissionsFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_permissions_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string permissions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Permissions {
          get { return permissions_; }
          set {
            permissions_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (UserId != other.UserId) return false;
          if (Permissions != other.Permissions) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (userId_ != null) hash ^= UserId.GetHashCode();
          if (permissions_ != null) hash ^= Permissions.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (userId_ != null) {
            _single_userId_codec.WriteTagAndValue(output, UserId);
          }
          if (permissions_ != null) {
            _single_permissions_codec.WriteTagAndValue(output, Permissions);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (userId_ != null) {
            size += _single_userId_codec.CalculateSizeWithTag(UserId);
          }
          if (permissions_ != null) {
            size += _single_permissions_codec.CalculateSizeWithTag(Permissions);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.userId_ != null) {
            if (userId_ == null || other.UserId != "") {
              UserId = other.UserId;
            }
          }
          if (other.permissions_ != null) {
            if (permissions_ == null || other.Permissions != "") {
              Permissions = other.Permissions;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                string value = _single_userId_codec.Read(input);
                if (userId_ == null || value != "") {
                  UserId = value;
                }
                break;
              }
              case 26: {
                string value = _single_permissions_codec.Read(input);
                if (permissions_ == null || value != "") {
                  Permissions = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUserPermission.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryOrganizationUserPermission : pb::IMessage<QueryOrganizationUserPermission> {
    private static readonly pb::MessageParser<QueryOrganizationUserPermission> _parser = new pb::MessageParser<QueryOrganizationUserPermission>(() => new QueryOrganizationUserPermission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOrganizationUserPermission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUserPermission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUserPermission(QueryOrganizationUserPermission other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUserPermission Clone() {
      return new QueryOrganizationUserPermission(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOrganizationUserPermission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOrganizationUserPermission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOrganizationUserPermission other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryOrganizationUserPermission message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          Page = other.Page;
          PageSize = other.PageSize;
          Direction = other.Direction;
          OrderBy = other.OrderBy;
          OrganizationId = other.OrganizationId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_page_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 4;
        private static readonly pb::FieldCodec<int?> _single_pageSize_codec = pb::FieldCodec.ForStructWrapper<int>(34);
        private int? pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        /// <summary>Field number for the "Direction" field.</summary>
        public const int DirectionFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_direction_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string direction_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Direction {
          get { return direction_; }
          set {
            direction_ = value;
          }
        }

        /// <summary>Field number for the "OrderBy" field.</summary>
        public const int OrderByFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(50);
        private string orderBy_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderBy {
          get { return orderBy_; }
          set {
            orderBy_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 7;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(58);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          if (Direction != other.Direction) return false;
          if (OrderBy != other.OrderBy) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (page_ != null) hash ^= Page.GetHashCode();
          if (pageSize_ != null) hash ^= PageSize.GetHashCode();
          if (direction_ != null) hash ^= Direction.GetHashCode();
          if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (page_ != null) {
            _single_page_codec.WriteTagAndValue(output, Page);
          }
          if (pageSize_ != null) {
            _single_pageSize_codec.WriteTagAndValue(output, PageSize);
          }
          if (direction_ != null) {
            _single_direction_codec.WriteTagAndValue(output, Direction);
          }
          if (orderBy_ != null) {
            _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (page_ != null) {
            size += _single_page_codec.CalculateSizeWithTag(Page);
          }
          if (pageSize_ != null) {
            size += _single_pageSize_codec.CalculateSizeWithTag(PageSize);
          }
          if (direction_ != null) {
            size += _single_direction_codec.CalculateSizeWithTag(Direction);
          }
          if (orderBy_ != null) {
            size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.page_ != null) {
            if (page_ == null || other.Page != 0) {
              Page = other.Page;
            }
          }
          if (other.pageSize_ != null) {
            if (pageSize_ == null || other.PageSize != 0) {
              PageSize = other.PageSize;
            }
          }
          if (other.direction_ != null) {
            if (direction_ == null || other.Direction != "") {
              Direction = other.Direction;
            }
          }
          if (other.orderBy_ != null) {
            if (orderBy_ == null || other.OrderBy != "") {
              OrderBy = other.OrderBy;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 26: {
                int? value = _single_page_codec.Read(input);
                if (page_ == null || value != 0) {
                  Page = value;
                }
                break;
              }
              case 34: {
                int? value = _single_pageSize_codec.Read(input);
                if (pageSize_ == null || value != 0) {
                  PageSize = value;
                }
                break;
              }
              case 42: {
                string value = _single_direction_codec.Read(input);
                if (direction_ == null || value != "") {
                  Direction = value;
                }
                break;
              }
              case 50: {
                string value = _single_orderBy_codec.Read(input);
                if (orderBy_ == null || value != "") {
                  OrderBy = value;
                }
                break;
              }
              case 58: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
          result_ = other.result_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Pagination" field.</summary>
        public const int PaginationFieldNumber = 1;
        private global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Pagination pagination_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Pagination Pagination {
          get { return pagination_; }
          set {
            pagination_ = value;
          }
        }

        /// <summary>Field number for the "Result" field.</summary>
        public const int ResultFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.OrganizationUserPermissionListView> _repeated_result_codec
            = pb::FieldCodec.ForMessage(18, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.OrganizationUserPermissionListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.OrganizationUserPermissionListView> result_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.OrganizationUserPermissionListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.OrganizationUserPermissionListView> Result {
          get { return result_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Pagination, other.Pagination)) return false;
          if(!result_.Equals(other.result_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (pagination_ != null) hash ^= Pagination.GetHashCode();
          hash ^= result_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (pagination_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Pagination);
          }
          result_.WriteTo(output, _repeated_result_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (pagination_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
          }
          size += result_.CalculateSize(_repeated_result_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.pagination_ != null) {
            if (pagination_ == null) {
              pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Pagination();
            }
            Pagination.MergeFrom(other.Pagination);
          }
          result_.Add(other.result_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (pagination_ == null) {
                  pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Types.Pagination();
                }
                input.ReadMessage(pagination_);
                break;
              }
              case 18: {
                result_.AddEntriesFrom(input, _repeated_result_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Pagination : pb::IMessage<Pagination> {
        private static readonly pb::MessageParser<Pagination> _parser = new pb::MessageParser<Pagination>(() => new Pagination());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Pagination> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination(Pagination other) : this() {
          total_ = other.total_;
          page_ = other.page_;
          pageSize_ = other.pageSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination Clone() {
          return new Pagination(this);
        }

        /// <summary>Field number for the "Total" field.</summary>
        public const int TotalFieldNumber = 1;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 2;
        private int page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 3;
        private int pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Pagination);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Pagination other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Total != other.Total) return false;
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Page != 0) hash ^= Page.GetHashCode();
          if (PageSize != 0) hash ^= PageSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Total != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Total);
          }
          if (Page != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Page);
          }
          if (PageSize != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(PageSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Page != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
          }
          if (PageSize != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Pagination other) {
          if (other == null) {
            return;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Page != 0) {
            Page = other.Page;
          }
          if (other.PageSize != 0) {
            PageSize = other.PageSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Total = input.ReadInt32();
                break;
              }
              case 16: {
                Page = input.ReadInt32();
                break;
              }
              case 24: {
                PageSize = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class OrganizationUserPermissionListView : pb::IMessage<OrganizationUserPermissionListView> {
        private static readonly pb::MessageParser<OrganizationUserPermissionListView> _parser = new pb::MessageParser<OrganizationUserPermissionListView>(() => new OrganizationUserPermissionListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OrganizationUserPermissionListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserPermission.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserPermissionListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserPermissionListView(OrganizationUserPermissionListView other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          OrganizationId = other.OrganizationId;
          UserId = other.UserId;
          Permissions = other.Permissions;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserPermissionListView Clone() {
          return new OrganizationUserPermissionListView(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_organizationId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_userId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string userId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = value;
          }
        }

        /// <summary>Field number for the "Permissions" field.</summary>
        public const int PermissionsFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_permissions_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string permissions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Permissions {
          get { return permissions_; }
          set {
            permissions_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OrganizationUserPermissionListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OrganizationUserPermissionListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (UserId != other.UserId) return false;
          if (Permissions != other.Permissions) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (userId_ != null) hash ^= UserId.GetHashCode();
          if (permissions_ != null) hash ^= Permissions.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (userId_ != null) {
            _single_userId_codec.WriteTagAndValue(output, UserId);
          }
          if (permissions_ != null) {
            _single_permissions_codec.WriteTagAndValue(output, Permissions);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (userId_ != null) {
            size += _single_userId_codec.CalculateSizeWithTag(UserId);
          }
          if (permissions_ != null) {
            size += _single_permissions_codec.CalculateSizeWithTag(Permissions);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OrganizationUserPermissionListView other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != "") {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.userId_ != null) {
            if (userId_ == null || other.UserId != "") {
              UserId = other.UserId;
            }
          }
          if (other.permissions_ != null) {
            if (permissions_ == null || other.Permissions != "") {
              Permissions = other.Permissions;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                string value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != "") {
                  OrganizationId = value;
                }
                break;
              }
              case 26: {
                string value = _single_userId_codec.Read(input);
                if (userId_ == null || value != "") {
                  UserId = value;
                }
                break;
              }
              case 34: {
                string value = _single_permissions_codec.Read(input);
                if (permissions_ == null || value != "") {
                  Permissions = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryOrganizationUserAndRolePermission : pb::IMessage<QueryOrganizationUserAndRolePermission> {
    private static readonly pb::MessageParser<QueryOrganizationUserAndRolePermission> _parser = new pb::MessageParser<QueryOrganizationUserAndRolePermission>(() => new QueryOrganizationUserAndRolePermission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOrganizationUserAndRolePermission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUserAndRolePermission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUserAndRolePermission(QueryOrganizationUserAndRolePermission other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUserAndRolePermission Clone() {
      return new QueryOrganizationUserAndRolePermission(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOrganizationUserAndRolePermission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOrganizationUserAndRolePermission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOrganizationUserAndRolePermission other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryOrganizationUserAndRolePermission message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserAndRolePermission.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          UserId = other.UserId;
          OrganizationId = other.OrganizationId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _single_userId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
        private string userId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (userId_ != null) hash ^= UserId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (userId_ != null) {
            _single_userId_codec.WriteTagAndValue(output, UserId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (userId_ != null) {
            size += _single_userId_codec.CalculateSizeWithTag(UserId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.userId_ != null) {
            if (userId_ == null || other.UserId != "") {
              UserId = other.UserId;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                string value = _single_userId_codec.Read(input);
                if (userId_ == null || value != "") {
                  UserId = value;
                }
                break;
              }
              case 18: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserAndRolePermission.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          OrganizationId = other.OrganizationId;
          UserId = other.UserId;
          permissions_ = other.permissions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_userId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string userId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = value;
          }
        }

        /// <summary>Field number for the "Permissions" field.</summary>
        public const int PermissionsFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _repeated_permissions_codec
            = pb::FieldCodec.ForClassWrapper<string>(34);
        private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Permissions {
          get { return permissions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (UserId != other.UserId) return false;
          if(!permissions_.Equals(other.permissions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (userId_ != null) hash ^= UserId.GetHashCode();
          hash ^= permissions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (userId_ != null) {
            _single_userId_codec.WriteTagAndValue(output, UserId);
          }
          permissions_.WriteTo(output, _repeated_permissions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (userId_ != null) {
            size += _single_userId_codec.CalculateSizeWithTag(UserId);
          }
          size += permissions_.CalculateSize(_repeated_permissions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.userId_ != null) {
            if (userId_ == null || other.UserId != "") {
              UserId = other.UserId;
            }
          }
          permissions_.Add(other.permissions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 26: {
                string value = _single_userId_codec.Read(input);
                if (userId_ == null || value != "") {
                  UserId = value;
                }
                break;
              }
              case 34: {
                permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CreateOrganizationUserRole : pb::IMessage<CreateOrganizationUserRole> {
    private static readonly pb::MessageParser<CreateOrganizationUserRole> _parser = new pb::MessageParser<CreateOrganizationUserRole>(() => new CreateOrganizationUserRole());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOrganizationUserRole> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrganizationUserRole() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrganizationUserRole(CreateOrganizationUserRole other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrganizationUserRole Clone() {
      return new CreateOrganizationUserRole(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOrganizationUserRole);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOrganizationUserRole other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOrganizationUserRole other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateOrganizationUserRole message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUserRole.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          RoleId = other.RoleId;
          OrganizationId = other.OrganizationId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_roleId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string roleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (RoleId != other.RoleId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (roleId_ != null) hash ^= RoleId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (roleId_ != null) {
            _single_roleId_codec.WriteTagAndValue(output, RoleId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (roleId_ != null) {
            size += _single_roleId_codec.CalculateSizeWithTag(RoleId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.roleId_ != null) {
            if (roleId_ == null || other.RoleId != "") {
              RoleId = other.RoleId;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                string value = _single_roleId_codec.Read(input);
                if (roleId_ == null || value != "") {
                  RoleId = value;
                }
                break;
              }
              case 26: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUserRole.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          organizationUserRoleId_ = other.organizationUserRoleId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "OrganizationUserRoleId" field.</summary>
        public const int OrganizationUserRoleIdFieldNumber = 1;
        private int organizationUserRoleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserRoleId {
          get { return organizationUserRoleId_; }
          set {
            organizationUserRoleId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserRoleId != other.OrganizationUserRoleId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserRoleId != 0) hash ^= OrganizationUserRoleId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserRoleId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserRoleId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserRoleId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserRoleId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserRoleId != 0) {
            OrganizationUserRoleId = other.OrganizationUserRoleId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserRoleId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteOrganizationUserRole : pb::IMessage<DeleteOrganizationUserRole> {
    private static readonly pb::MessageParser<DeleteOrganizationUserRole> _parser = new pb::MessageParser<DeleteOrganizationUserRole>(() => new DeleteOrganizationUserRole());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteOrganizationUserRole> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOrganizationUserRole() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOrganizationUserRole(DeleteOrganizationUserRole other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOrganizationUserRole Clone() {
      return new DeleteOrganizationUserRole(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteOrganizationUserRole);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteOrganizationUserRole other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteOrganizationUserRole other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteOrganizationUserRole message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUserRole.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          RoleId = other.RoleId;
          OrganizationId = other.OrganizationId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_roleId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string roleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (RoleId != other.RoleId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (roleId_ != null) hash ^= RoleId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (roleId_ != null) {
            _single_roleId_codec.WriteTagAndValue(output, RoleId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (roleId_ != null) {
            size += _single_roleId_codec.CalculateSizeWithTag(RoleId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.roleId_ != null) {
            if (roleId_ == null || other.RoleId != "") {
              RoleId = other.RoleId;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                string value = _single_roleId_codec.Read(input);
                if (roleId_ == null || value != "") {
                  RoleId = value;
                }
                break;
              }
              case 26: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUserRole.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryOrganizationUserRole : pb::IMessage<QueryOrganizationUserRole> {
    private static readonly pb::MessageParser<QueryOrganizationUserRole> _parser = new pb::MessageParser<QueryOrganizationUserRole>(() => new QueryOrganizationUserRole());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOrganizationUserRole> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUserRole() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUserRole(QueryOrganizationUserRole other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUserRole Clone() {
      return new QueryOrganizationUserRole(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOrganizationUserRole);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOrganizationUserRole other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOrganizationUserRole other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryOrganizationUserRole message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          RoleId = other.RoleId;
          OrganizationId = other.OrganizationId;
          Page = other.Page;
          PageSize = other.PageSize;
          Direction = other.Direction;
          OrderBy = other.OrderBy;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_roleId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string roleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 4;
        private static readonly pb::FieldCodec<int?> _single_page_codec = pb::FieldCodec.ForStructWrapper<int>(34);
        private int? page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 5;
        private static readonly pb::FieldCodec<int?> _single_pageSize_codec = pb::FieldCodec.ForStructWrapper<int>(42);
        private int? pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        /// <summary>Field number for the "Direction" field.</summary>
        public const int DirectionFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _single_direction_codec = pb::FieldCodec.ForClassWrapper<string>(50);
        private string direction_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Direction {
          get { return direction_; }
          set {
            direction_ = value;
          }
        }

        /// <summary>Field number for the "OrderBy" field.</summary>
        public const int OrderByFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(58);
        private string orderBy_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderBy {
          get { return orderBy_; }
          set {
            orderBy_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (RoleId != other.RoleId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          if (Direction != other.Direction) return false;
          if (OrderBy != other.OrderBy) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (roleId_ != null) hash ^= RoleId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (page_ != null) hash ^= Page.GetHashCode();
          if (pageSize_ != null) hash ^= PageSize.GetHashCode();
          if (direction_ != null) hash ^= Direction.GetHashCode();
          if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (roleId_ != null) {
            _single_roleId_codec.WriteTagAndValue(output, RoleId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (page_ != null) {
            _single_page_codec.WriteTagAndValue(output, Page);
          }
          if (pageSize_ != null) {
            _single_pageSize_codec.WriteTagAndValue(output, PageSize);
          }
          if (direction_ != null) {
            _single_direction_codec.WriteTagAndValue(output, Direction);
          }
          if (orderBy_ != null) {
            _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (roleId_ != null) {
            size += _single_roleId_codec.CalculateSizeWithTag(RoleId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (page_ != null) {
            size += _single_page_codec.CalculateSizeWithTag(Page);
          }
          if (pageSize_ != null) {
            size += _single_pageSize_codec.CalculateSizeWithTag(PageSize);
          }
          if (direction_ != null) {
            size += _single_direction_codec.CalculateSizeWithTag(Direction);
          }
          if (orderBy_ != null) {
            size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.roleId_ != null) {
            if (roleId_ == null || other.RoleId != "") {
              RoleId = other.RoleId;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.page_ != null) {
            if (page_ == null || other.Page != 0) {
              Page = other.Page;
            }
          }
          if (other.pageSize_ != null) {
            if (pageSize_ == null || other.PageSize != 0) {
              PageSize = other.PageSize;
            }
          }
          if (other.direction_ != null) {
            if (direction_ == null || other.Direction != "") {
              Direction = other.Direction;
            }
          }
          if (other.orderBy_ != null) {
            if (orderBy_ == null || other.OrderBy != "") {
              OrderBy = other.OrderBy;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                string value = _single_roleId_codec.Read(input);
                if (roleId_ == null || value != "") {
                  RoleId = value;
                }
                break;
              }
              case 26: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 34: {
                int? value = _single_page_codec.Read(input);
                if (page_ == null || value != 0) {
                  Page = value;
                }
                break;
              }
              case 42: {
                int? value = _single_pageSize_codec.Read(input);
                if (pageSize_ == null || value != 0) {
                  PageSize = value;
                }
                break;
              }
              case 50: {
                string value = _single_direction_codec.Read(input);
                if (direction_ == null || value != "") {
                  Direction = value;
                }
                break;
              }
              case 58: {
                string value = _single_orderBy_codec.Read(input);
                if (orderBy_ == null || value != "") {
                  OrderBy = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
          result_ = other.result_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Pagination" field.</summary>
        public const int PaginationFieldNumber = 1;
        private global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Pagination pagination_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Pagination Pagination {
          get { return pagination_; }
          set {
            pagination_ = value;
          }
        }

        /// <summary>Field number for the "Result" field.</summary>
        public const int ResultFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.OrganizationUserRoleListView> _repeated_result_codec
            = pb::FieldCodec.ForMessage(18, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.OrganizationUserRoleListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.OrganizationUserRoleListView> result_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.OrganizationUserRoleListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.OrganizationUserRoleListView> Result {
          get { return result_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Pagination, other.Pagination)) return false;
          if(!result_.Equals(other.result_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (pagination_ != null) hash ^= Pagination.GetHashCode();
          hash ^= result_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (pagination_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Pagination);
          }
          result_.WriteTo(output, _repeated_result_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (pagination_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
          }
          size += result_.CalculateSize(_repeated_result_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.pagination_ != null) {
            if (pagination_ == null) {
              pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Pagination();
            }
            Pagination.MergeFrom(other.Pagination);
          }
          result_.Add(other.result_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (pagination_ == null) {
                  pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Types.Pagination();
                }
                input.ReadMessage(pagination_);
                break;
              }
              case 18: {
                result_.AddEntriesFrom(input, _repeated_result_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Pagination : pb::IMessage<Pagination> {
        private static readonly pb::MessageParser<Pagination> _parser = new pb::MessageParser<Pagination>(() => new Pagination());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Pagination> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination(Pagination other) : this() {
          total_ = other.total_;
          page_ = other.page_;
          pageSize_ = other.pageSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination Clone() {
          return new Pagination(this);
        }

        /// <summary>Field number for the "Total" field.</summary>
        public const int TotalFieldNumber = 1;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 2;
        private int page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 3;
        private int pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Pagination);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Pagination other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Total != other.Total) return false;
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Page != 0) hash ^= Page.GetHashCode();
          if (PageSize != 0) hash ^= PageSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Total != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Total);
          }
          if (Page != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Page);
          }
          if (PageSize != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(PageSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Page != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
          }
          if (PageSize != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Pagination other) {
          if (other == null) {
            return;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Page != 0) {
            Page = other.Page;
          }
          if (other.PageSize != 0) {
            PageSize = other.PageSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Total = input.ReadInt32();
                break;
              }
              case 16: {
                Page = input.ReadInt32();
                break;
              }
              case 24: {
                PageSize = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class OrganizationUserRoleListView : pb::IMessage<OrganizationUserRoleListView> {
        private static readonly pb::MessageParser<OrganizationUserRoleListView> _parser = new pb::MessageParser<OrganizationUserRoleListView>(() => new OrganizationUserRoleListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OrganizationUserRoleListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUserRole.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserRoleListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserRoleListView(OrganizationUserRoleListView other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          RoleId = other.RoleId;
          OrganizationId = other.OrganizationId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserRoleListView Clone() {
          return new OrganizationUserRoleListView(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_roleId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string roleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OrganizationUserRoleListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OrganizationUserRoleListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (RoleId != other.RoleId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (roleId_ != null) hash ^= RoleId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (roleId_ != null) {
            _single_roleId_codec.WriteTagAndValue(output, RoleId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (roleId_ != null) {
            size += _single_roleId_codec.CalculateSizeWithTag(RoleId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OrganizationUserRoleListView other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.roleId_ != null) {
            if (roleId_ == null || other.RoleId != "") {
              RoleId = other.RoleId;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                string value = _single_roleId_codec.Read(input);
                if (roleId_ == null || value != "") {
                  RoleId = value;
                }
                break;
              }
              case 26: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ExistRolePermissionById : pb::IMessage<ExistRolePermissionById> {
    private static readonly pb::MessageParser<ExistRolePermissionById> _parser = new pb::MessageParser<ExistRolePermissionById>(() => new ExistRolePermissionById());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExistRolePermissionById> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistRolePermissionById() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistRolePermissionById(ExistRolePermissionById other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistRolePermissionById Clone() {
      return new ExistRolePermissionById(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExistRolePermissionById);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExistRolePermissionById other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExistRolePermissionById other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ExistRolePermissionById message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistRolePermissionById.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          roleId_ = other.roleId_;
          OrganizationId = other.OrganizationId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 1;
        private string roleId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RoleId != other.RoleId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RoleId.Length != 0) hash ^= RoleId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (RoleId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(RoleId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RoleId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.RoleId.Length != 0) {
            RoleId = other.RoleId;
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                RoleId = input.ReadString();
                break;
              }
              case 18: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistRolePermissionById.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          exists_ = other.exists_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Exists" field.</summary>
        public const int ExistsFieldNumber = 1;
        private bool exists_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Exists {
          get { return exists_; }
          set {
            exists_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Exists != other.Exists) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Exists != false) hash ^= Exists.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Exists != false) {
            output.WriteRawTag(8);
            output.WriteBool(Exists);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Exists != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Exists != false) {
            Exists = other.Exists;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Exists = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CreateRolePermission : pb::IMessage<CreateRolePermission> {
    private static readonly pb::MessageParser<CreateRolePermission> _parser = new pb::MessageParser<CreateRolePermission>(() => new CreateRolePermission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRolePermission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRolePermission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRolePermission(CreateRolePermission other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRolePermission Clone() {
      return new CreateRolePermission(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRolePermission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRolePermission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRolePermission other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateRolePermission message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateRolePermission.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationId = other.OrganizationId;
          RoleId = other.RoleId;
          RoleName = other.RoleName;
          Permissions = other.Permissions;
          Description = other.Description;
          IsDefault = other.IsDefault;
          DisplayName = other.DisplayName;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_roleId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string roleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        /// <summary>Field number for the "RoleName" field.</summary>
        public const int RoleNameFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_roleName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string roleName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleName {
          get { return roleName_; }
          set {
            roleName_ = value;
          }
        }

        /// <summary>Field number for the "Permissions" field.</summary>
        public const int PermissionsFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_permissions_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string permissions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Permissions {
          get { return permissions_; }
          set {
            permissions_ = value;
          }
        }

        /// <summary>Field number for the "Description" field.</summary>
        public const int DescriptionFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string description_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = value;
          }
        }

        /// <summary>Field number for the "IsDefault" field.</summary>
        public const int IsDefaultFieldNumber = 6;
        private static readonly pb::FieldCodec<bool?> _single_isDefault_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
        private bool? isDefault_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsDefault {
          get { return isDefault_; }
          set {
            isDefault_ = value;
          }
        }

        /// <summary>Field number for the "DisplayName" field.</summary>
        public const int DisplayNameFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _single_displayName_codec = pb::FieldCodec.ForClassWrapper<string>(58);
        private string displayName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplayName {
          get { return displayName_; }
          set {
            displayName_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (RoleId != other.RoleId) return false;
          if (RoleName != other.RoleName) return false;
          if (Permissions != other.Permissions) return false;
          if (Description != other.Description) return false;
          if (IsDefault != other.IsDefault) return false;
          if (DisplayName != other.DisplayName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (roleId_ != null) hash ^= RoleId.GetHashCode();
          if (roleName_ != null) hash ^= RoleName.GetHashCode();
          if (permissions_ != null) hash ^= Permissions.GetHashCode();
          if (description_ != null) hash ^= Description.GetHashCode();
          if (isDefault_ != null) hash ^= IsDefault.GetHashCode();
          if (displayName_ != null) hash ^= DisplayName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (roleId_ != null) {
            _single_roleId_codec.WriteTagAndValue(output, RoleId);
          }
          if (roleName_ != null) {
            _single_roleName_codec.WriteTagAndValue(output, RoleName);
          }
          if (permissions_ != null) {
            _single_permissions_codec.WriteTagAndValue(output, Permissions);
          }
          if (description_ != null) {
            _single_description_codec.WriteTagAndValue(output, Description);
          }
          if (isDefault_ != null) {
            _single_isDefault_codec.WriteTagAndValue(output, IsDefault);
          }
          if (displayName_ != null) {
            _single_displayName_codec.WriteTagAndValue(output, DisplayName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (roleId_ != null) {
            size += _single_roleId_codec.CalculateSizeWithTag(RoleId);
          }
          if (roleName_ != null) {
            size += _single_roleName_codec.CalculateSizeWithTag(RoleName);
          }
          if (permissions_ != null) {
            size += _single_permissions_codec.CalculateSizeWithTag(Permissions);
          }
          if (description_ != null) {
            size += _single_description_codec.CalculateSizeWithTag(Description);
          }
          if (isDefault_ != null) {
            size += _single_isDefault_codec.CalculateSizeWithTag(IsDefault);
          }
          if (displayName_ != null) {
            size += _single_displayName_codec.CalculateSizeWithTag(DisplayName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.roleId_ != null) {
            if (roleId_ == null || other.RoleId != "") {
              RoleId = other.RoleId;
            }
          }
          if (other.roleName_ != null) {
            if (roleName_ == null || other.RoleName != "") {
              RoleName = other.RoleName;
            }
          }
          if (other.permissions_ != null) {
            if (permissions_ == null || other.Permissions != "") {
              Permissions = other.Permissions;
            }
          }
          if (other.description_ != null) {
            if (description_ == null || other.Description != "") {
              Description = other.Description;
            }
          }
          if (other.isDefault_ != null) {
            if (isDefault_ == null || other.IsDefault != false) {
              IsDefault = other.IsDefault;
            }
          }
          if (other.displayName_ != null) {
            if (displayName_ == null || other.DisplayName != "") {
              DisplayName = other.DisplayName;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 18: {
                string value = _single_roleId_codec.Read(input);
                if (roleId_ == null || value != "") {
                  RoleId = value;
                }
                break;
              }
              case 26: {
                string value = _single_roleName_codec.Read(input);
                if (roleName_ == null || value != "") {
                  RoleName = value;
                }
                break;
              }
              case 34: {
                string value = _single_permissions_codec.Read(input);
                if (permissions_ == null || value != "") {
                  Permissions = value;
                }
                break;
              }
              case 42: {
                string value = _single_description_codec.Read(input);
                if (description_ == null || value != "") {
                  Description = value;
                }
                break;
              }
              case 50: {
                bool? value = _single_isDefault_codec.Read(input);
                if (isDefault_ == null || value != false) {
                  IsDefault = value;
                }
                break;
              }
              case 58: {
                string value = _single_displayName_codec.Read(input);
                if (displayName_ == null || value != "") {
                  DisplayName = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateRolePermission.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          rolePermissionId_ = other.rolePermissionId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "RolePermissionId" field.</summary>
        public const int RolePermissionIdFieldNumber = 1;
        private int rolePermissionId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RolePermissionId {
          get { return rolePermissionId_; }
          set {
            rolePermissionId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RolePermissionId != other.RolePermissionId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RolePermissionId != 0) hash ^= RolePermissionId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (RolePermissionId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(RolePermissionId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RolePermissionId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RolePermissionId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.RolePermissionId != 0) {
            RolePermissionId = other.RolePermissionId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RolePermissionId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class UpdateRolePermission : pb::IMessage<UpdateRolePermission> {
    private static readonly pb::MessageParser<UpdateRolePermission> _parser = new pb::MessageParser<UpdateRolePermission>(() => new UpdateRolePermission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRolePermission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRolePermission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRolePermission(UpdateRolePermission other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRolePermission Clone() {
      return new UpdateRolePermission(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRolePermission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRolePermission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRolePermission other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateRolePermission message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateRolePermission.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationId = other.OrganizationId;
          RoleId = other.RoleId;
          RoleName = other.RoleName;
          Permissions = other.Permissions;
          Description = other.Description;
          DisplayName = other.DisplayName;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_roleId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string roleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        /// <summary>Field number for the "RoleName" field.</summary>
        public const int RoleNameFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_roleName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string roleName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleName {
          get { return roleName_; }
          set {
            roleName_ = value;
          }
        }

        /// <summary>Field number for the "Permissions" field.</summary>
        public const int PermissionsFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_permissions_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string permissions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Permissions {
          get { return permissions_; }
          set {
            permissions_ = value;
          }
        }

        /// <summary>Field number for the "Description" field.</summary>
        public const int DescriptionFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string description_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = value;
          }
        }

        /// <summary>Field number for the "DisplayName" field.</summary>
        public const int DisplayNameFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _single_displayName_codec = pb::FieldCodec.ForClassWrapper<string>(58);
        private string displayName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplayName {
          get { return displayName_; }
          set {
            displayName_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (RoleId != other.RoleId) return false;
          if (RoleName != other.RoleName) return false;
          if (Permissions != other.Permissions) return false;
          if (Description != other.Description) return false;
          if (DisplayName != other.DisplayName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (roleId_ != null) hash ^= RoleId.GetHashCode();
          if (roleName_ != null) hash ^= RoleName.GetHashCode();
          if (permissions_ != null) hash ^= Permissions.GetHashCode();
          if (description_ != null) hash ^= Description.GetHashCode();
          if (displayName_ != null) hash ^= DisplayName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (roleId_ != null) {
            _single_roleId_codec.WriteTagAndValue(output, RoleId);
          }
          if (roleName_ != null) {
            _single_roleName_codec.WriteTagAndValue(output, RoleName);
          }
          if (permissions_ != null) {
            _single_permissions_codec.WriteTagAndValue(output, Permissions);
          }
          if (description_ != null) {
            _single_description_codec.WriteTagAndValue(output, Description);
          }
          if (displayName_ != null) {
            _single_displayName_codec.WriteTagAndValue(output, DisplayName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (roleId_ != null) {
            size += _single_roleId_codec.CalculateSizeWithTag(RoleId);
          }
          if (roleName_ != null) {
            size += _single_roleName_codec.CalculateSizeWithTag(RoleName);
          }
          if (permissions_ != null) {
            size += _single_permissions_codec.CalculateSizeWithTag(Permissions);
          }
          if (description_ != null) {
            size += _single_description_codec.CalculateSizeWithTag(Description);
          }
          if (displayName_ != null) {
            size += _single_displayName_codec.CalculateSizeWithTag(DisplayName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.roleId_ != null) {
            if (roleId_ == null || other.RoleId != "") {
              RoleId = other.RoleId;
            }
          }
          if (other.roleName_ != null) {
            if (roleName_ == null || other.RoleName != "") {
              RoleName = other.RoleName;
            }
          }
          if (other.permissions_ != null) {
            if (permissions_ == null || other.Permissions != "") {
              Permissions = other.Permissions;
            }
          }
          if (other.description_ != null) {
            if (description_ == null || other.Description != "") {
              Description = other.Description;
            }
          }
          if (other.displayName_ != null) {
            if (displayName_ == null || other.DisplayName != "") {
              DisplayName = other.DisplayName;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 18: {
                string value = _single_roleId_codec.Read(input);
                if (roleId_ == null || value != "") {
                  RoleId = value;
                }
                break;
              }
              case 26: {
                string value = _single_roleName_codec.Read(input);
                if (roleName_ == null || value != "") {
                  RoleName = value;
                }
                break;
              }
              case 34: {
                string value = _single_permissions_codec.Read(input);
                if (permissions_ == null || value != "") {
                  Permissions = value;
                }
                break;
              }
              case 42: {
                string value = _single_description_codec.Read(input);
                if (description_ == null || value != "") {
                  Description = value;
                }
                break;
              }
              case 58: {
                string value = _single_displayName_codec.Read(input);
                if (displayName_ == null || value != "") {
                  DisplayName = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateRolePermission.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteRolePermission : pb::IMessage<DeleteRolePermission> {
    private static readonly pb::MessageParser<DeleteRolePermission> _parser = new pb::MessageParser<DeleteRolePermission>(() => new DeleteRolePermission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRolePermission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRolePermission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRolePermission(DeleteRolePermission other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRolePermission Clone() {
      return new DeleteRolePermission(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRolePermission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRolePermission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRolePermission other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteRolePermission message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteRolePermission.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationId = other.OrganizationId;
          RoleId = other.RoleId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_roleId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string roleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (RoleId != other.RoleId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (roleId_ != null) hash ^= RoleId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (roleId_ != null) {
            _single_roleId_codec.WriteTagAndValue(output, RoleId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (roleId_ != null) {
            size += _single_roleId_codec.CalculateSizeWithTag(RoleId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.roleId_ != null) {
            if (roleId_ == null || other.RoleId != "") {
              RoleId = other.RoleId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 18: {
                string value = _single_roleId_codec.Read(input);
                if (roleId_ == null || value != "") {
                  RoleId = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteRolePermission.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryRolePermission : pb::IMessage<QueryRolePermission> {
    private static readonly pb::MessageParser<QueryRolePermission> _parser = new pb::MessageParser<QueryRolePermission>(() => new QueryRolePermission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRolePermission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.AuthorizationServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRolePermission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRolePermission(QueryRolePermission other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRolePermission Clone() {
      return new QueryRolePermission(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRolePermission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRolePermission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRolePermission other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryRolePermission message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationId = other.OrganizationId;
          RoleId = other.RoleId;
          Page = other.Page;
          PageSize = other.PageSize;
          Direction = other.Direction;
          OrderBy = other.OrderBy;
          RoleName = other.RoleName;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_roleId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string roleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_page_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 4;
        private static readonly pb::FieldCodec<int?> _single_pageSize_codec = pb::FieldCodec.ForStructWrapper<int>(34);
        private int? pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        /// <summary>Field number for the "Direction" field.</summary>
        public const int DirectionFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_direction_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string direction_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Direction {
          get { return direction_; }
          set {
            direction_ = value;
          }
        }

        /// <summary>Field number for the "OrderBy" field.</summary>
        public const int OrderByFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(50);
        private string orderBy_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderBy {
          get { return orderBy_; }
          set {
            orderBy_ = value;
          }
        }

        /// <summary>Field number for the "RoleName" field.</summary>
        public const int RoleNameFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _single_roleName_codec = pb::FieldCodec.ForClassWrapper<string>(58);
        private string roleName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleName {
          get { return roleName_; }
          set {
            roleName_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (RoleId != other.RoleId) return false;
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          if (Direction != other.Direction) return false;
          if (OrderBy != other.OrderBy) return false;
          if (RoleName != other.RoleName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (roleId_ != null) hash ^= RoleId.GetHashCode();
          if (page_ != null) hash ^= Page.GetHashCode();
          if (pageSize_ != null) hash ^= PageSize.GetHashCode();
          if (direction_ != null) hash ^= Direction.GetHashCode();
          if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
          if (roleName_ != null) hash ^= RoleName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (roleId_ != null) {
            _single_roleId_codec.WriteTagAndValue(output, RoleId);
          }
          if (page_ != null) {
            _single_page_codec.WriteTagAndValue(output, Page);
          }
          if (pageSize_ != null) {
            _single_pageSize_codec.WriteTagAndValue(output, PageSize);
          }
          if (direction_ != null) {
            _single_direction_codec.WriteTagAndValue(output, Direction);
          }
          if (orderBy_ != null) {
            _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
          }
          if (roleName_ != null) {
            _single_roleName_codec.WriteTagAndValue(output, RoleName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (roleId_ != null) {
            size += _single_roleId_codec.CalculateSizeWithTag(RoleId);
          }
          if (page_ != null) {
            size += _single_page_codec.CalculateSizeWithTag(Page);
          }
          if (pageSize_ != null) {
            size += _single_pageSize_codec.CalculateSizeWithTag(PageSize);
          }
          if (direction_ != null) {
            size += _single_direction_codec.CalculateSizeWithTag(Direction);
          }
          if (orderBy_ != null) {
            size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
          }
          if (roleName_ != null) {
            size += _single_roleName_codec.CalculateSizeWithTag(RoleName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.roleId_ != null) {
            if (roleId_ == null || other.RoleId != "") {
              RoleId = other.RoleId;
            }
          }
          if (other.page_ != null) {
            if (page_ == null || other.Page != 0) {
              Page = other.Page;
            }
          }
          if (other.pageSize_ != null) {
            if (pageSize_ == null || other.PageSize != 0) {
              PageSize = other.PageSize;
            }
          }
          if (other.direction_ != null) {
            if (direction_ == null || other.Direction != "") {
              Direction = other.Direction;
            }
          }
          if (other.orderBy_ != null) {
            if (orderBy_ == null || other.OrderBy != "") {
              OrderBy = other.OrderBy;
            }
          }
          if (other.roleName_ != null) {
            if (roleName_ == null || other.RoleName != "") {
              RoleName = other.RoleName;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 18: {
                string value = _single_roleId_codec.Read(input);
                if (roleId_ == null || value != "") {
                  RoleId = value;
                }
                break;
              }
              case 26: {
                int? value = _single_page_codec.Read(input);
                if (page_ == null || value != 0) {
                  Page = value;
                }
                break;
              }
              case 34: {
                int? value = _single_pageSize_codec.Read(input);
                if (pageSize_ == null || value != 0) {
                  PageSize = value;
                }
                break;
              }
              case 42: {
                string value = _single_direction_codec.Read(input);
                if (direction_ == null || value != "") {
                  Direction = value;
                }
                break;
              }
              case 50: {
                string value = _single_orderBy_codec.Read(input);
                if (orderBy_ == null || value != "") {
                  OrderBy = value;
                }
                break;
              }
              case 58: {
                string value = _single_roleName_codec.Read(input);
                if (roleName_ == null || value != "") {
                  RoleName = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
          result_ = other.result_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Pagination" field.</summary>
        public const int PaginationFieldNumber = 1;
        private global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Pagination pagination_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Pagination Pagination {
          get { return pagination_; }
          set {
            pagination_ = value;
          }
        }

        /// <summary>Field number for the "Result" field.</summary>
        public const int ResultFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.RolePermissionListView> _repeated_result_codec
            = pb::FieldCodec.ForMessage(18, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.RolePermissionListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.RolePermissionListView> result_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.RolePermissionListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.RolePermissionListView> Result {
          get { return result_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Pagination, other.Pagination)) return false;
          if(!result_.Equals(other.result_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (pagination_ != null) hash ^= Pagination.GetHashCode();
          hash ^= result_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (pagination_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Pagination);
          }
          result_.WriteTo(output, _repeated_result_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (pagination_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
          }
          size += result_.CalculateSize(_repeated_result_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.pagination_ != null) {
            if (pagination_ == null) {
              pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Pagination();
            }
            Pagination.MergeFrom(other.Pagination);
          }
          result_.Add(other.result_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (pagination_ == null) {
                  pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Types.Pagination();
                }
                input.ReadMessage(pagination_);
                break;
              }
              case 18: {
                result_.AddEntriesFrom(input, _repeated_result_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Pagination : pb::IMessage<Pagination> {
        private static readonly pb::MessageParser<Pagination> _parser = new pb::MessageParser<Pagination>(() => new Pagination());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Pagination> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination(Pagination other) : this() {
          total_ = other.total_;
          page_ = other.page_;
          pageSize_ = other.pageSize_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination Clone() {
          return new Pagination(this);
        }

        /// <summary>Field number for the "Total" field.</summary>
        public const int TotalFieldNumber = 1;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 2;
        private int page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 3;
        private int pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Pagination);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Pagination other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Total != other.Total) return false;
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Total != 0) hash ^= Total.GetHashCode();
          if (Page != 0) hash ^= Page.GetHashCode();
          if (PageSize != 0) hash ^= PageSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Total != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Total);
          }
          if (Page != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Page);
          }
          if (PageSize != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(PageSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (Page != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
          }
          if (PageSize != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Pagination other) {
          if (other == null) {
            return;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.Page != 0) {
            Page = other.Page;
          }
          if (other.PageSize != 0) {
            PageSize = other.PageSize;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Total = input.ReadInt32();
                break;
              }
              case 16: {
                Page = input.ReadInt32();
                break;
              }
              case 24: {
                PageSize = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class RolePermissionListView : pb::IMessage<RolePermissionListView> {
        private static readonly pb::MessageParser<RolePermissionListView> _parser = new pb::MessageParser<RolePermissionListView>(() => new RolePermissionListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RolePermissionListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryRolePermission.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RolePermissionListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RolePermissionListView(RolePermissionListView other) : this() {
          OrganizationId = other.OrganizationId;
          RoleId = other.RoleId;
          RoleName = other.RoleName;
          Permissions = other.Permissions;
          Description = other.Description;
          IsDefault = other.IsDefault;
          DisplayName = other.DisplayName;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RolePermissionListView Clone() {
          return new RolePermissionListView(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "RoleId" field.</summary>
        public const int RoleIdFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_roleId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string roleId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleId {
          get { return roleId_; }
          set {
            roleId_ = value;
          }
        }

        /// <summary>Field number for the "RoleName" field.</summary>
        public const int RoleNameFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_roleName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string roleName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleName {
          get { return roleName_; }
          set {
            roleName_ = value;
          }
        }

        /// <summary>Field number for the "Permissions" field.</summary>
        public const int PermissionsFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_permissions_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string permissions_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Permissions {
          get { return permissions_; }
          set {
            permissions_ = value;
          }
        }

        /// <summary>Field number for the "Description" field.</summary>
        public const int DescriptionFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string description_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = value;
          }
        }

        /// <summary>Field number for the "IsDefault" field.</summary>
        public const int IsDefaultFieldNumber = 6;
        private static readonly pb::FieldCodec<bool?> _single_isDefault_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
        private bool? isDefault_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsDefault {
          get { return isDefault_; }
          set {
            isDefault_ = value;
          }
        }

        /// <summary>Field number for the "DisplayName" field.</summary>
        public const int DisplayNameFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _single_displayName_codec = pb::FieldCodec.ForClassWrapper<string>(58);
        private string displayName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplayName {
          get { return displayName_; }
          set {
            displayName_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RolePermissionListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RolePermissionListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (RoleId != other.RoleId) return false;
          if (RoleName != other.RoleName) return false;
          if (Permissions != other.Permissions) return false;
          if (Description != other.Description) return false;
          if (IsDefault != other.IsDefault) return false;
          if (DisplayName != other.DisplayName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (roleId_ != null) hash ^= RoleId.GetHashCode();
          if (roleName_ != null) hash ^= RoleName.GetHashCode();
          if (permissions_ != null) hash ^= Permissions.GetHashCode();
          if (description_ != null) hash ^= Description.GetHashCode();
          if (isDefault_ != null) hash ^= IsDefault.GetHashCode();
          if (displayName_ != null) hash ^= DisplayName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (roleId_ != null) {
            _single_roleId_codec.WriteTagAndValue(output, RoleId);
          }
          if (roleName_ != null) {
            _single_roleName_codec.WriteTagAndValue(output, RoleName);
          }
          if (permissions_ != null) {
            _single_permissions_codec.WriteTagAndValue(output, Permissions);
          }
          if (description_ != null) {
            _single_description_codec.WriteTagAndValue(output, Description);
          }
          if (isDefault_ != null) {
            _single_isDefault_codec.WriteTagAndValue(output, IsDefault);
          }
          if (displayName_ != null) {
            _single_displayName_codec.WriteTagAndValue(output, DisplayName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (roleId_ != null) {
            size += _single_roleId_codec.CalculateSizeWithTag(RoleId);
          }
          if (roleName_ != null) {
            size += _single_roleName_codec.CalculateSizeWithTag(RoleName);
          }
          if (permissions_ != null) {
            size += _single_permissions_codec.CalculateSizeWithTag(Permissions);
          }
          if (description_ != null) {
            size += _single_description_codec.CalculateSizeWithTag(Description);
          }
          if (isDefault_ != null) {
            size += _single_isDefault_codec.CalculateSizeWithTag(IsDefault);
          }
          if (displayName_ != null) {
            size += _single_displayName_codec.CalculateSizeWithTag(DisplayName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RolePermissionListView other) {
          if (other == null) {
            return;
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.roleId_ != null) {
            if (roleId_ == null || other.RoleId != "") {
              RoleId = other.RoleId;
            }
          }
          if (other.roleName_ != null) {
            if (roleName_ == null || other.RoleName != "") {
              RoleName = other.RoleName;
            }
          }
          if (other.permissions_ != null) {
            if (permissions_ == null || other.Permissions != "") {
              Permissions = other.Permissions;
            }
          }
          if (other.description_ != null) {
            if (description_ == null || other.Description != "") {
              Description = other.Description;
            }
          }
          if (other.isDefault_ != null) {
            if (isDefault_ == null || other.IsDefault != false) {
              IsDefault = other.IsDefault;
            }
          }
          if (other.displayName_ != null) {
            if (displayName_ == null || other.DisplayName != "") {
              DisplayName = other.DisplayName;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 18: {
                string value = _single_roleId_codec.Read(input);
                if (roleId_ == null || value != "") {
                  RoleId = value;
                }
                break;
              }
              case 26: {
                string value = _single_roleName_codec.Read(input);
                if (roleName_ == null || value != "") {
                  RoleName = value;
                }
                break;
              }
              case 34: {
                string value = _single_permissions_codec.Read(input);
                if (permissions_ == null || value != "") {
                  Permissions = value;
                }
                break;
              }
              case 42: {
                string value = _single_description_codec.Read(input);
                if (description_ == null || value != "") {
                  Description = value;
                }
                break;
              }
              case 50: {
                bool? value = _single_isDefault_codec.Read(input);
                if (isDefault_ == null || value != false) {
                  IsDefault = value;
                }
                break;
              }
              case 58: {
                string value = _single_displayName_codec.Read(input);
                if (displayName_ == null || value != "") {
                  DisplayName = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
