// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OrganizationUserService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kebormed.Core.OrganizationService.Grpc.Generated {

  /// <summary>Holder for reflection information generated from OrganizationUserService.proto</summary>
  public static partial class OrganizationUserServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for OrganizationUserService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrganizationUserServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1Pcmdhbml6YXRpb25Vc2VyU2VydmljZS5wcm90bxIwS2Vib3JtZWQuQ29y",
            "ZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkGh5nb29nbGUv",
            "cHJvdG9idWYvd3JhcHBlcnMucHJvdG8i8AMKFkNyZWF0ZU9yZ2FuaXphdGlv",
            "blVzZXIarQMKB1JlcXVlc3QSDgoGVXNlcklkGAEgASgJEhYKDk9yZ2FuaXph",
            "dGlvbklkGAIgASgFEhAKCFVzZXJUeXBlGAMgASgFEhUKDVRyYW5zYWN0aW9u",
            "SWQYBCABKAkSLgoIVXNlcm5hbWUYCCABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSLwoJRmlyc3ROYW1lGAkgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEi4KCExhc3ROYW1lGAogASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEisKBUVtYWlsGAsgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEiwKCElzQWN0aXZlGAwgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLkJvb2xWYWx1ZRIsCghJc0xvY2tlZBgNIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5Cb29sVmFsdWUSNwoTSXNQZW5kaW5nQWN0aXZhdGlvbhgO",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUaJgoIUmVzcG9uc2US",
            "GgoST3JnYW5pemF0aW9uVXNlcklkGAEgASgFIrkCChZEZWxldGVPcmdhbml6",
            "YXRpb25Vc2VyGqYBCgdSZXF1ZXN0EjcKEk9yZ2FuaXphdGlvblVzZXJJZBgB",
            "IAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEi0KCFVzZXJUeXBl",
            "GAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSMwoOT3JnYW5p",
            "emF0aW9uSWQYAyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRp2",
            "CghSZXNwb25zZRIsCgZVc2VySWQYASABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSPAoYSXNMYXN0VXNlcklkUmVsYXRpb25zaGlwGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZSLRDAoWUXVlcnlPcmdhbml6",
            "YXRpb25Vc2VycxriAgoHUmVxdWVzdBIpCgRQYWdlGAEgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDMyVmFsdWUSLQoIUGFnZVNpemUYAiABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50MzJWYWx1ZRInCgFRGAMgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEi0KB09yZGVyQnkYBCABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSLwoJRGlyZWN0aW9uGAUgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEiwKCElzQWN0aXZlGAYgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIzCg5Pcmdhbml6YXRpb25JZBgH",
            "IAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEhEKCVVzZXJUeXBl",
            "cxgIIAMoBRrmAQoIUmVzcG9uc2USZwoKUGFnaW5hdGlvbhgBIAEoCzJTLktl",
            "Ym9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRl",
            "ZC5RdWVyeU9yZ2FuaXphdGlvblVzZXJzLlBhZ2luYXRpb24ScQoGUmVzdWx0",
            "GAIgAygLMmEuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdy",
            "cGMuR2VuZXJhdGVkLlF1ZXJ5T3JnYW5pemF0aW9uVXNlcnMuT3JnYW5pemF0",
            "aW9uVXNlckxpc3RWaWV3GpIBCgpQYWdpbmF0aW9uEioKBVRvdGFsGAEgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSKQoEUGFnZRgCIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEi0KCFBhZ2VTaXplGAMgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUa/QQKGE9yZ2FuaXphdGlv",
            "blVzZXJMaXN0VmlldxIaChJPcmdhbml6YXRpb25Vc2VySWQYASABKAUSFgoO",
            "T3JnYW5pemF0aW9uSWQYAiABKAUSEAoIVXNlclR5cGUYAyABKAUSKwoFRW1h",
            "aWwYBCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLgoIVXNl",
            "cm5hbWUYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLwoJ",
            "Rmlyc3ROYW1lGAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "Ei4KCExhc3ROYW1lGAcgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEmQKBVJvbGVzGAggAygLMlUuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRp",
            "b25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLlF1ZXJ5T3JnYW5pemF0aW9uVXNl",
            "cnMuUm9sZUxpc3RWaWV3EiwKCElzQWN0aXZlGAkgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLkJvb2xWYWx1ZRI3ChNJc1BlbmRpbmdBY3RpdmF0aW9uGAogASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIyCg1MYXN0TG9naW5UaW1l",
            "GAsgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSLgoJQ3JlYXRl",
            "ZEF0GAwgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSLAoISXNM",
            "b2NrZWQYDSABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlGtMBCgxS",
            "b2xlTGlzdFZpZXcSLgoIUm9sZU5hbWUYASABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSMQoLRGVzY3JpcHRpb24YAiABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLRGlzcGxheU5hbWUYAyABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoJSXNEZWZhdWx0GAQgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZSKEBAoVUXVlcnlPcmdhbml6",
            "YXRpb25Vc2VyGjoKDVByb2ZpbGVWYWx1ZXMSGgoSUHJvZmlsZVBhcmFtZXRl",
            "cklkGAEgASgFEg0KBVZhbHVlGAIgASgJGucBChhPcmdhbml6YXRpb25Vc2Vy",
            "TGlzdFZpZXcSGgoST3JnYW5pemF0aW9uVXNlcklkGAEgASgFEhYKDk9yZ2Fu",
            "aXphdGlvbklkGAIgASgFEhEKCVByb2ZpbGVJZBgDIAEoBRIOCgZVc2VySWQY",
            "BCABKAkSdAoVUHJvZmlsZVZhbHVlc0xpc3RWaWV3GAUgAygLMlUuS2Vib3Jt",
            "ZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLlF1",
            "ZXJ5T3JnYW5pemF0aW9uVXNlci5Qcm9maWxlVmFsdWVzGjcKB1JlcXVlc3QS",
            "GgoST3JnYW5pemF0aW9uSWRMaXN0GAEgAygFEhAKCFVzZXJUeXBlGAIgASgF",
            "GosBCghSZXNwb25zZRJwCgZSZXN1bHQYASADKAsyYC5LZWJvcm1lZC5Db3Jl",
            "Lk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuUXVlcnlPcmdh",
            "bml6YXRpb25Vc2VyLk9yZ2FuaXphdGlvblVzZXJMaXN0VmlldxINCgVUb3Rh",
            "bBgCIAEoBSLjCQoTR2V0T3JnYW5pemF0aW9uVXNlchovCglVc2VyR3JvdXAS",
            "DwoHR3JvdXBJZBgBIAEoBRIRCglHcm91cE5hbWUYAiABKAkaOQoMUHJvZmls",
            "ZVZhbHVlEhoKElByb2ZpbGVQYXJhbWV0ZXJJZBgBIAEoBRINCgVWYWx1ZRgC",
            "IAEoCRpRChpBc3NvY2lhdGVkT3JnYW5pemF0aW9uVXNlchIXCg9Bc3NvY2lh",
            "dGlvblR5cGUYASABKAUSGgoST3JnYW5pemF0aW9uVXNlcklkGAIgASgFGk8K",
            "B1JlcXVlc3QSGgoST3JnYW5pemF0aW9uVXNlcklkGAEgASgFEhAKCFVzZXJU",
            "eXBlGAIgASgFEhYKDk9yZ2FuaXphdGlvbklkGAMgASgFGrsHCghSZXNwb25z",
            "ZRIaChJPcmdhbml6YXRpb25Vc2VySWQYASABKAUSFgoOT3JnYW5pemF0aW9u",
            "SWQYAiABKAUSDgoGVXNlcklkGAMgASgJEhEKCVByb2ZpbGVJZBgEIAEoBRJx",
            "ChVQcm9maWxlVmFsdWVzTGlzdFZpZXcYBSADKAsyUi5LZWJvcm1lZC5Db3Jl",
            "Lk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuR2V0T3JnYW5p",
            "emF0aW9uVXNlci5Qcm9maWxlVmFsdWUSjAEKIkFzc29jaWF0ZWRPcmdhbml6",
            "YXRpb25Vc2VyTGlzdFZpZXcYBiADKAsyYC5LZWJvcm1lZC5Db3JlLk9yZ2Fu",
            "aXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuR2V0T3JnYW5pemF0aW9u",
            "VXNlci5Bc3NvY2lhdGVkT3JnYW5pemF0aW9uVXNlchJmCg1Hcm91cExpc3RW",
            "aWV3GA0gAygLMk8uS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNl",
            "LkdycGMuR2VuZXJhdGVkLkdldE9yZ2FuaXphdGlvblVzZXIuVXNlckdyb3Vw",
            "Ei4KCUNyZWF0ZWRBdBgHIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZh",
            "bHVlEi4KCFVzZXJuYW1lGAggASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEi8KCUZpcnN0TmFtZRgJIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIuCghMYXN0TmFtZRgKIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRIrCgVFbWFpbBgLIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRIsCghJc0FjdGl2ZRgMIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5Cb29sVmFsdWUSLAoISXNMb2NrZWQYDiABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuQm9vbFZhbHVlEjcKE0lzUGVuZGluZ0FjdGl2YXRpb24YDyABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEjAKC0xhc3RMb2dpbkF0GBAg",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSOQoVSGFzQWNjZXB0",
            "ZWRJbnZpdGF0aW9uGBEgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1",
            "ZSLEAgoUR2V0T3JnYW5pemF0aW9uQWRtaW4aMwoHUmVxdWVzdBIWCg5Pcmdh",
            "bml6YXRpb25JZBgBIAEoBRIQCghVc2VyVHlwZRgCIAEoBRr2AQoIUmVzcG9u",
            "c2USGgoST3JnYW5pemF0aW9uVXNlcklkGAEgASgFEg0KBUVtYWlsGAIgASgJ",
            "Ei8KCUZpcnN0TmFtZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIuCghMYXN0TmFtZRgEIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZRIuCghVc2VybmFtZRgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIuCglDcmVhdGVkQXQYBiABKAsyGy5nb29nbGUucHJvdG9i",
            "dWYuSW50NjRWYWx1ZSKkAQojR2V0T3JnYW5pemF0aW9uVXNlckJ5RXh0ZXJu",
            "YWxVc2VySWQaMQoHUmVxdWVzdBIWCg5Pcmdhbml6YXRpb25JZBgBIAEoBRIO",
            "CgZVc2VySWQYAiABKAkaSgoIUmVzcG9uc2USGgoST3JnYW5pemF0aW9uVXNl",
            "cklkGAEgASgFEhAKCFVzZXJuYW1lGAIgASgJEhAKCFVzZXJUeXBlGAMgASgF",
            "Ir4DChZVcGRhdGVPcmdhbml6YXRpb25Vc2VyGpcDCgdSZXF1ZXN0EjcKEk9y",
            "Z2FuaXphdGlvblVzZXJJZBgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQz",
            "MlZhbHVlEjMKDk9yZ2FuaXphdGlvbklkGAIgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDMyVmFsdWUSLQoIVXNlclR5cGUYAyABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuSW50MzJWYWx1ZRIzCg1UcmFuc2FjdGlvbklkGAQgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi8KCUZpcnN0TmFtZRgJIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCghMYXN0TmFtZRgKIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIrCgVFbWFpbBgLIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIsCghJc0FjdGl2ZRgM",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUaCgoIUmVzcG9uc2Ui",
            "1QEKIkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJzQXNzb2NpYXRpb24aiwEKB1Jl",
            "cXVlc3QSGwoTT3JnYW5pemF0aW9uVXNlcklkMRgBIAEoBRIbChNPcmdhbml6",
            "YXRpb25Vc2VySWQyGAIgASgFEhcKD0Fzc29jaWF0aW9uVHlwZRgDIAEoBRIV",
            "Cg1UcmFuc2FjdGlvbklkGAQgASgJEhYKDk9yZ2FuaXphdGlvbklkGAUgASgF",
            "GiEKCFJlc3BvbnNlEhUKDUFzc29jaWF0aW9uSWQYASABKAUivgEKIlVwZGF0",
            "ZU9yZ2FuaXphdGlvblVzZXJzQXNzb2NpYXRpb24aiwEKB1JlcXVlc3QSGwoT",
            "T3JnYW5pemF0aW9uVXNlcklkMRgBIAEoBRIbChNPcmdhbml6YXRpb25Vc2Vy",
            "SWQyGAIgASgFEhcKD0Fzc29jaWF0aW9uVHlwZRgDIAEoBRIVCg1UcmFuc2Fj",
            "dGlvbklkGAQgASgJEhYKDk9yZ2FuaXphdGlvbklkGAUgASgFGgoKCFJlc3Bv",
            "bnNlInAKIkRlbGV0ZU9yZ2FuaXphdGlvblVzZXJzQXNzb2NpYXRpb24aPgoH",
            "UmVxdWVzdBIXCg9Bc3NvY2lhdGlvblR5cGUYASABKAUSGgoST3JnYW5pemF0",
            "aW9uVXNlcklkGAIgASgFGgoKCFJlc3BvbnNlIo8CCh1QdWJsaXNoQ3JlYXRl",
            "T3JnYW5pemF0aW9uVXNlchrOAQoHUmVxdWVzdBIaChJPcmdhbml6YXRpb25V",
            "c2VySWQYASABKAUSEAoIVXNlclR5cGUYAiABKAUSFQoNVHJhbnNhY3Rpb25J",
            "ZBgDIAEoCRIQCghVc2VybmFtZRgEIAEoCRIRCglGaXJzdE5hbWUYBSABKAkS",
            "EAoITGFzdE5hbWUYBiABKAkSDQoFRW1haWwYByABKAkSEAoISXNBY3RpdmUY",
            "CCABKAgSDgoGVXNlcklkGAkgASgJEhYKDk9yZ2FuaXphdGlvbklkGAogASgF",
            "Gh0KCFJlc3BvbnNlEhEKCUNyZWF0ZWRBdBgBIAEoAyLWAQodUHVibGlzaFVw",
            "ZGF0ZU9yZ2FuaXphdGlvblVzZXIalQEKB1JlcXVlc3QSGgoST3JnYW5pemF0",
            "aW9uVXNlcklkGAEgASgFEhAKCFVzZXJUeXBlGAIgASgFEhEKCUZpcnN0TmFt",
            "ZRgDIAEoCRIQCghMYXN0TmFtZRgEIAEoCRINCgVFbWFpbBgFIAEoCRIQCghJ",
            "c0FjdGl2ZRgGIAEoCBIWCg5Pcmdhbml6YXRpb25JZBgHIAEoBRodCghSZXNw",
            "b25zZRIRCglDcmVhdGVkQXQYASABKAMiWAoWUXVlcnlVc2VyT3JnYW5pemF0",
            "aW9ucxoZCgdSZXF1ZXN0Eg4KBlVzZXJJZBgBIAEoCRojCghSZXNwb25zZRIX",
            "Cg9Pcmdhbml6YXRpb25JZHMYASADKAUi+AEKFUV4aXN0T3JnYW5pemF0aW9u",
            "VXNlchqmAQoHUmVxdWVzdBI3ChJPcmdhbml6YXRpb25Vc2VySWQYASABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRItCghVc2VyVHlwZRgCIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjMKDk9yZ2FuaXphdGlv",
            "bklkGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUaNgoIUmVz",
            "cG9uc2USKgoGRXhpc3RzGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xW",
            "YWx1ZSJyChxFeGlzdE9yZ2FuaXphdGlvblVzZXJCeUVtYWlsGjYKB1JlcXVl",
            "c3QSKwoFRW1haWwYASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUaGgoIUmVzcG9uc2USDgoGRXhpc3RzGAEgASgIIngKH0V4aXN0T3JnYW5p",
            "emF0aW9uVXNlckJ5VXNlcm5hbWUaOQoHUmVxdWVzdBIuCghVc2VybmFtZRgB",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRoaCghSZXNwb25z",
            "ZRIOCgZFeGlzdHMYASABKAgidgoXR2V0T3JnYW5pemF0aW9uVXNlclR5cGUa",
            "PQoHUmVxdWVzdBIaChJPcmdhbml6YXRpb25Vc2VySWQYASABKAUSFgoOT3Jn",
            "YW5pemF0aW9uSWQYAiABKAUaHAoIUmVzcG9uc2USEAoIVXNlclR5cGUYASAB",
            "KAUi4gQKHUdldFNpbmdsZU9yZ2FuaXphdGlvbk9yZ1VzZXJzGowDCiFTaW5n",
            "bGVPcmdhbml6YXRpb25PcmdVc2VyTGlzdFZpZXcSDgoGVXNlcklkGAEgASgJ",
            "EisKBUVtYWlsGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EjMKDk9yZ2FuaXphdGlvbklkGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDMyVmFsdWUSNwoST3JnYW5pemF0aW9uVXNlcklkGAQgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDMyVmFsdWUSLwoJRmlyc3ROYW1lGAUgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCExhc3ROYW1lGAYgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEiwKCElzQWN0aXZlGAcgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRItCghVc2VyVHlwZRgIIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlGiEKB1JlcXVlc3QSFgoO",
            "T3JnYW5pemF0aW9uSWQYASABKAUajgEKCFJlc3BvbnNlEoEBCgZSZXN1bHQY",
            "ASADKAsycS5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3Jw",
            "Yy5HZW5lcmF0ZWQuR2V0U2luZ2xlT3JnYW5pemF0aW9uT3JnVXNlcnMuU2lu",
            "Z2xlT3JnYW5pemF0aW9uT3JnVXNlckxpc3RWaWV3IlQKEVNldFVzZXJMb2Nr",
            "U3RhdHVzGjMKB1JlcXVlc3QSFgoORXh0ZXJuYWxVc2VySWQYASABKAkSEAoI",
            "SXNMb2NrZWQYAiABKAgaCgoIUmVzcG9uc2UibAoeU2V0VXNlclBlbmRpbmdB",
            "Y3RpdmF0aW9uU3RhdHVzGj4KB1JlcXVlc3QSFgoORXh0ZXJuYWxVc2VySWQY",
            "ASABKAkSGwoTSXNQZW5kaW5nQWN0aXZhdGlvbhgCIAEoCBoKCghSZXNwb25z",
            "ZSJWChBTZXRMYXN0TG9naW5UaW1lGjYKB1JlcXVlc3QSFgoORXh0ZXJuYWxV",
            "c2VySWQYASABKAkSEwoLTGFzdExvZ2luQXQYAiABKAMaCgoIUmVzcG9uc2Uy",
            "/SIKF09yZ2FuaXphdGlvblVzZXJTZXJ2aWNlEr0BChZRdWVyeVVzZXJPcmdh",
            "bml6YXRpb25zElAuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNl",
            "LkdycGMuR2VuZXJhdGVkLlF1ZXJ5VXNlck9yZ2FuaXphdGlvbnMuUmVxdWVz",
            "dBpRLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdl",
            "bmVyYXRlZC5RdWVyeVVzZXJPcmdhbml6YXRpb25zLlJlc3BvbnNlEroBChVR",
            "dWVyeU9yZ2FuaXphdGlvblVzZXISTy5LZWJvcm1lZC5Db3JlLk9yZ2FuaXph",
            "dGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuUXVlcnlPcmdhbml6YXRpb25V",
            "c2VyLlJlcXVlc3QaUC5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZp",
            "Y2UuR3JwYy5HZW5lcmF0ZWQuUXVlcnlPcmdhbml6YXRpb25Vc2VyLlJlc3Bv",
            "bnNlEr0BChZRdWVyeU9yZ2FuaXphdGlvblVzZXJzElAuS2Vib3JtZWQuQ29y",
            "ZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLlF1ZXJ5T3Jn",
            "YW5pemF0aW9uVXNlcnMuUmVxdWVzdBpRLktlYm9ybWVkLkNvcmUuT3JnYW5p",
            "emF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5RdWVyeU9yZ2FuaXphdGlv",
            "blVzZXJzLlJlc3BvbnNlErQBChNHZXRPcmdhbml6YXRpb25Vc2VyEk0uS2Vi",
            "b3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVk",
            "LkdldE9yZ2FuaXphdGlvblVzZXIuUmVxdWVzdBpOLktlYm9ybWVkLkNvcmUu",
            "T3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5HZXRPcmdhbml6",
            "YXRpb25Vc2VyLlJlc3BvbnNlEuQBCiNHZXRPcmdhbml6YXRpb25Vc2VyQnlF",
            "eHRlcm5hbFVzZXJJZBJdLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2Vy",
            "dmljZS5HcnBjLkdlbmVyYXRlZC5HZXRPcmdhbml6YXRpb25Vc2VyQnlFeHRl",
            "cm5hbFVzZXJJZC5SZXF1ZXN0Gl4uS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRp",
            "b25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLkdldE9yZ2FuaXphdGlvblVzZXJC",
            "eUV4dGVybmFsVXNlcklkLlJlc3BvbnNlErcBChRHZXRPcmdhbml6YXRpb25B",
            "ZG1pbhJOLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBj",
            "LkdlbmVyYXRlZC5HZXRPcmdhbml6YXRpb25BZG1pbi5SZXF1ZXN0Gk8uS2Vi",
            "b3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVk",
            "LkdldE9yZ2FuaXphdGlvbkFkbWluLlJlc3BvbnNlEroBChVFeGlzdE9yZ2Fu",
            "aXphdGlvblVzZXISTy5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZp",
            "Y2UuR3JwYy5HZW5lcmF0ZWQuRXhpc3RPcmdhbml6YXRpb25Vc2VyLlJlcXVl",
            "c3QaUC5LZWJvcm1lZC5Db3JlLk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5H",
            "ZW5lcmF0ZWQuRXhpc3RPcmdhbml6YXRpb25Vc2VyLlJlc3BvbnNlEs8BChxF",
            "eGlzdE9yZ2FuaXphdGlvblVzZXJCeUVtYWlsElYuS2Vib3JtZWQuQ29yZS5P",
            "cmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLkV4aXN0T3JnYW5p",
            "emF0aW9uVXNlckJ5RW1haWwuUmVxdWVzdBpXLktlYm9ybWVkLkNvcmUuT3Jn",
            "YW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5FeGlzdE9yZ2FuaXph",
            "dGlvblVzZXJCeUVtYWlsLlJlc3BvbnNlEtgBCh9FeGlzdE9yZ2FuaXphdGlv",
            "blVzZXJCeVVzZXJuYW1lElkuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25T",
            "ZXJ2aWNlLkdycGMuR2VuZXJhdGVkLkV4aXN0T3JnYW5pemF0aW9uVXNlckJ5",
            "VXNlcm5hbWUuUmVxdWVzdBpaLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9u",
            "U2VydmljZS5HcnBjLkdlbmVyYXRlZC5FeGlzdE9yZ2FuaXphdGlvblVzZXJC",
            "eVVzZXJuYW1lLlJlc3BvbnNlEr0BChZDcmVhdGVPcmdhbml6YXRpb25Vc2Vy",
            "ElAuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2Vu",
            "ZXJhdGVkLkNyZWF0ZU9yZ2FuaXphdGlvblVzZXIuUmVxdWVzdBpRLktlYm9y",
            "bWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5D",
            "cmVhdGVPcmdhbml6YXRpb25Vc2VyLlJlc3BvbnNlEr0BChZVcGRhdGVPcmdh",
            "bml6YXRpb25Vc2VyElAuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2",
            "aWNlLkdycGMuR2VuZXJhdGVkLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXIuUmVx",
            "dWVzdBpRLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBj",
            "LkdlbmVyYXRlZC5VcGRhdGVPcmdhbml6YXRpb25Vc2VyLlJlc3BvbnNlEr0B",
            "ChZEZWxldGVPcmdhbml6YXRpb25Vc2VyElAuS2Vib3JtZWQuQ29yZS5Pcmdh",
            "bml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVkLkRlbGV0ZU9yZ2FuaXph",
            "dGlvblVzZXIuUmVxdWVzdBpRLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9u",
            "U2VydmljZS5HcnBjLkdlbmVyYXRlZC5EZWxldGVPcmdhbml6YXRpb25Vc2Vy",
            "LlJlc3BvbnNlEuEBCiJDcmVhdGVPcmdhbml6YXRpb25Vc2Vyc0Fzc29jaWF0",
            "aW9uElwuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMu",
            "R2VuZXJhdGVkLkNyZWF0ZU9yZ2FuaXphdGlvblVzZXJzQXNzb2NpYXRpb24u",
            "UmVxdWVzdBpdLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5H",
            "cnBjLkdlbmVyYXRlZC5DcmVhdGVPcmdhbml6YXRpb25Vc2Vyc0Fzc29jaWF0",
            "aW9uLlJlc3BvbnNlEuEBCiJVcGRhdGVPcmdhbml6YXRpb25Vc2Vyc0Fzc29j",
            "aWF0aW9uElwuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdy",
            "cGMuR2VuZXJhdGVkLlVwZGF0ZU9yZ2FuaXphdGlvblVzZXJzQXNzb2NpYXRp",
            "b24uUmVxdWVzdBpdLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2Vydmlj",
            "ZS5HcnBjLkdlbmVyYXRlZC5VcGRhdGVPcmdhbml6YXRpb25Vc2Vyc0Fzc29j",
            "aWF0aW9uLlJlc3BvbnNlEuEBCiJEZWxldGVPcmdhbml6YXRpb25Vc2Vyc0Fz",
            "c29jaWF0aW9uElwuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNl",
            "LkdycGMuR2VuZXJhdGVkLkRlbGV0ZU9yZ2FuaXphdGlvblVzZXJzQXNzb2Np",
            "YXRpb24uUmVxdWVzdBpdLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2Vy",
            "dmljZS5HcnBjLkdlbmVyYXRlZC5EZWxldGVPcmdhbml6YXRpb25Vc2Vyc0Fz",
            "c29jaWF0aW9uLlJlc3BvbnNlEtIBCh1QdWJsaXNoQ3JlYXRlT3JnYW5pemF0",
            "aW9uVXNlchJXLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5H",
            "cnBjLkdlbmVyYXRlZC5QdWJsaXNoQ3JlYXRlT3JnYW5pemF0aW9uVXNlci5S",
            "ZXF1ZXN0GlguS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdy",
            "cGMuR2VuZXJhdGVkLlB1Ymxpc2hDcmVhdGVPcmdhbml6YXRpb25Vc2VyLlJl",
            "c3BvbnNlEtIBCh1QdWJsaXNoVXBkYXRlT3JnYW5pemF0aW9uVXNlchJXLktl",
            "Ym9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRl",
            "ZC5QdWJsaXNoVXBkYXRlT3JnYW5pemF0aW9uVXNlci5SZXF1ZXN0GlguS2Vi",
            "b3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJhdGVk",
            "LlB1Ymxpc2hVcGRhdGVPcmdhbml6YXRpb25Vc2VyLlJlc3BvbnNlEsABChdH",
            "ZXRPcmdhbml6YXRpb25Vc2VyVHlwZRJRLktlYm9ybWVkLkNvcmUuT3JnYW5p",
            "emF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5HZXRPcmdhbml6YXRpb25V",
            "c2VyVHlwZS5SZXF1ZXN0GlIuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25T",
            "ZXJ2aWNlLkdycGMuR2VuZXJhdGVkLkdldE9yZ2FuaXphdGlvblVzZXJUeXBl",
            "LlJlc3BvbnNlEtIBCh1HZXRTaW5nbGVPcmdhbml6YXRpb25PcmdVc2VycxJX",
            "LktlYm9ybWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVy",
            "YXRlZC5HZXRTaW5nbGVPcmdhbml6YXRpb25PcmdVc2Vycy5SZXF1ZXN0Glgu",
            "S2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdycGMuR2VuZXJh",
            "dGVkLkdldFNpbmdsZU9yZ2FuaXphdGlvbk9yZ1VzZXJzLlJlc3BvbnNlEq4B",
            "ChFTZXRVc2VyTG9ja1N0YXR1cxJLLktlYm9ybWVkLkNvcmUuT3JnYW5pemF0",
            "aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5TZXRVc2VyTG9ja1N0YXR1cy5S",
            "ZXF1ZXN0GkwuS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdy",
            "cGMuR2VuZXJhdGVkLlNldFVzZXJMb2NrU3RhdHVzLlJlc3BvbnNlEtUBCh5T",
            "ZXRVc2VyUGVuZGluZ0FjdGl2YXRpb25TdGF0dXMSWC5LZWJvcm1lZC5Db3Jl",
            "Lk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuU2V0VXNlclBl",
            "bmRpbmdBY3RpdmF0aW9uU3RhdHVzLlJlcXVlc3QaWS5LZWJvcm1lZC5Db3Jl",
            "Lk9yZ2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWQuU2V0VXNlclBl",
            "bmRpbmdBY3RpdmF0aW9uU3RhdHVzLlJlc3BvbnNlEqsBChBTZXRMYXN0TG9n",
            "aW5UaW1lEkouS2Vib3JtZWQuQ29yZS5Pcmdhbml6YXRpb25TZXJ2aWNlLkdy",
            "cGMuR2VuZXJhdGVkLlNldExhc3RMb2dpblRpbWUuUmVxdWVzdBpLLktlYm9y",
            "bWVkLkNvcmUuT3JnYW5pemF0aW9uU2VydmljZS5HcnBjLkdlbmVyYXRlZC5T",
            "ZXRMYXN0TG9naW5UaW1lLlJlc3BvbnNlQjOqAjBLZWJvcm1lZC5Db3JlLk9y",
            "Z2FuaXphdGlvblNlcnZpY2UuR3JwYy5HZW5lcmF0ZWRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Request.Parser, new[]{ "UserId", "OrganizationId", "UserType", "TransactionId", "Username", "FirstName", "LastName", "Email", "IsActive", "IsLocked", "IsPendingActivation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Types.Response.Parser, new[]{ "OrganizationUserId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Request.Parser, new[]{ "OrganizationUserId", "UserType", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Types.Response.Parser, new[]{ "UserId", "IsLastUserIdRelationship" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Request.Parser, new[]{ "Page", "PageSize", "Q", "OrderBy", "Direction", "IsActive", "OrganizationId", "UserTypes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Response.Parser, new[]{ "Pagination", "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Pagination), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Pagination.Parser, new[]{ "Total", "Page", "PageSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.OrganizationUserListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.OrganizationUserListView.Parser, new[]{ "OrganizationUserId", "OrganizationId", "UserType", "Email", "Username", "FirstName", "LastName", "Roles", "IsActive", "IsPendingActivation", "LastLoginTime", "CreatedAt", "IsLocked" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.RoleListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.RoleListView.Parser, new[]{ "RoleName", "Description", "DisplayName", "IsDefault" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.ProfileValues), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.ProfileValues.Parser, new[]{ "ProfileParameterId", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.OrganizationUserListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.OrganizationUserListView.Parser, new[]{ "OrganizationUserId", "OrganizationId", "ProfileId", "UserId", "ProfileValuesListView" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Request.Parser, new[]{ "OrganizationIdList", "UserType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.Response.Parser, new[]{ "Result", "Total" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.UserGroup), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.UserGroup.Parser, new[]{ "GroupId", "GroupName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.ProfileValue), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.ProfileValue.Parser, new[]{ "ProfileParameterId", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.AssociatedOrganizationUser), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.AssociatedOrganizationUser.Parser, new[]{ "AssociationType", "OrganizationUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Request.Parser, new[]{ "OrganizationUserId", "UserType", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.Response.Parser, new[]{ "OrganizationUserId", "OrganizationId", "UserId", "ProfileId", "ProfileValuesListView", "AssociatedOrganizationUserListView", "GroupListView", "CreatedAt", "Username", "FirstName", "LastName", "Email", "IsActive", "IsLocked", "IsPendingActivation", "LastLoginAt", "HasAcceptedInvitation" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Request.Parser, new[]{ "OrganizationId", "UserType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Types.Response.Parser, new[]{ "OrganizationUserId", "Email", "FirstName", "LastName", "Username", "CreatedAt" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Request.Parser, new[]{ "OrganizationId", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Types.Response.Parser, new[]{ "OrganizationUserId", "Username", "UserType" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Request.Parser, new[]{ "OrganizationUserId", "OrganizationId", "UserType", "TransactionId", "FirstName", "LastName", "Email", "IsActive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Request.Parser, new[]{ "OrganizationUserId1", "OrganizationUserId2", "AssociationType", "TransactionId", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Types.Response.Parser, new[]{ "AssociationId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Request.Parser, new[]{ "OrganizationUserId1", "OrganizationUserId2", "AssociationType", "TransactionId", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Request.Parser, new[]{ "AssociationType", "OrganizationUserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Request.Parser, new[]{ "OrganizationUserId", "UserType", "TransactionId", "Username", "FirstName", "LastName", "Email", "IsActive", "UserId", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Types.Response.Parser, new[]{ "CreatedAt" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Request.Parser, new[]{ "OrganizationUserId", "UserType", "FirstName", "LastName", "Email", "IsActive", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Types.Response.Parser, new[]{ "CreatedAt" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Request.Parser, new[]{ "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Types.Response.Parser, new[]{ "OrganizationIds" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Request.Parser, new[]{ "OrganizationUserId", "UserType", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Types.Response.Parser, new[]{ "Exists" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Request.Parser, new[]{ "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Types.Response.Parser, new[]{ "Exists" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Request.Parser, new[]{ "Username" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Types.Response.Parser, new[]{ "Exists" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Request.Parser, new[]{ "OrganizationUserId", "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Types.Response.Parser, new[]{ "UserType" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.SingleOrganizationOrgUserListView), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.SingleOrganizationOrgUserListView.Parser, new[]{ "UserId", "Email", "OrganizationId", "OrganizationUserId", "FirstName", "LastName", "IsActive", "UserType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Request.Parser, new[]{ "OrganizationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.Response.Parser, new[]{ "Result" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Request.Parser, new[]{ "ExternalUserId", "IsLocked" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Request.Parser, new[]{ "ExternalUserId", "IsPendingActivation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Request.Parser, new[]{ "ExternalUserId", "LastLoginAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response), global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Types.Response.Parser, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CreateOrganizationUser : pb::IMessage<CreateOrganizationUser> {
    private static readonly pb::MessageParser<CreateOrganizationUser> _parser = new pb::MessageParser<CreateOrganizationUser>(() => new CreateOrganizationUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOrganizationUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrganizationUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrganizationUser(CreateOrganizationUser other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrganizationUser Clone() {
      return new CreateOrganizationUser(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOrganizationUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOrganizationUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOrganizationUser other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateOrganizationUser message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          userId_ = other.userId_;
          organizationId_ = other.organizationId_;
          userType_ = other.userType_;
          transactionId_ = other.transactionId_;
          Username = other.Username;
          FirstName = other.FirstName;
          LastName = other.LastName;
          Email = other.Email;
          IsActive = other.IsActive;
          IsLocked = other.IsLocked;
          IsPendingActivation = other.IsPendingActivation;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 1;
        private string userId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 3;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        /// <summary>Field number for the "TransactionId" field.</summary>
        public const int TransactionIdFieldNumber = 4;
        private string transactionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TransactionId {
          get { return transactionId_; }
          set {
            transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Username" field.</summary>
        public const int UsernameFieldNumber = 8;
        private static readonly pb::FieldCodec<string> _single_username_codec = pb::FieldCodec.ForClassWrapper<string>(66);
        private string username_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username {
          get { return username_; }
          set {
            username_ = value;
          }
        }

        /// <summary>Field number for the "FirstName" field.</summary>
        public const int FirstNameFieldNumber = 9;
        private static readonly pb::FieldCodec<string> _single_firstName_codec = pb::FieldCodec.ForClassWrapper<string>(74);
        private string firstName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstName {
          get { return firstName_; }
          set {
            firstName_ = value;
          }
        }

        /// <summary>Field number for the "LastName" field.</summary>
        public const int LastNameFieldNumber = 10;
        private static readonly pb::FieldCodec<string> _single_lastName_codec = pb::FieldCodec.ForClassWrapper<string>(82);
        private string lastName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastName {
          get { return lastName_; }
          set {
            lastName_ = value;
          }
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 11;
        private static readonly pb::FieldCodec<string> _single_email_codec = pb::FieldCodec.ForClassWrapper<string>(90);
        private string email_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = value;
          }
        }

        /// <summary>Field number for the "IsActive" field.</summary>
        public const int IsActiveFieldNumber = 12;
        private static readonly pb::FieldCodec<bool?> _single_isActive_codec = pb::FieldCodec.ForStructWrapper<bool>(98);
        private bool? isActive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsActive {
          get { return isActive_; }
          set {
            isActive_ = value;
          }
        }

        /// <summary>Field number for the "IsLocked" field.</summary>
        public const int IsLockedFieldNumber = 13;
        private static readonly pb::FieldCodec<bool?> _single_isLocked_codec = pb::FieldCodec.ForStructWrapper<bool>(106);
        private bool? isLocked_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsLocked {
          get { return isLocked_; }
          set {
            isLocked_ = value;
          }
        }

        /// <summary>Field number for the "IsPendingActivation" field.</summary>
        public const int IsPendingActivationFieldNumber = 14;
        private static readonly pb::FieldCodec<bool?> _single_isPendingActivation_codec = pb::FieldCodec.ForStructWrapper<bool>(114);
        private bool? isPendingActivation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsPendingActivation {
          get { return isPendingActivation_; }
          set {
            isPendingActivation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (UserType != other.UserType) return false;
          if (TransactionId != other.TransactionId) return false;
          if (Username != other.Username) return false;
          if (FirstName != other.FirstName) return false;
          if (LastName != other.LastName) return false;
          if (Email != other.Email) return false;
          if (IsActive != other.IsActive) return false;
          if (IsLocked != other.IsLocked) return false;
          if (IsPendingActivation != other.IsPendingActivation) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
          if (username_ != null) hash ^= Username.GetHashCode();
          if (firstName_ != null) hash ^= FirstName.GetHashCode();
          if (lastName_ != null) hash ^= LastName.GetHashCode();
          if (email_ != null) hash ^= Email.GetHashCode();
          if (isActive_ != null) hash ^= IsActive.GetHashCode();
          if (isLocked_ != null) hash ^= IsLocked.GetHashCode();
          if (isPendingActivation_ != null) hash ^= IsPendingActivation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationId);
          }
          if (UserType != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UserType);
          }
          if (TransactionId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TransactionId);
          }
          if (username_ != null) {
            _single_username_codec.WriteTagAndValue(output, Username);
          }
          if (firstName_ != null) {
            _single_firstName_codec.WriteTagAndValue(output, FirstName);
          }
          if (lastName_ != null) {
            _single_lastName_codec.WriteTagAndValue(output, LastName);
          }
          if (email_ != null) {
            _single_email_codec.WriteTagAndValue(output, Email);
          }
          if (isActive_ != null) {
            _single_isActive_codec.WriteTagAndValue(output, IsActive);
          }
          if (isLocked_ != null) {
            _single_isLocked_codec.WriteTagAndValue(output, IsLocked);
          }
          if (isPendingActivation_ != null) {
            _single_isPendingActivation_codec.WriteTagAndValue(output, IsPendingActivation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (TransactionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
          }
          if (username_ != null) {
            size += _single_username_codec.CalculateSizeWithTag(Username);
          }
          if (firstName_ != null) {
            size += _single_firstName_codec.CalculateSizeWithTag(FirstName);
          }
          if (lastName_ != null) {
            size += _single_lastName_codec.CalculateSizeWithTag(LastName);
          }
          if (email_ != null) {
            size += _single_email_codec.CalculateSizeWithTag(Email);
          }
          if (isActive_ != null) {
            size += _single_isActive_codec.CalculateSizeWithTag(IsActive);
          }
          if (isLocked_ != null) {
            size += _single_isLocked_codec.CalculateSizeWithTag(IsLocked);
          }
          if (isPendingActivation_ != null) {
            size += _single_isPendingActivation_codec.CalculateSizeWithTag(IsPendingActivation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          if (other.TransactionId.Length != 0) {
            TransactionId = other.TransactionId;
          }
          if (other.username_ != null) {
            if (username_ == null || other.Username != "") {
              Username = other.Username;
            }
          }
          if (other.firstName_ != null) {
            if (firstName_ == null || other.FirstName != "") {
              FirstName = other.FirstName;
            }
          }
          if (other.lastName_ != null) {
            if (lastName_ == null || other.LastName != "") {
              LastName = other.LastName;
            }
          }
          if (other.email_ != null) {
            if (email_ == null || other.Email != "") {
              Email = other.Email;
            }
          }
          if (other.isActive_ != null) {
            if (isActive_ == null || other.IsActive != false) {
              IsActive = other.IsActive;
            }
          }
          if (other.isLocked_ != null) {
            if (isLocked_ == null || other.IsLocked != false) {
              IsLocked = other.IsLocked;
            }
          }
          if (other.isPendingActivation_ != null) {
            if (isPendingActivation_ == null || other.IsPendingActivation != false) {
              IsPendingActivation = other.IsPendingActivation;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                UserId = input.ReadString();
                break;
              }
              case 16: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 24: {
                UserType = input.ReadInt32();
                break;
              }
              case 34: {
                TransactionId = input.ReadString();
                break;
              }
              case 66: {
                string value = _single_username_codec.Read(input);
                if (username_ == null || value != "") {
                  Username = value;
                }
                break;
              }
              case 74: {
                string value = _single_firstName_codec.Read(input);
                if (firstName_ == null || value != "") {
                  FirstName = value;
                }
                break;
              }
              case 82: {
                string value = _single_lastName_codec.Read(input);
                if (lastName_ == null || value != "") {
                  LastName = value;
                }
                break;
              }
              case 90: {
                string value = _single_email_codec.Read(input);
                if (email_ == null || value != "") {
                  Email = value;
                }
                break;
              }
              case 98: {
                bool? value = _single_isActive_codec.Read(input);
                if (isActive_ == null || value != false) {
                  IsActive = value;
                }
                break;
              }
              case 106: {
                bool? value = _single_isLocked_codec.Read(input);
                if (isLocked_ == null || value != false) {
                  IsLocked = value;
                }
                break;
              }
              case 114: {
                bool? value = _single_isPendingActivation_codec.Read(input);
                if (isPendingActivation_ == null || value != false) {
                  IsPendingActivation = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUser.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          organizationUserId_ = other.organizationUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteOrganizationUser : pb::IMessage<DeleteOrganizationUser> {
    private static readonly pb::MessageParser<DeleteOrganizationUser> _parser = new pb::MessageParser<DeleteOrganizationUser>(() => new DeleteOrganizationUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteOrganizationUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOrganizationUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOrganizationUser(DeleteOrganizationUser other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOrganizationUser Clone() {
      return new DeleteOrganizationUser(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteOrganizationUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteOrganizationUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteOrganizationUser other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteOrganizationUser message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          UserType = other.UserType;
          OrganizationId = other.OrganizationId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_userType_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (UserType != other.UserType) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (userType_ != null) hash ^= UserType.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (userType_ != null) {
            _single_userType_codec.WriteTagAndValue(output, UserType);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (userType_ != null) {
            size += _single_userType_codec.CalculateSizeWithTag(UserType);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.userType_ != null) {
            if (userType_ == null || other.UserType != 0) {
              UserType = other.UserType;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                int? value = _single_userType_codec.Read(input);
                if (userType_ == null || value != 0) {
                  UserType = value;
                }
                break;
              }
              case 26: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUser.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          UserId = other.UserId;
          IsLastUserIdRelationship = other.IsLastUserIdRelationship;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _single_userId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
        private string userId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = value;
          }
        }

        /// <summary>Field number for the "IsLastUserIdRelationship" field.</summary>
        public const int IsLastUserIdRelationshipFieldNumber = 2;
        private static readonly pb::FieldCodec<bool?> _single_isLastUserIdRelationship_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
        private bool? isLastUserIdRelationship_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsLastUserIdRelationship {
          get { return isLastUserIdRelationship_; }
          set {
            isLastUserIdRelationship_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          if (IsLastUserIdRelationship != other.IsLastUserIdRelationship) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (userId_ != null) hash ^= UserId.GetHashCode();
          if (isLastUserIdRelationship_ != null) hash ^= IsLastUserIdRelationship.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (userId_ != null) {
            _single_userId_codec.WriteTagAndValue(output, UserId);
          }
          if (isLastUserIdRelationship_ != null) {
            _single_isLastUserIdRelationship_codec.WriteTagAndValue(output, IsLastUserIdRelationship);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (userId_ != null) {
            size += _single_userId_codec.CalculateSizeWithTag(UserId);
          }
          if (isLastUserIdRelationship_ != null) {
            size += _single_isLastUserIdRelationship_codec.CalculateSizeWithTag(IsLastUserIdRelationship);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.userId_ != null) {
            if (userId_ == null || other.UserId != "") {
              UserId = other.UserId;
            }
          }
          if (other.isLastUserIdRelationship_ != null) {
            if (isLastUserIdRelationship_ == null || other.IsLastUserIdRelationship != false) {
              IsLastUserIdRelationship = other.IsLastUserIdRelationship;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                string value = _single_userId_codec.Read(input);
                if (userId_ == null || value != "") {
                  UserId = value;
                }
                break;
              }
              case 18: {
                bool? value = _single_isLastUserIdRelationship_codec.Read(input);
                if (isLastUserIdRelationship_ == null || value != false) {
                  IsLastUserIdRelationship = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryOrganizationUsers : pb::IMessage<QueryOrganizationUsers> {
    private static readonly pb::MessageParser<QueryOrganizationUsers> _parser = new pb::MessageParser<QueryOrganizationUsers>(() => new QueryOrganizationUsers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOrganizationUsers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUsers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUsers(QueryOrganizationUsers other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUsers Clone() {
      return new QueryOrganizationUsers(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOrganizationUsers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOrganizationUsers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOrganizationUsers other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryOrganizationUsers message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          Page = other.Page;
          PageSize = other.PageSize;
          Q = other.Q;
          OrderBy = other.OrderBy;
          Direction = other.Direction;
          IsActive = other.IsActive;
          OrganizationId = other.OrganizationId;
          userTypes_ = other.userTypes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_page_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_pageSize_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        /// <summary>Field number for the "Q" field.</summary>
        public const int QFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_q_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string q_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Q {
          get { return q_; }
          set {
            q_ = value;
          }
        }

        /// <summary>Field number for the "OrderBy" field.</summary>
        public const int OrderByFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string orderBy_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OrderBy {
          get { return orderBy_; }
          set {
            orderBy_ = value;
          }
        }

        /// <summary>Field number for the "Direction" field.</summary>
        public const int DirectionFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_direction_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string direction_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Direction {
          get { return direction_; }
          set {
            direction_ = value;
          }
        }

        /// <summary>Field number for the "IsActive" field.</summary>
        public const int IsActiveFieldNumber = 6;
        private static readonly pb::FieldCodec<bool?> _single_isActive_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
        private bool? isActive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsActive {
          get { return isActive_; }
          set {
            isActive_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 7;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(58);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "UserTypes" field.</summary>
        public const int UserTypesFieldNumber = 8;
        private static readonly pb::FieldCodec<int> _repeated_userTypes_codec
            = pb::FieldCodec.ForInt32(66);
        private readonly pbc::RepeatedField<int> userTypes_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> UserTypes {
          get { return userTypes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          if (Q != other.Q) return false;
          if (OrderBy != other.OrderBy) return false;
          if (Direction != other.Direction) return false;
          if (IsActive != other.IsActive) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if(!userTypes_.Equals(other.userTypes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (page_ != null) hash ^= Page.GetHashCode();
          if (pageSize_ != null) hash ^= PageSize.GetHashCode();
          if (q_ != null) hash ^= Q.GetHashCode();
          if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
          if (direction_ != null) hash ^= Direction.GetHashCode();
          if (isActive_ != null) hash ^= IsActive.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          hash ^= userTypes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (page_ != null) {
            _single_page_codec.WriteTagAndValue(output, Page);
          }
          if (pageSize_ != null) {
            _single_pageSize_codec.WriteTagAndValue(output, PageSize);
          }
          if (q_ != null) {
            _single_q_codec.WriteTagAndValue(output, Q);
          }
          if (orderBy_ != null) {
            _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
          }
          if (direction_ != null) {
            _single_direction_codec.WriteTagAndValue(output, Direction);
          }
          if (isActive_ != null) {
            _single_isActive_codec.WriteTagAndValue(output, IsActive);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          userTypes_.WriteTo(output, _repeated_userTypes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (page_ != null) {
            size += _single_page_codec.CalculateSizeWithTag(Page);
          }
          if (pageSize_ != null) {
            size += _single_pageSize_codec.CalculateSizeWithTag(PageSize);
          }
          if (q_ != null) {
            size += _single_q_codec.CalculateSizeWithTag(Q);
          }
          if (orderBy_ != null) {
            size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
          }
          if (direction_ != null) {
            size += _single_direction_codec.CalculateSizeWithTag(Direction);
          }
          if (isActive_ != null) {
            size += _single_isActive_codec.CalculateSizeWithTag(IsActive);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          size += userTypes_.CalculateSize(_repeated_userTypes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.page_ != null) {
            if (page_ == null || other.Page != 0) {
              Page = other.Page;
            }
          }
          if (other.pageSize_ != null) {
            if (pageSize_ == null || other.PageSize != 0) {
              PageSize = other.PageSize;
            }
          }
          if (other.q_ != null) {
            if (q_ == null || other.Q != "") {
              Q = other.Q;
            }
          }
          if (other.orderBy_ != null) {
            if (orderBy_ == null || other.OrderBy != "") {
              OrderBy = other.OrderBy;
            }
          }
          if (other.direction_ != null) {
            if (direction_ == null || other.Direction != "") {
              Direction = other.Direction;
            }
          }
          if (other.isActive_ != null) {
            if (isActive_ == null || other.IsActive != false) {
              IsActive = other.IsActive;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          userTypes_.Add(other.userTypes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_page_codec.Read(input);
                if (page_ == null || value != 0) {
                  Page = value;
                }
                break;
              }
              case 18: {
                int? value = _single_pageSize_codec.Read(input);
                if (pageSize_ == null || value != 0) {
                  PageSize = value;
                }
                break;
              }
              case 26: {
                string value = _single_q_codec.Read(input);
                if (q_ == null || value != "") {
                  Q = value;
                }
                break;
              }
              case 34: {
                string value = _single_orderBy_codec.Read(input);
                if (orderBy_ == null || value != "") {
                  OrderBy = value;
                }
                break;
              }
              case 42: {
                string value = _single_direction_codec.Read(input);
                if (direction_ == null || value != "") {
                  Direction = value;
                }
                break;
              }
              case 50: {
                bool? value = _single_isActive_codec.Read(input);
                if (isActive_ == null || value != false) {
                  IsActive = value;
                }
                break;
              }
              case 58: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 66:
              case 64: {
                userTypes_.AddEntriesFrom(input, _repeated_userTypes_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
          result_ = other.result_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Pagination" field.</summary>
        public const int PaginationFieldNumber = 1;
        private global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Pagination pagination_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Pagination Pagination {
          get { return pagination_; }
          set {
            pagination_ = value;
          }
        }

        /// <summary>Field number for the "Result" field.</summary>
        public const int ResultFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.OrganizationUserListView> _repeated_result_codec
            = pb::FieldCodec.ForMessage(18, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.OrganizationUserListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.OrganizationUserListView> result_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.OrganizationUserListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.OrganizationUserListView> Result {
          get { return result_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Pagination, other.Pagination)) return false;
          if(!result_.Equals(other.result_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (pagination_ != null) hash ^= Pagination.GetHashCode();
          hash ^= result_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (pagination_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Pagination);
          }
          result_.WriteTo(output, _repeated_result_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (pagination_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
          }
          size += result_.CalculateSize(_repeated_result_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.pagination_ != null) {
            if (pagination_ == null) {
              pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Pagination();
            }
            Pagination.MergeFrom(other.Pagination);
          }
          result_.Add(other.result_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (pagination_ == null) {
                  pagination_ = new global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.Pagination();
                }
                input.ReadMessage(pagination_);
                break;
              }
              case 18: {
                result_.AddEntriesFrom(input, _repeated_result_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Pagination : pb::IMessage<Pagination> {
        private static readonly pb::MessageParser<Pagination> _parser = new pb::MessageParser<Pagination>(() => new Pagination());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Pagination> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination(Pagination other) : this() {
          Total = other.Total;
          Page = other.Page;
          PageSize = other.PageSize;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Pagination Clone() {
          return new Pagination(this);
        }

        /// <summary>Field number for the "Total" field.</summary>
        public const int TotalFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_total_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "Page" field.</summary>
        public const int PageFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_page_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? page_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? Page {
          get { return page_; }
          set {
            page_ = value;
          }
        }

        /// <summary>Field number for the "PageSize" field.</summary>
        public const int PageSizeFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_pageSize_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? pageSize_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? PageSize {
          get { return pageSize_; }
          set {
            pageSize_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Pagination);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Pagination other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Total != other.Total) return false;
          if (Page != other.Page) return false;
          if (PageSize != other.PageSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (total_ != null) hash ^= Total.GetHashCode();
          if (page_ != null) hash ^= Page.GetHashCode();
          if (pageSize_ != null) hash ^= PageSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (total_ != null) {
            _single_total_codec.WriteTagAndValue(output, Total);
          }
          if (page_ != null) {
            _single_page_codec.WriteTagAndValue(output, Page);
          }
          if (pageSize_ != null) {
            _single_pageSize_codec.WriteTagAndValue(output, PageSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (total_ != null) {
            size += _single_total_codec.CalculateSizeWithTag(Total);
          }
          if (page_ != null) {
            size += _single_page_codec.CalculateSizeWithTag(Page);
          }
          if (pageSize_ != null) {
            size += _single_pageSize_codec.CalculateSizeWithTag(PageSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Pagination other) {
          if (other == null) {
            return;
          }
          if (other.total_ != null) {
            if (total_ == null || other.Total != 0) {
              Total = other.Total;
            }
          }
          if (other.page_ != null) {
            if (page_ == null || other.Page != 0) {
              Page = other.Page;
            }
          }
          if (other.pageSize_ != null) {
            if (pageSize_ == null || other.PageSize != 0) {
              PageSize = other.PageSize;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_total_codec.Read(input);
                if (total_ == null || value != 0) {
                  Total = value;
                }
                break;
              }
              case 18: {
                int? value = _single_page_codec.Read(input);
                if (page_ == null || value != 0) {
                  Page = value;
                }
                break;
              }
              case 26: {
                int? value = _single_pageSize_codec.Read(input);
                if (pageSize_ == null || value != 0) {
                  PageSize = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class OrganizationUserListView : pb::IMessage<OrganizationUserListView> {
        private static readonly pb::MessageParser<OrganizationUserListView> _parser = new pb::MessageParser<OrganizationUserListView>(() => new OrganizationUserListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OrganizationUserListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserListView(OrganizationUserListView other) : this() {
          organizationUserId_ = other.organizationUserId_;
          organizationId_ = other.organizationId_;
          userType_ = other.userType_;
          Email = other.Email;
          Username = other.Username;
          FirstName = other.FirstName;
          LastName = other.LastName;
          roles_ = other.roles_.Clone();
          IsActive = other.IsActive;
          IsPendingActivation = other.IsPendingActivation;
          LastLoginTime = other.LastLoginTime;
          CreatedAt = other.CreatedAt;
          IsLocked = other.IsLocked;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserListView Clone() {
          return new OrganizationUserListView(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 3;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_email_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string email_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = value;
          }
        }

        /// <summary>Field number for the "Username" field.</summary>
        public const int UsernameFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_username_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string username_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username {
          get { return username_; }
          set {
            username_ = value;
          }
        }

        /// <summary>Field number for the "FirstName" field.</summary>
        public const int FirstNameFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _single_firstName_codec = pb::FieldCodec.ForClassWrapper<string>(50);
        private string firstName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstName {
          get { return firstName_; }
          set {
            firstName_ = value;
          }
        }

        /// <summary>Field number for the "LastName" field.</summary>
        public const int LastNameFieldNumber = 7;
        private static readonly pb::FieldCodec<string> _single_lastName_codec = pb::FieldCodec.ForClassWrapper<string>(58);
        private string lastName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastName {
          get { return lastName_; }
          set {
            lastName_ = value;
          }
        }

        /// <summary>Field number for the "Roles" field.</summary>
        public const int RolesFieldNumber = 8;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.RoleListView> _repeated_roles_codec
            = pb::FieldCodec.ForMessage(66, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.RoleListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.RoleListView> roles_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.RoleListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Types.RoleListView> Roles {
          get { return roles_; }
        }

        /// <summary>Field number for the "IsActive" field.</summary>
        public const int IsActiveFieldNumber = 9;
        private static readonly pb::FieldCodec<bool?> _single_isActive_codec = pb::FieldCodec.ForStructWrapper<bool>(74);
        private bool? isActive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsActive {
          get { return isActive_; }
          set {
            isActive_ = value;
          }
        }

        /// <summary>Field number for the "IsPendingActivation" field.</summary>
        public const int IsPendingActivationFieldNumber = 10;
        private static readonly pb::FieldCodec<bool?> _single_isPendingActivation_codec = pb::FieldCodec.ForStructWrapper<bool>(82);
        private bool? isPendingActivation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsPendingActivation {
          get { return isPendingActivation_; }
          set {
            isPendingActivation_ = value;
          }
        }

        /// <summary>Field number for the "LastLoginTime" field.</summary>
        public const int LastLoginTimeFieldNumber = 11;
        private static readonly pb::FieldCodec<long?> _single_lastLoginTime_codec = pb::FieldCodec.ForStructWrapper<long>(90);
        private long? lastLoginTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? LastLoginTime {
          get { return lastLoginTime_; }
          set {
            lastLoginTime_ = value;
          }
        }

        /// <summary>Field number for the "CreatedAt" field.</summary>
        public const int CreatedAtFieldNumber = 12;
        private static readonly pb::FieldCodec<long?> _single_createdAt_codec = pb::FieldCodec.ForStructWrapper<long>(98);
        private long? createdAt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? CreatedAt {
          get { return createdAt_; }
          set {
            createdAt_ = value;
          }
        }

        /// <summary>Field number for the "IsLocked" field.</summary>
        public const int IsLockedFieldNumber = 13;
        private static readonly pb::FieldCodec<bool?> _single_isLocked_codec = pb::FieldCodec.ForStructWrapper<bool>(106);
        private bool? isLocked_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsLocked {
          get { return isLocked_; }
          set {
            isLocked_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OrganizationUserListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OrganizationUserListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (UserType != other.UserType) return false;
          if (Email != other.Email) return false;
          if (Username != other.Username) return false;
          if (FirstName != other.FirstName) return false;
          if (LastName != other.LastName) return false;
          if(!roles_.Equals(other.roles_)) return false;
          if (IsActive != other.IsActive) return false;
          if (IsPendingActivation != other.IsPendingActivation) return false;
          if (LastLoginTime != other.LastLoginTime) return false;
          if (CreatedAt != other.CreatedAt) return false;
          if (IsLocked != other.IsLocked) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (email_ != null) hash ^= Email.GetHashCode();
          if (username_ != null) hash ^= Username.GetHashCode();
          if (firstName_ != null) hash ^= FirstName.GetHashCode();
          if (lastName_ != null) hash ^= LastName.GetHashCode();
          hash ^= roles_.GetHashCode();
          if (isActive_ != null) hash ^= IsActive.GetHashCode();
          if (isPendingActivation_ != null) hash ^= IsPendingActivation.GetHashCode();
          if (lastLoginTime_ != null) hash ^= LastLoginTime.GetHashCode();
          if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
          if (isLocked_ != null) hash ^= IsLocked.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationId);
          }
          if (UserType != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UserType);
          }
          if (email_ != null) {
            _single_email_codec.WriteTagAndValue(output, Email);
          }
          if (username_ != null) {
            _single_username_codec.WriteTagAndValue(output, Username);
          }
          if (firstName_ != null) {
            _single_firstName_codec.WriteTagAndValue(output, FirstName);
          }
          if (lastName_ != null) {
            _single_lastName_codec.WriteTagAndValue(output, LastName);
          }
          roles_.WriteTo(output, _repeated_roles_codec);
          if (isActive_ != null) {
            _single_isActive_codec.WriteTagAndValue(output, IsActive);
          }
          if (isPendingActivation_ != null) {
            _single_isPendingActivation_codec.WriteTagAndValue(output, IsPendingActivation);
          }
          if (lastLoginTime_ != null) {
            _single_lastLoginTime_codec.WriteTagAndValue(output, LastLoginTime);
          }
          if (createdAt_ != null) {
            _single_createdAt_codec.WriteTagAndValue(output, CreatedAt);
          }
          if (isLocked_ != null) {
            _single_isLocked_codec.WriteTagAndValue(output, IsLocked);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (email_ != null) {
            size += _single_email_codec.CalculateSizeWithTag(Email);
          }
          if (username_ != null) {
            size += _single_username_codec.CalculateSizeWithTag(Username);
          }
          if (firstName_ != null) {
            size += _single_firstName_codec.CalculateSizeWithTag(FirstName);
          }
          if (lastName_ != null) {
            size += _single_lastName_codec.CalculateSizeWithTag(LastName);
          }
          size += roles_.CalculateSize(_repeated_roles_codec);
          if (isActive_ != null) {
            size += _single_isActive_codec.CalculateSizeWithTag(IsActive);
          }
          if (isPendingActivation_ != null) {
            size += _single_isPendingActivation_codec.CalculateSizeWithTag(IsPendingActivation);
          }
          if (lastLoginTime_ != null) {
            size += _single_lastLoginTime_codec.CalculateSizeWithTag(LastLoginTime);
          }
          if (createdAt_ != null) {
            size += _single_createdAt_codec.CalculateSizeWithTag(CreatedAt);
          }
          if (isLocked_ != null) {
            size += _single_isLocked_codec.CalculateSizeWithTag(IsLocked);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OrganizationUserListView other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          if (other.email_ != null) {
            if (email_ == null || other.Email != "") {
              Email = other.Email;
            }
          }
          if (other.username_ != null) {
            if (username_ == null || other.Username != "") {
              Username = other.Username;
            }
          }
          if (other.firstName_ != null) {
            if (firstName_ == null || other.FirstName != "") {
              FirstName = other.FirstName;
            }
          }
          if (other.lastName_ != null) {
            if (lastName_ == null || other.LastName != "") {
              LastName = other.LastName;
            }
          }
          roles_.Add(other.roles_);
          if (other.isActive_ != null) {
            if (isActive_ == null || other.IsActive != false) {
              IsActive = other.IsActive;
            }
          }
          if (other.isPendingActivation_ != null) {
            if (isPendingActivation_ == null || other.IsPendingActivation != false) {
              IsPendingActivation = other.IsPendingActivation;
            }
          }
          if (other.lastLoginTime_ != null) {
            if (lastLoginTime_ == null || other.LastLoginTime != 0L) {
              LastLoginTime = other.LastLoginTime;
            }
          }
          if (other.createdAt_ != null) {
            if (createdAt_ == null || other.CreatedAt != 0L) {
              CreatedAt = other.CreatedAt;
            }
          }
          if (other.isLocked_ != null) {
            if (isLocked_ == null || other.IsLocked != false) {
              IsLocked = other.IsLocked;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 24: {
                UserType = input.ReadInt32();
                break;
              }
              case 34: {
                string value = _single_email_codec.Read(input);
                if (email_ == null || value != "") {
                  Email = value;
                }
                break;
              }
              case 42: {
                string value = _single_username_codec.Read(input);
                if (username_ == null || value != "") {
                  Username = value;
                }
                break;
              }
              case 50: {
                string value = _single_firstName_codec.Read(input);
                if (firstName_ == null || value != "") {
                  FirstName = value;
                }
                break;
              }
              case 58: {
                string value = _single_lastName_codec.Read(input);
                if (lastName_ == null || value != "") {
                  LastName = value;
                }
                break;
              }
              case 66: {
                roles_.AddEntriesFrom(input, _repeated_roles_codec);
                break;
              }
              case 74: {
                bool? value = _single_isActive_codec.Read(input);
                if (isActive_ == null || value != false) {
                  IsActive = value;
                }
                break;
              }
              case 82: {
                bool? value = _single_isPendingActivation_codec.Read(input);
                if (isPendingActivation_ == null || value != false) {
                  IsPendingActivation = value;
                }
                break;
              }
              case 90: {
                long? value = _single_lastLoginTime_codec.Read(input);
                if (lastLoginTime_ == null || value != 0L) {
                  LastLoginTime = value;
                }
                break;
              }
              case 98: {
                long? value = _single_createdAt_codec.Read(input);
                if (createdAt_ == null || value != 0L) {
                  CreatedAt = value;
                }
                break;
              }
              case 106: {
                bool? value = _single_isLocked_codec.Read(input);
                if (isLocked_ == null || value != false) {
                  IsLocked = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class RoleListView : pb::IMessage<RoleListView> {
        private static readonly pb::MessageParser<RoleListView> _parser = new pb::MessageParser<RoleListView>(() => new RoleListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RoleListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUsers.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoleListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoleListView(RoleListView other) : this() {
          RoleName = other.RoleName;
          Description = other.Description;
          DisplayName = other.DisplayName;
          IsDefault = other.IsDefault;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RoleListView Clone() {
          return new RoleListView(this);
        }

        /// <summary>Field number for the "RoleName" field.</summary>
        public const int RoleNameFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _single_roleName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
        private string roleName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RoleName {
          get { return roleName_; }
          set {
            roleName_ = value;
          }
        }

        /// <summary>Field number for the "Description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string description_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = value;
          }
        }

        /// <summary>Field number for the "DisplayName" field.</summary>
        public const int DisplayNameFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_displayName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string displayName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplayName {
          get { return displayName_; }
          set {
            displayName_ = value;
          }
        }

        /// <summary>Field number for the "IsDefault" field.</summary>
        public const int IsDefaultFieldNumber = 4;
        private static readonly pb::FieldCodec<bool?> _single_isDefault_codec = pb::FieldCodec.ForStructWrapper<bool>(34);
        private bool? isDefault_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsDefault {
          get { return isDefault_; }
          set {
            isDefault_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RoleListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RoleListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RoleName != other.RoleName) return false;
          if (Description != other.Description) return false;
          if (DisplayName != other.DisplayName) return false;
          if (IsDefault != other.IsDefault) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (roleName_ != null) hash ^= RoleName.GetHashCode();
          if (description_ != null) hash ^= Description.GetHashCode();
          if (displayName_ != null) hash ^= DisplayName.GetHashCode();
          if (isDefault_ != null) hash ^= IsDefault.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (roleName_ != null) {
            _single_roleName_codec.WriteTagAndValue(output, RoleName);
          }
          if (description_ != null) {
            _single_description_codec.WriteTagAndValue(output, Description);
          }
          if (displayName_ != null) {
            _single_displayName_codec.WriteTagAndValue(output, DisplayName);
          }
          if (isDefault_ != null) {
            _single_isDefault_codec.WriteTagAndValue(output, IsDefault);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (roleName_ != null) {
            size += _single_roleName_codec.CalculateSizeWithTag(RoleName);
          }
          if (description_ != null) {
            size += _single_description_codec.CalculateSizeWithTag(Description);
          }
          if (displayName_ != null) {
            size += _single_displayName_codec.CalculateSizeWithTag(DisplayName);
          }
          if (isDefault_ != null) {
            size += _single_isDefault_codec.CalculateSizeWithTag(IsDefault);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RoleListView other) {
          if (other == null) {
            return;
          }
          if (other.roleName_ != null) {
            if (roleName_ == null || other.RoleName != "") {
              RoleName = other.RoleName;
            }
          }
          if (other.description_ != null) {
            if (description_ == null || other.Description != "") {
              Description = other.Description;
            }
          }
          if (other.displayName_ != null) {
            if (displayName_ == null || other.DisplayName != "") {
              DisplayName = other.DisplayName;
            }
          }
          if (other.isDefault_ != null) {
            if (isDefault_ == null || other.IsDefault != false) {
              IsDefault = other.IsDefault;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                string value = _single_roleName_codec.Read(input);
                if (roleName_ == null || value != "") {
                  RoleName = value;
                }
                break;
              }
              case 18: {
                string value = _single_description_codec.Read(input);
                if (description_ == null || value != "") {
                  Description = value;
                }
                break;
              }
              case 26: {
                string value = _single_displayName_codec.Read(input);
                if (displayName_ == null || value != "") {
                  DisplayName = value;
                }
                break;
              }
              case 34: {
                bool? value = _single_isDefault_codec.Read(input);
                if (isDefault_ == null || value != false) {
                  IsDefault = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryOrganizationUser : pb::IMessage<QueryOrganizationUser> {
    private static readonly pb::MessageParser<QueryOrganizationUser> _parser = new pb::MessageParser<QueryOrganizationUser>(() => new QueryOrganizationUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOrganizationUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUser(QueryOrganizationUser other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrganizationUser Clone() {
      return new QueryOrganizationUser(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOrganizationUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOrganizationUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOrganizationUser other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryOrganizationUser message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ProfileValues : pb::IMessage<ProfileValues> {
        private static readonly pb::MessageParser<ProfileValues> _parser = new pb::MessageParser<ProfileValues>(() => new ProfileValues());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProfileValues> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProfileValues() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProfileValues(ProfileValues other) : this() {
          profileParameterId_ = other.profileParameterId_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProfileValues Clone() {
          return new ProfileValues(this);
        }

        /// <summary>Field number for the "ProfileParameterId" field.</summary>
        public const int ProfileParameterIdFieldNumber = 1;
        private int profileParameterId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ProfileParameterId {
          get { return profileParameterId_; }
          set {
            profileParameterId_ = value;
          }
        }

        /// <summary>Field number for the "Value" field.</summary>
        public const int ValueFieldNumber = 2;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProfileValues);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProfileValues other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProfileParameterId != other.ProfileParameterId) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ProfileParameterId != 0) hash ^= ProfileParameterId.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ProfileParameterId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ProfileParameterId);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ProfileParameterId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProfileParameterId);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProfileValues other) {
          if (other == null) {
            return;
          }
          if (other.ProfileParameterId != 0) {
            ProfileParameterId = other.ProfileParameterId;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProfileParameterId = input.ReadInt32();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class OrganizationUserListView : pb::IMessage<OrganizationUserListView> {
        private static readonly pb::MessageParser<OrganizationUserListView> _parser = new pb::MessageParser<OrganizationUserListView>(() => new OrganizationUserListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OrganizationUserListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserListView(OrganizationUserListView other) : this() {
          organizationUserId_ = other.organizationUserId_;
          organizationId_ = other.organizationId_;
          profileId_ = other.profileId_;
          userId_ = other.userId_;
          profileValuesListView_ = other.profileValuesListView_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrganizationUserListView Clone() {
          return new OrganizationUserListView(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "ProfileId" field.</summary>
        public const int ProfileIdFieldNumber = 3;
        private int profileId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ProfileId {
          get { return profileId_; }
          set {
            profileId_ = value;
          }
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 4;
        private string userId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ProfileValuesListView" field.</summary>
        public const int ProfileValuesListViewFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.ProfileValues> _repeated_profileValuesListView_codec
            = pb::FieldCodec.ForMessage(42, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.ProfileValues.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.ProfileValues> profileValuesListView_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.ProfileValues>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.ProfileValues> ProfileValuesListView {
          get { return profileValuesListView_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OrganizationUserListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OrganizationUserListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (ProfileId != other.ProfileId) return false;
          if (UserId != other.UserId) return false;
          if(!profileValuesListView_.Equals(other.profileValuesListView_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (ProfileId != 0) hash ^= ProfileId.GetHashCode();
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          hash ^= profileValuesListView_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationId);
          }
          if (ProfileId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(ProfileId);
          }
          if (UserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(UserId);
          }
          profileValuesListView_.WriteTo(output, _repeated_profileValuesListView_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (ProfileId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProfileId);
          }
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          size += profileValuesListView_.CalculateSize(_repeated_profileValuesListView_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OrganizationUserListView other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.ProfileId != 0) {
            ProfileId = other.ProfileId;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          profileValuesListView_.Add(other.profileValuesListView_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 24: {
                ProfileId = input.ReadInt32();
                break;
              }
              case 34: {
                UserId = input.ReadString();
                break;
              }
              case 42: {
                profileValuesListView_.AddEntriesFrom(input, _repeated_profileValuesListView_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationIdList_ = other.organizationIdList_.Clone();
          userType_ = other.userType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationIdList" field.</summary>
        public const int OrganizationIdListFieldNumber = 1;
        private static readonly pb::FieldCodec<int> _repeated_organizationIdList_codec
            = pb::FieldCodec.ForInt32(10);
        private readonly pbc::RepeatedField<int> organizationIdList_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> OrganizationIdList {
          get { return organizationIdList_; }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 2;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!organizationIdList_.Equals(other.organizationIdList_)) return false;
          if (UserType != other.UserType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= organizationIdList_.GetHashCode();
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          organizationIdList_.WriteTo(output, _repeated_organizationIdList_codec);
          if (UserType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UserType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += organizationIdList_.CalculateSize(_repeated_organizationIdList_codec);
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          organizationIdList_.Add(other.organizationIdList_);
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                organizationIdList_.AddEntriesFrom(input, _repeated_organizationIdList_codec);
                break;
              }
              case 16: {
                UserType = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          result_ = other.result_.Clone();
          total_ = other.total_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Result" field.</summary>
        public const int ResultFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.OrganizationUserListView> _repeated_result_codec
            = pb::FieldCodec.ForMessage(10, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.OrganizationUserListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.OrganizationUserListView> result_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.OrganizationUserListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryOrganizationUser.Types.OrganizationUserListView> Result {
          get { return result_; }
        }

        /// <summary>Field number for the "Total" field.</summary>
        public const int TotalFieldNumber = 2;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!result_.Equals(other.result_)) return false;
          if (Total != other.Total) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= result_.GetHashCode();
          if (Total != 0) hash ^= Total.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          result_.WriteTo(output, _repeated_result_codec);
          if (Total != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Total);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += result_.CalculateSize(_repeated_result_codec);
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          result_.Add(other.result_);
          if (other.Total != 0) {
            Total = other.Total;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                result_.AddEntriesFrom(input, _repeated_result_codec);
                break;
              }
              case 16: {
                Total = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetOrganizationUser : pb::IMessage<GetOrganizationUser> {
    private static readonly pb::MessageParser<GetOrganizationUser> _parser = new pb::MessageParser<GetOrganizationUser>(() => new GetOrganizationUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOrganizationUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationUser(GetOrganizationUser other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationUser Clone() {
      return new GetOrganizationUser(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOrganizationUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOrganizationUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOrganizationUser other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetOrganizationUser message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class UserGroup : pb::IMessage<UserGroup> {
        private static readonly pb::MessageParser<UserGroup> _parser = new pb::MessageParser<UserGroup>(() => new UserGroup());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UserGroup> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserGroup() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserGroup(UserGroup other) : this() {
          groupId_ = other.groupId_;
          groupName_ = other.groupName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserGroup Clone() {
          return new UserGroup(this);
        }

        /// <summary>Field number for the "GroupId" field.</summary>
        public const int GroupIdFieldNumber = 1;
        private int groupId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int GroupId {
          get { return groupId_; }
          set {
            groupId_ = value;
          }
        }

        /// <summary>Field number for the "GroupName" field.</summary>
        public const int GroupNameFieldNumber = 2;
        private string groupName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string GroupName {
          get { return groupName_; }
          set {
            groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UserGroup);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UserGroup other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GroupId != other.GroupId) return false;
          if (GroupName != other.GroupName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (GroupId != 0) hash ^= GroupId.GetHashCode();
          if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (GroupId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(GroupId);
          }
          if (GroupName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(GroupName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (GroupId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
          }
          if (GroupName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UserGroup other) {
          if (other == null) {
            return;
          }
          if (other.GroupId != 0) {
            GroupId = other.GroupId;
          }
          if (other.GroupName.Length != 0) {
            GroupName = other.GroupName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                GroupId = input.ReadInt32();
                break;
              }
              case 18: {
                GroupName = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ProfileValue : pb::IMessage<ProfileValue> {
        private static readonly pb::MessageParser<ProfileValue> _parser = new pb::MessageParser<ProfileValue>(() => new ProfileValue());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProfileValue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProfileValue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProfileValue(ProfileValue other) : this() {
          profileParameterId_ = other.profileParameterId_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProfileValue Clone() {
          return new ProfileValue(this);
        }

        /// <summary>Field number for the "ProfileParameterId" field.</summary>
        public const int ProfileParameterIdFieldNumber = 1;
        private int profileParameterId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ProfileParameterId {
          get { return profileParameterId_; }
          set {
            profileParameterId_ = value;
          }
        }

        /// <summary>Field number for the "Value" field.</summary>
        public const int ValueFieldNumber = 2;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProfileValue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProfileValue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ProfileParameterId != other.ProfileParameterId) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ProfileParameterId != 0) hash ^= ProfileParameterId.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ProfileParameterId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(ProfileParameterId);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ProfileParameterId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProfileParameterId);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProfileValue other) {
          if (other == null) {
            return;
          }
          if (other.ProfileParameterId != 0) {
            ProfileParameterId = other.ProfileParameterId;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ProfileParameterId = input.ReadInt32();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class AssociatedOrganizationUser : pb::IMessage<AssociatedOrganizationUser> {
        private static readonly pb::MessageParser<AssociatedOrganizationUser> _parser = new pb::MessageParser<AssociatedOrganizationUser>(() => new AssociatedOrganizationUser());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AssociatedOrganizationUser> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AssociatedOrganizationUser() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AssociatedOrganizationUser(AssociatedOrganizationUser other) : this() {
          associationType_ = other.associationType_;
          organizationUserId_ = other.organizationUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AssociatedOrganizationUser Clone() {
          return new AssociatedOrganizationUser(this);
        }

        /// <summary>Field number for the "AssociationType" field.</summary>
        public const int AssociationTypeFieldNumber = 1;
        private int associationType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AssociationType {
          get { return associationType_; }
          set {
            associationType_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 2;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AssociatedOrganizationUser);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AssociatedOrganizationUser other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AssociationType != other.AssociationType) return false;
          if (OrganizationUserId != other.OrganizationUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AssociationType != 0) hash ^= AssociationType.GetHashCode();
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AssociationType != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AssociationType);
          }
          if (OrganizationUserId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AssociationType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AssociationType);
          }
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AssociatedOrganizationUser other) {
          if (other == null) {
            return;
          }
          if (other.AssociationType != 0) {
            AssociationType = other.AssociationType;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AssociationType = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationUserId_ = other.organizationUserId_;
          userType_ = other.userType_;
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 2;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (UserType != other.UserType) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (UserType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UserType);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 16: {
                UserType = input.ReadInt32();
                break;
              }
              case 24: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          organizationUserId_ = other.organizationUserId_;
          organizationId_ = other.organizationId_;
          userId_ = other.userId_;
          profileId_ = other.profileId_;
          profileValuesListView_ = other.profileValuesListView_.Clone();
          associatedOrganizationUserListView_ = other.associatedOrganizationUserListView_.Clone();
          groupListView_ = other.groupListView_.Clone();
          CreatedAt = other.CreatedAt;
          Username = other.Username;
          FirstName = other.FirstName;
          LastName = other.LastName;
          Email = other.Email;
          IsActive = other.IsActive;
          IsLocked = other.IsLocked;
          IsPendingActivation = other.IsPendingActivation;
          LastLoginAt = other.LastLoginAt;
          HasAcceptedInvitation = other.HasAcceptedInvitation;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 3;
        private string userId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ProfileId" field.</summary>
        public const int ProfileIdFieldNumber = 4;
        private int profileId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ProfileId {
          get { return profileId_; }
          set {
            profileId_ = value;
          }
        }

        /// <summary>Field number for the "ProfileValuesListView" field.</summary>
        public const int ProfileValuesListViewFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.ProfileValue> _repeated_profileValuesListView_codec
            = pb::FieldCodec.ForMessage(42, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.ProfileValue.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.ProfileValue> profileValuesListView_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.ProfileValue>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.ProfileValue> ProfileValuesListView {
          get { return profileValuesListView_; }
        }

        /// <summary>Field number for the "AssociatedOrganizationUserListView" field.</summary>
        public const int AssociatedOrganizationUserListViewFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.AssociatedOrganizationUser> _repeated_associatedOrganizationUserListView_codec
            = pb::FieldCodec.ForMessage(50, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.AssociatedOrganizationUser.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.AssociatedOrganizationUser> associatedOrganizationUserListView_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.AssociatedOrganizationUser>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.AssociatedOrganizationUser> AssociatedOrganizationUserListView {
          get { return associatedOrganizationUserListView_; }
        }

        /// <summary>Field number for the "GroupListView" field.</summary>
        public const int GroupListViewFieldNumber = 13;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.UserGroup> _repeated_groupListView_codec
            = pb::FieldCodec.ForMessage(106, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.UserGroup.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.UserGroup> groupListView_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.UserGroup>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUser.Types.UserGroup> GroupListView {
          get { return groupListView_; }
        }

        /// <summary>Field number for the "CreatedAt" field.</summary>
        public const int CreatedAtFieldNumber = 7;
        private static readonly pb::FieldCodec<long?> _single_createdAt_codec = pb::FieldCodec.ForStructWrapper<long>(58);
        private long? createdAt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? CreatedAt {
          get { return createdAt_; }
          set {
            createdAt_ = value;
          }
        }

        /// <summary>Field number for the "Username" field.</summary>
        public const int UsernameFieldNumber = 8;
        private static readonly pb::FieldCodec<string> _single_username_codec = pb::FieldCodec.ForClassWrapper<string>(66);
        private string username_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username {
          get { return username_; }
          set {
            username_ = value;
          }
        }

        /// <summary>Field number for the "FirstName" field.</summary>
        public const int FirstNameFieldNumber = 9;
        private static readonly pb::FieldCodec<string> _single_firstName_codec = pb::FieldCodec.ForClassWrapper<string>(74);
        private string firstName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstName {
          get { return firstName_; }
          set {
            firstName_ = value;
          }
        }

        /// <summary>Field number for the "LastName" field.</summary>
        public const int LastNameFieldNumber = 10;
        private static readonly pb::FieldCodec<string> _single_lastName_codec = pb::FieldCodec.ForClassWrapper<string>(82);
        private string lastName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastName {
          get { return lastName_; }
          set {
            lastName_ = value;
          }
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 11;
        private static readonly pb::FieldCodec<string> _single_email_codec = pb::FieldCodec.ForClassWrapper<string>(90);
        private string email_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = value;
          }
        }

        /// <summary>Field number for the "IsActive" field.</summary>
        public const int IsActiveFieldNumber = 12;
        private static readonly pb::FieldCodec<bool?> _single_isActive_codec = pb::FieldCodec.ForStructWrapper<bool>(98);
        private bool? isActive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsActive {
          get { return isActive_; }
          set {
            isActive_ = value;
          }
        }

        /// <summary>Field number for the "IsLocked" field.</summary>
        public const int IsLockedFieldNumber = 14;
        private static readonly pb::FieldCodec<bool?> _single_isLocked_codec = pb::FieldCodec.ForStructWrapper<bool>(114);
        private bool? isLocked_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsLocked {
          get { return isLocked_; }
          set {
            isLocked_ = value;
          }
        }

        /// <summary>Field number for the "IsPendingActivation" field.</summary>
        public const int IsPendingActivationFieldNumber = 15;
        private static readonly pb::FieldCodec<bool?> _single_isPendingActivation_codec = pb::FieldCodec.ForStructWrapper<bool>(122);
        private bool? isPendingActivation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsPendingActivation {
          get { return isPendingActivation_; }
          set {
            isPendingActivation_ = value;
          }
        }

        /// <summary>Field number for the "LastLoginAt" field.</summary>
        public const int LastLoginAtFieldNumber = 16;
        private static readonly pb::FieldCodec<long?> _single_lastLoginAt_codec = pb::FieldCodec.ForStructWrapper<long>(130);
        private long? lastLoginAt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? LastLoginAt {
          get { return lastLoginAt_; }
          set {
            lastLoginAt_ = value;
          }
        }

        /// <summary>Field number for the "HasAcceptedInvitation" field.</summary>
        public const int HasAcceptedInvitationFieldNumber = 17;
        private static readonly pb::FieldCodec<bool?> _single_hasAcceptedInvitation_codec = pb::FieldCodec.ForStructWrapper<bool>(138);
        private bool? hasAcceptedInvitation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? HasAcceptedInvitation {
          get { return hasAcceptedInvitation_; }
          set {
            hasAcceptedInvitation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (UserId != other.UserId) return false;
          if (ProfileId != other.ProfileId) return false;
          if(!profileValuesListView_.Equals(other.profileValuesListView_)) return false;
          if(!associatedOrganizationUserListView_.Equals(other.associatedOrganizationUserListView_)) return false;
          if(!groupListView_.Equals(other.groupListView_)) return false;
          if (CreatedAt != other.CreatedAt) return false;
          if (Username != other.Username) return false;
          if (FirstName != other.FirstName) return false;
          if (LastName != other.LastName) return false;
          if (Email != other.Email) return false;
          if (IsActive != other.IsActive) return false;
          if (IsLocked != other.IsLocked) return false;
          if (IsPendingActivation != other.IsPendingActivation) return false;
          if (LastLoginAt != other.LastLoginAt) return false;
          if (HasAcceptedInvitation != other.HasAcceptedInvitation) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (ProfileId != 0) hash ^= ProfileId.GetHashCode();
          hash ^= profileValuesListView_.GetHashCode();
          hash ^= associatedOrganizationUserListView_.GetHashCode();
          hash ^= groupListView_.GetHashCode();
          if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
          if (username_ != null) hash ^= Username.GetHashCode();
          if (firstName_ != null) hash ^= FirstName.GetHashCode();
          if (lastName_ != null) hash ^= LastName.GetHashCode();
          if (email_ != null) hash ^= Email.GetHashCode();
          if (isActive_ != null) hash ^= IsActive.GetHashCode();
          if (isLocked_ != null) hash ^= IsLocked.GetHashCode();
          if (isPendingActivation_ != null) hash ^= IsPendingActivation.GetHashCode();
          if (lastLoginAt_ != null) hash ^= LastLoginAt.GetHashCode();
          if (hasAcceptedInvitation_ != null) hash ^= HasAcceptedInvitation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationId);
          }
          if (UserId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(UserId);
          }
          if (ProfileId != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(ProfileId);
          }
          profileValuesListView_.WriteTo(output, _repeated_profileValuesListView_codec);
          associatedOrganizationUserListView_.WriteTo(output, _repeated_associatedOrganizationUserListView_codec);
          if (createdAt_ != null) {
            _single_createdAt_codec.WriteTagAndValue(output, CreatedAt);
          }
          if (username_ != null) {
            _single_username_codec.WriteTagAndValue(output, Username);
          }
          if (firstName_ != null) {
            _single_firstName_codec.WriteTagAndValue(output, FirstName);
          }
          if (lastName_ != null) {
            _single_lastName_codec.WriteTagAndValue(output, LastName);
          }
          if (email_ != null) {
            _single_email_codec.WriteTagAndValue(output, Email);
          }
          if (isActive_ != null) {
            _single_isActive_codec.WriteTagAndValue(output, IsActive);
          }
          groupListView_.WriteTo(output, _repeated_groupListView_codec);
          if (isLocked_ != null) {
            _single_isLocked_codec.WriteTagAndValue(output, IsLocked);
          }
          if (isPendingActivation_ != null) {
            _single_isPendingActivation_codec.WriteTagAndValue(output, IsPendingActivation);
          }
          if (lastLoginAt_ != null) {
            _single_lastLoginAt_codec.WriteTagAndValue(output, LastLoginAt);
          }
          if (hasAcceptedInvitation_ != null) {
            _single_hasAcceptedInvitation_codec.WriteTagAndValue(output, HasAcceptedInvitation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (ProfileId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProfileId);
          }
          size += profileValuesListView_.CalculateSize(_repeated_profileValuesListView_codec);
          size += associatedOrganizationUserListView_.CalculateSize(_repeated_associatedOrganizationUserListView_codec);
          size += groupListView_.CalculateSize(_repeated_groupListView_codec);
          if (createdAt_ != null) {
            size += _single_createdAt_codec.CalculateSizeWithTag(CreatedAt);
          }
          if (username_ != null) {
            size += _single_username_codec.CalculateSizeWithTag(Username);
          }
          if (firstName_ != null) {
            size += _single_firstName_codec.CalculateSizeWithTag(FirstName);
          }
          if (lastName_ != null) {
            size += _single_lastName_codec.CalculateSizeWithTag(LastName);
          }
          if (email_ != null) {
            size += _single_email_codec.CalculateSizeWithTag(Email);
          }
          if (isActive_ != null) {
            size += _single_isActive_codec.CalculateSizeWithTag(IsActive);
          }
          if (isLocked_ != null) {
            size += _single_isLocked_codec.CalculateSizeWithTag(IsLocked);
          }
          if (isPendingActivation_ != null) {
            size += _single_isPendingActivation_codec.CalculateSizeWithTag(IsPendingActivation);
          }
          if (lastLoginAt_ != null) {
            size += _single_lastLoginAt_codec.CalculateSizeWithTag(LastLoginAt);
          }
          if (hasAcceptedInvitation_ != null) {
            size += _single_hasAcceptedInvitation_codec.CalculateSizeWithTag(HasAcceptedInvitation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          if (other.ProfileId != 0) {
            ProfileId = other.ProfileId;
          }
          profileValuesListView_.Add(other.profileValuesListView_);
          associatedOrganizationUserListView_.Add(other.associatedOrganizationUserListView_);
          groupListView_.Add(other.groupListView_);
          if (other.createdAt_ != null) {
            if (createdAt_ == null || other.CreatedAt != 0L) {
              CreatedAt = other.CreatedAt;
            }
          }
          if (other.username_ != null) {
            if (username_ == null || other.Username != "") {
              Username = other.Username;
            }
          }
          if (other.firstName_ != null) {
            if (firstName_ == null || other.FirstName != "") {
              FirstName = other.FirstName;
            }
          }
          if (other.lastName_ != null) {
            if (lastName_ == null || other.LastName != "") {
              LastName = other.LastName;
            }
          }
          if (other.email_ != null) {
            if (email_ == null || other.Email != "") {
              Email = other.Email;
            }
          }
          if (other.isActive_ != null) {
            if (isActive_ == null || other.IsActive != false) {
              IsActive = other.IsActive;
            }
          }
          if (other.isLocked_ != null) {
            if (isLocked_ == null || other.IsLocked != false) {
              IsLocked = other.IsLocked;
            }
          }
          if (other.isPendingActivation_ != null) {
            if (isPendingActivation_ == null || other.IsPendingActivation != false) {
              IsPendingActivation = other.IsPendingActivation;
            }
          }
          if (other.lastLoginAt_ != null) {
            if (lastLoginAt_ == null || other.LastLoginAt != 0L) {
              LastLoginAt = other.LastLoginAt;
            }
          }
          if (other.hasAcceptedInvitation_ != null) {
            if (hasAcceptedInvitation_ == null || other.HasAcceptedInvitation != false) {
              HasAcceptedInvitation = other.HasAcceptedInvitation;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 26: {
                UserId = input.ReadString();
                break;
              }
              case 32: {
                ProfileId = input.ReadInt32();
                break;
              }
              case 42: {
                profileValuesListView_.AddEntriesFrom(input, _repeated_profileValuesListView_codec);
                break;
              }
              case 50: {
                associatedOrganizationUserListView_.AddEntriesFrom(input, _repeated_associatedOrganizationUserListView_codec);
                break;
              }
              case 58: {
                long? value = _single_createdAt_codec.Read(input);
                if (createdAt_ == null || value != 0L) {
                  CreatedAt = value;
                }
                break;
              }
              case 66: {
                string value = _single_username_codec.Read(input);
                if (username_ == null || value != "") {
                  Username = value;
                }
                break;
              }
              case 74: {
                string value = _single_firstName_codec.Read(input);
                if (firstName_ == null || value != "") {
                  FirstName = value;
                }
                break;
              }
              case 82: {
                string value = _single_lastName_codec.Read(input);
                if (lastName_ == null || value != "") {
                  LastName = value;
                }
                break;
              }
              case 90: {
                string value = _single_email_codec.Read(input);
                if (email_ == null || value != "") {
                  Email = value;
                }
                break;
              }
              case 98: {
                bool? value = _single_isActive_codec.Read(input);
                if (isActive_ == null || value != false) {
                  IsActive = value;
                }
                break;
              }
              case 106: {
                groupListView_.AddEntriesFrom(input, _repeated_groupListView_codec);
                break;
              }
              case 114: {
                bool? value = _single_isLocked_codec.Read(input);
                if (isLocked_ == null || value != false) {
                  IsLocked = value;
                }
                break;
              }
              case 122: {
                bool? value = _single_isPendingActivation_codec.Read(input);
                if (isPendingActivation_ == null || value != false) {
                  IsPendingActivation = value;
                }
                break;
              }
              case 130: {
                long? value = _single_lastLoginAt_codec.Read(input);
                if (lastLoginAt_ == null || value != 0L) {
                  LastLoginAt = value;
                }
                break;
              }
              case 138: {
                bool? value = _single_hasAcceptedInvitation_codec.Read(input);
                if (hasAcceptedInvitation_ == null || value != false) {
                  HasAcceptedInvitation = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetOrganizationAdmin : pb::IMessage<GetOrganizationAdmin> {
    private static readonly pb::MessageParser<GetOrganizationAdmin> _parser = new pb::MessageParser<GetOrganizationAdmin>(() => new GetOrganizationAdmin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOrganizationAdmin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationAdmin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationAdmin(GetOrganizationAdmin other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationAdmin Clone() {
      return new GetOrganizationAdmin(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOrganizationAdmin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOrganizationAdmin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOrganizationAdmin other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetOrganizationAdmin message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationId_ = other.organizationId_;
          userType_ = other.userType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 2;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (UserType != other.UserType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationId);
          }
          if (UserType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UserType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 16: {
                UserType = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationAdmin.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          organizationUserId_ = other.organizationUserId_;
          email_ = other.email_;
          FirstName = other.FirstName;
          LastName = other.LastName;
          Username = other.Username;
          CreatedAt = other.CreatedAt;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 2;
        private string email_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "FirstName" field.</summary>
        public const int FirstNameFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _single_firstName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
        private string firstName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstName {
          get { return firstName_; }
          set {
            firstName_ = value;
          }
        }

        /// <summary>Field number for the "LastName" field.</summary>
        public const int LastNameFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_lastName_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string lastName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastName {
          get { return lastName_; }
          set {
            lastName_ = value;
          }
        }

        /// <summary>Field number for the "Username" field.</summary>
        public const int UsernameFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_username_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string username_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username {
          get { return username_; }
          set {
            username_ = value;
          }
        }

        /// <summary>Field number for the "CreatedAt" field.</summary>
        public const int CreatedAtFieldNumber = 6;
        private static readonly pb::FieldCodec<long?> _single_createdAt_codec = pb::FieldCodec.ForStructWrapper<long>(50);
        private long? createdAt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long? CreatedAt {
          get { return createdAt_; }
          set {
            createdAt_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (Email != other.Email) return false;
          if (FirstName != other.FirstName) return false;
          if (LastName != other.LastName) return false;
          if (Username != other.Username) return false;
          if (CreatedAt != other.CreatedAt) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (Email.Length != 0) hash ^= Email.GetHashCode();
          if (firstName_ != null) hash ^= FirstName.GetHashCode();
          if (lastName_ != null) hash ^= LastName.GetHashCode();
          if (username_ != null) hash ^= Username.GetHashCode();
          if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (Email.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Email);
          }
          if (firstName_ != null) {
            _single_firstName_codec.WriteTagAndValue(output, FirstName);
          }
          if (lastName_ != null) {
            _single_lastName_codec.WriteTagAndValue(output, LastName);
          }
          if (username_ != null) {
            _single_username_codec.WriteTagAndValue(output, Username);
          }
          if (createdAt_ != null) {
            _single_createdAt_codec.WriteTagAndValue(output, CreatedAt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (Email.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
          }
          if (firstName_ != null) {
            size += _single_firstName_codec.CalculateSizeWithTag(FirstName);
          }
          if (lastName_ != null) {
            size += _single_lastName_codec.CalculateSizeWithTag(LastName);
          }
          if (username_ != null) {
            size += _single_username_codec.CalculateSizeWithTag(Username);
          }
          if (createdAt_ != null) {
            size += _single_createdAt_codec.CalculateSizeWithTag(CreatedAt);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          if (other.Email.Length != 0) {
            Email = other.Email;
          }
          if (other.firstName_ != null) {
            if (firstName_ == null || other.FirstName != "") {
              FirstName = other.FirstName;
            }
          }
          if (other.lastName_ != null) {
            if (lastName_ == null || other.LastName != "") {
              LastName = other.LastName;
            }
          }
          if (other.username_ != null) {
            if (username_ == null || other.Username != "") {
              Username = other.Username;
            }
          }
          if (other.createdAt_ != null) {
            if (createdAt_ == null || other.CreatedAt != 0L) {
              CreatedAt = other.CreatedAt;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 18: {
                Email = input.ReadString();
                break;
              }
              case 26: {
                string value = _single_firstName_codec.Read(input);
                if (firstName_ == null || value != "") {
                  FirstName = value;
                }
                break;
              }
              case 34: {
                string value = _single_lastName_codec.Read(input);
                if (lastName_ == null || value != "") {
                  LastName = value;
                }
                break;
              }
              case 42: {
                string value = _single_username_codec.Read(input);
                if (username_ == null || value != "") {
                  Username = value;
                }
                break;
              }
              case 50: {
                long? value = _single_createdAt_codec.Read(input);
                if (createdAt_ == null || value != 0L) {
                  CreatedAt = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetOrganizationUserByExternalUserId : pb::IMessage<GetOrganizationUserByExternalUserId> {
    private static readonly pb::MessageParser<GetOrganizationUserByExternalUserId> _parser = new pb::MessageParser<GetOrganizationUserByExternalUserId>(() => new GetOrganizationUserByExternalUserId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOrganizationUserByExternalUserId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationUserByExternalUserId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationUserByExternalUserId(GetOrganizationUserByExternalUserId other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationUserByExternalUserId Clone() {
      return new GetOrganizationUserByExternalUserId(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOrganizationUserByExternalUserId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOrganizationUserByExternalUserId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOrganizationUserByExternalUserId other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetOrganizationUserByExternalUserId message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationId_ = other.organizationId_;
          userId_ = other.userId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 2;
        private string userId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          if (UserId != other.UserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationId);
          }
          if (UserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(UserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationId = input.ReadInt32();
                break;
              }
              case 18: {
                UserId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserByExternalUserId.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          organizationUserId_ = other.organizationUserId_;
          username_ = other.username_;
          userType_ = other.userType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "Username" field.</summary>
        public const int UsernameFieldNumber = 2;
        private string username_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username {
          get { return username_; }
          set {
            username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 3;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (Username != other.Username) return false;
          if (UserType != other.UserType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (Username.Length != 0) hash ^= Username.GetHashCode();
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (Username.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Username);
          }
          if (UserType != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(UserType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (Username.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
          }
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          if (other.Username.Length != 0) {
            Username = other.Username;
          }
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 18: {
                Username = input.ReadString();
                break;
              }
              case 24: {
                UserType = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class UpdateOrganizationUser : pb::IMessage<UpdateOrganizationUser> {
    private static readonly pb::MessageParser<UpdateOrganizationUser> _parser = new pb::MessageParser<UpdateOrganizationUser>(() => new UpdateOrganizationUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateOrganizationUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOrganizationUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOrganizationUser(UpdateOrganizationUser other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOrganizationUser Clone() {
      return new UpdateOrganizationUser(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateOrganizationUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateOrganizationUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateOrganizationUser other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateOrganizationUser message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          OrganizationId = other.OrganizationId;
          UserType = other.UserType;
          TransactionId = other.TransactionId;
          FirstName = other.FirstName;
          LastName = other.LastName;
          Email = other.Email;
          IsActive = other.IsActive;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_userType_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        /// <summary>Field number for the "TransactionId" field.</summary>
        public const int TransactionIdFieldNumber = 4;
        private static readonly pb::FieldCodec<string> _single_transactionId_codec = pb::FieldCodec.ForClassWrapper<string>(34);
        private string transactionId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TransactionId {
          get { return transactionId_; }
          set {
            transactionId_ = value;
          }
        }

        /// <summary>Field number for the "FirstName" field.</summary>
        public const int FirstNameFieldNumber = 9;
        private static readonly pb::FieldCodec<string> _single_firstName_codec = pb::FieldCodec.ForClassWrapper<string>(74);
        private string firstName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstName {
          get { return firstName_; }
          set {
            firstName_ = value;
          }
        }

        /// <summary>Field number for the "LastName" field.</summary>
        public const int LastNameFieldNumber = 10;
        private static readonly pb::FieldCodec<string> _single_lastName_codec = pb::FieldCodec.ForClassWrapper<string>(82);
        private string lastName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastName {
          get { return lastName_; }
          set {
            lastName_ = value;
          }
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 11;
        private static readonly pb::FieldCodec<string> _single_email_codec = pb::FieldCodec.ForClassWrapper<string>(90);
        private string email_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = value;
          }
        }

        /// <summary>Field number for the "IsActive" field.</summary>
        public const int IsActiveFieldNumber = 12;
        private static readonly pb::FieldCodec<bool?> _single_isActive_codec = pb::FieldCodec.ForStructWrapper<bool>(98);
        private bool? isActive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsActive {
          get { return isActive_; }
          set {
            isActive_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (UserType != other.UserType) return false;
          if (TransactionId != other.TransactionId) return false;
          if (FirstName != other.FirstName) return false;
          if (LastName != other.LastName) return false;
          if (Email != other.Email) return false;
          if (IsActive != other.IsActive) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (userType_ != null) hash ^= UserType.GetHashCode();
          if (transactionId_ != null) hash ^= TransactionId.GetHashCode();
          if (firstName_ != null) hash ^= FirstName.GetHashCode();
          if (lastName_ != null) hash ^= LastName.GetHashCode();
          if (email_ != null) hash ^= Email.GetHashCode();
          if (isActive_ != null) hash ^= IsActive.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (userType_ != null) {
            _single_userType_codec.WriteTagAndValue(output, UserType);
          }
          if (transactionId_ != null) {
            _single_transactionId_codec.WriteTagAndValue(output, TransactionId);
          }
          if (firstName_ != null) {
            _single_firstName_codec.WriteTagAndValue(output, FirstName);
          }
          if (lastName_ != null) {
            _single_lastName_codec.WriteTagAndValue(output, LastName);
          }
          if (email_ != null) {
            _single_email_codec.WriteTagAndValue(output, Email);
          }
          if (isActive_ != null) {
            _single_isActive_codec.WriteTagAndValue(output, IsActive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (userType_ != null) {
            size += _single_userType_codec.CalculateSizeWithTag(UserType);
          }
          if (transactionId_ != null) {
            size += _single_transactionId_codec.CalculateSizeWithTag(TransactionId);
          }
          if (firstName_ != null) {
            size += _single_firstName_codec.CalculateSizeWithTag(FirstName);
          }
          if (lastName_ != null) {
            size += _single_lastName_codec.CalculateSizeWithTag(LastName);
          }
          if (email_ != null) {
            size += _single_email_codec.CalculateSizeWithTag(Email);
          }
          if (isActive_ != null) {
            size += _single_isActive_codec.CalculateSizeWithTag(IsActive);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.userType_ != null) {
            if (userType_ == null || other.UserType != 0) {
              UserType = other.UserType;
            }
          }
          if (other.transactionId_ != null) {
            if (transactionId_ == null || other.TransactionId != "") {
              TransactionId = other.TransactionId;
            }
          }
          if (other.firstName_ != null) {
            if (firstName_ == null || other.FirstName != "") {
              FirstName = other.FirstName;
            }
          }
          if (other.lastName_ != null) {
            if (lastName_ == null || other.LastName != "") {
              LastName = other.LastName;
            }
          }
          if (other.email_ != null) {
            if (email_ == null || other.Email != "") {
              Email = other.Email;
            }
          }
          if (other.isActive_ != null) {
            if (isActive_ == null || other.IsActive != false) {
              IsActive = other.IsActive;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 26: {
                int? value = _single_userType_codec.Read(input);
                if (userType_ == null || value != 0) {
                  UserType = value;
                }
                break;
              }
              case 34: {
                string value = _single_transactionId_codec.Read(input);
                if (transactionId_ == null || value != "") {
                  TransactionId = value;
                }
                break;
              }
              case 74: {
                string value = _single_firstName_codec.Read(input);
                if (firstName_ == null || value != "") {
                  FirstName = value;
                }
                break;
              }
              case 82: {
                string value = _single_lastName_codec.Read(input);
                if (lastName_ == null || value != "") {
                  LastName = value;
                }
                break;
              }
              case 90: {
                string value = _single_email_codec.Read(input);
                if (email_ == null || value != "") {
                  Email = value;
                }
                break;
              }
              case 98: {
                bool? value = _single_isActive_codec.Read(input);
                if (isActive_ == null || value != false) {
                  IsActive = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUser.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CreateOrganizationUsersAssociation : pb::IMessage<CreateOrganizationUsersAssociation> {
    private static readonly pb::MessageParser<CreateOrganizationUsersAssociation> _parser = new pb::MessageParser<CreateOrganizationUsersAssociation>(() => new CreateOrganizationUsersAssociation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOrganizationUsersAssociation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrganizationUsersAssociation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrganizationUsersAssociation(CreateOrganizationUsersAssociation other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrganizationUsersAssociation Clone() {
      return new CreateOrganizationUsersAssociation(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOrganizationUsersAssociation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOrganizationUsersAssociation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOrganizationUsersAssociation other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateOrganizationUsersAssociation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationUserId1_ = other.organizationUserId1_;
          organizationUserId2_ = other.organizationUserId2_;
          associationType_ = other.associationType_;
          transactionId_ = other.transactionId_;
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId1" field.</summary>
        public const int OrganizationUserId1FieldNumber = 1;
        private int organizationUserId1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId1 {
          get { return organizationUserId1_; }
          set {
            organizationUserId1_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationUserId2" field.</summary>
        public const int OrganizationUserId2FieldNumber = 2;
        private int organizationUserId2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId2 {
          get { return organizationUserId2_; }
          set {
            organizationUserId2_ = value;
          }
        }

        /// <summary>Field number for the "AssociationType" field.</summary>
        public const int AssociationTypeFieldNumber = 3;
        private int associationType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AssociationType {
          get { return associationType_; }
          set {
            associationType_ = value;
          }
        }

        /// <summary>Field number for the "TransactionId" field.</summary>
        public const int TransactionIdFieldNumber = 4;
        private string transactionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TransactionId {
          get { return transactionId_; }
          set {
            transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 5;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId1 != other.OrganizationUserId1) return false;
          if (OrganizationUserId2 != other.OrganizationUserId2) return false;
          if (AssociationType != other.AssociationType) return false;
          if (TransactionId != other.TransactionId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId1 != 0) hash ^= OrganizationUserId1.GetHashCode();
          if (OrganizationUserId2 != 0) hash ^= OrganizationUserId2.GetHashCode();
          if (AssociationType != 0) hash ^= AssociationType.GetHashCode();
          if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId1 != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId1);
          }
          if (OrganizationUserId2 != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationUserId2);
          }
          if (AssociationType != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(AssociationType);
          }
          if (TransactionId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TransactionId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId1 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId1);
          }
          if (OrganizationUserId2 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId2);
          }
          if (AssociationType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AssociationType);
          }
          if (TransactionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId1 != 0) {
            OrganizationUserId1 = other.OrganizationUserId1;
          }
          if (other.OrganizationUserId2 != 0) {
            OrganizationUserId2 = other.OrganizationUserId2;
          }
          if (other.AssociationType != 0) {
            AssociationType = other.AssociationType;
          }
          if (other.TransactionId.Length != 0) {
            TransactionId = other.TransactionId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId1 = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationUserId2 = input.ReadInt32();
                break;
              }
              case 24: {
                AssociationType = input.ReadInt32();
                break;
              }
              case 34: {
                TransactionId = input.ReadString();
                break;
              }
              case 40: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateOrganizationUsersAssociation.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          associationId_ = other.associationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "AssociationId" field.</summary>
        public const int AssociationIdFieldNumber = 1;
        private int associationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AssociationId {
          get { return associationId_; }
          set {
            associationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AssociationId != other.AssociationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AssociationId != 0) hash ^= AssociationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AssociationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AssociationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AssociationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AssociationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.AssociationId != 0) {
            AssociationId = other.AssociationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AssociationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class UpdateOrganizationUsersAssociation : pb::IMessage<UpdateOrganizationUsersAssociation> {
    private static readonly pb::MessageParser<UpdateOrganizationUsersAssociation> _parser = new pb::MessageParser<UpdateOrganizationUsersAssociation>(() => new UpdateOrganizationUsersAssociation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateOrganizationUsersAssociation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOrganizationUsersAssociation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOrganizationUsersAssociation(UpdateOrganizationUsersAssociation other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOrganizationUsersAssociation Clone() {
      return new UpdateOrganizationUsersAssociation(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateOrganizationUsersAssociation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateOrganizationUsersAssociation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateOrganizationUsersAssociation other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateOrganizationUsersAssociation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationUserId1_ = other.organizationUserId1_;
          organizationUserId2_ = other.organizationUserId2_;
          associationType_ = other.associationType_;
          transactionId_ = other.transactionId_;
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId1" field.</summary>
        public const int OrganizationUserId1FieldNumber = 1;
        private int organizationUserId1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId1 {
          get { return organizationUserId1_; }
          set {
            organizationUserId1_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationUserId2" field.</summary>
        public const int OrganizationUserId2FieldNumber = 2;
        private int organizationUserId2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId2 {
          get { return organizationUserId2_; }
          set {
            organizationUserId2_ = value;
          }
        }

        /// <summary>Field number for the "AssociationType" field.</summary>
        public const int AssociationTypeFieldNumber = 3;
        private int associationType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AssociationType {
          get { return associationType_; }
          set {
            associationType_ = value;
          }
        }

        /// <summary>Field number for the "TransactionId" field.</summary>
        public const int TransactionIdFieldNumber = 4;
        private string transactionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TransactionId {
          get { return transactionId_; }
          set {
            transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 5;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId1 != other.OrganizationUserId1) return false;
          if (OrganizationUserId2 != other.OrganizationUserId2) return false;
          if (AssociationType != other.AssociationType) return false;
          if (TransactionId != other.TransactionId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId1 != 0) hash ^= OrganizationUserId1.GetHashCode();
          if (OrganizationUserId2 != 0) hash ^= OrganizationUserId2.GetHashCode();
          if (AssociationType != 0) hash ^= AssociationType.GetHashCode();
          if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId1 != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId1);
          }
          if (OrganizationUserId2 != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationUserId2);
          }
          if (AssociationType != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(AssociationType);
          }
          if (TransactionId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TransactionId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId1 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId1);
          }
          if (OrganizationUserId2 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId2);
          }
          if (AssociationType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AssociationType);
          }
          if (TransactionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId1 != 0) {
            OrganizationUserId1 = other.OrganizationUserId1;
          }
          if (other.OrganizationUserId2 != 0) {
            OrganizationUserId2 = other.OrganizationUserId2;
          }
          if (other.AssociationType != 0) {
            AssociationType = other.AssociationType;
          }
          if (other.TransactionId.Length != 0) {
            TransactionId = other.TransactionId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId1 = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationUserId2 = input.ReadInt32();
                break;
              }
              case 24: {
                AssociationType = input.ReadInt32();
                break;
              }
              case 34: {
                TransactionId = input.ReadString();
                break;
              }
              case 40: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateOrganizationUsersAssociation.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteOrganizationUsersAssociation : pb::IMessage<DeleteOrganizationUsersAssociation> {
    private static readonly pb::MessageParser<DeleteOrganizationUsersAssociation> _parser = new pb::MessageParser<DeleteOrganizationUsersAssociation>(() => new DeleteOrganizationUsersAssociation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteOrganizationUsersAssociation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOrganizationUsersAssociation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOrganizationUsersAssociation(DeleteOrganizationUsersAssociation other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOrganizationUsersAssociation Clone() {
      return new DeleteOrganizationUsersAssociation(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteOrganizationUsersAssociation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteOrganizationUsersAssociation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteOrganizationUsersAssociation other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteOrganizationUsersAssociation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          associationType_ = other.associationType_;
          organizationUserId_ = other.organizationUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "AssociationType" field.</summary>
        public const int AssociationTypeFieldNumber = 1;
        private int associationType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AssociationType {
          get { return associationType_; }
          set {
            associationType_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 2;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AssociationType != other.AssociationType) return false;
          if (OrganizationUserId != other.OrganizationUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AssociationType != 0) hash ^= AssociationType.GetHashCode();
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AssociationType != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AssociationType);
          }
          if (OrganizationUserId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AssociationType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AssociationType);
          }
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.AssociationType != 0) {
            AssociationType = other.AssociationType;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AssociationType = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteOrganizationUsersAssociation.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class PublishCreateOrganizationUser : pb::IMessage<PublishCreateOrganizationUser> {
    private static readonly pb::MessageParser<PublishCreateOrganizationUser> _parser = new pb::MessageParser<PublishCreateOrganizationUser>(() => new PublishCreateOrganizationUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishCreateOrganizationUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishCreateOrganizationUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishCreateOrganizationUser(PublishCreateOrganizationUser other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishCreateOrganizationUser Clone() {
      return new PublishCreateOrganizationUser(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishCreateOrganizationUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishCreateOrganizationUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishCreateOrganizationUser other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PublishCreateOrganizationUser message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationUserId_ = other.organizationUserId_;
          userType_ = other.userType_;
          transactionId_ = other.transactionId_;
          username_ = other.username_;
          firstName_ = other.firstName_;
          lastName_ = other.lastName_;
          email_ = other.email_;
          isActive_ = other.isActive_;
          userId_ = other.userId_;
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 2;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        /// <summary>Field number for the "TransactionId" field.</summary>
        public const int TransactionIdFieldNumber = 3;
        private string transactionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TransactionId {
          get { return transactionId_; }
          set {
            transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Username" field.</summary>
        public const int UsernameFieldNumber = 4;
        private string username_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username {
          get { return username_; }
          set {
            username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "FirstName" field.</summary>
        public const int FirstNameFieldNumber = 5;
        private string firstName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstName {
          get { return firstName_; }
          set {
            firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "LastName" field.</summary>
        public const int LastNameFieldNumber = 6;
        private string lastName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastName {
          get { return lastName_; }
          set {
            lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 7;
        private string email_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "IsActive" field.</summary>
        public const int IsActiveFieldNumber = 8;
        private bool isActive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsActive {
          get { return isActive_; }
          set {
            isActive_ = value;
          }
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 9;
        private string userId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 10;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (UserType != other.UserType) return false;
          if (TransactionId != other.TransactionId) return false;
          if (Username != other.Username) return false;
          if (FirstName != other.FirstName) return false;
          if (LastName != other.LastName) return false;
          if (Email != other.Email) return false;
          if (IsActive != other.IsActive) return false;
          if (UserId != other.UserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
          if (Username.Length != 0) hash ^= Username.GetHashCode();
          if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
          if (LastName.Length != 0) hash ^= LastName.GetHashCode();
          if (Email.Length != 0) hash ^= Email.GetHashCode();
          if (IsActive != false) hash ^= IsActive.GetHashCode();
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (UserType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UserType);
          }
          if (TransactionId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TransactionId);
          }
          if (Username.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Username);
          }
          if (FirstName.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(FirstName);
          }
          if (LastName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(LastName);
          }
          if (Email.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Email);
          }
          if (IsActive != false) {
            output.WriteRawTag(64);
            output.WriteBool(IsActive);
          }
          if (UserId.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(UserId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(80);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (TransactionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
          }
          if (Username.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
          }
          if (FirstName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
          }
          if (LastName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
          }
          if (Email.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
          }
          if (IsActive != false) {
            size += 1 + 1;
          }
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          if (other.TransactionId.Length != 0) {
            TransactionId = other.TransactionId;
          }
          if (other.Username.Length != 0) {
            Username = other.Username;
          }
          if (other.FirstName.Length != 0) {
            FirstName = other.FirstName;
          }
          if (other.LastName.Length != 0) {
            LastName = other.LastName;
          }
          if (other.Email.Length != 0) {
            Email = other.Email;
          }
          if (other.IsActive != false) {
            IsActive = other.IsActive;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 16: {
                UserType = input.ReadInt32();
                break;
              }
              case 26: {
                TransactionId = input.ReadString();
                break;
              }
              case 34: {
                Username = input.ReadString();
                break;
              }
              case 42: {
                FirstName = input.ReadString();
                break;
              }
              case 50: {
                LastName = input.ReadString();
                break;
              }
              case 58: {
                Email = input.ReadString();
                break;
              }
              case 64: {
                IsActive = input.ReadBool();
                break;
              }
              case 74: {
                UserId = input.ReadString();
                break;
              }
              case 80: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishCreateOrganizationUser.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          createdAt_ = other.createdAt_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "CreatedAt" field.</summary>
        public const int CreatedAtFieldNumber = 1;
        private long createdAt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long CreatedAt {
          get { return createdAt_; }
          set {
            createdAt_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CreatedAt != other.CreatedAt) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CreatedAt != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(CreatedAt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CreatedAt != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.CreatedAt != 0L) {
            CreatedAt = other.CreatedAt;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                CreatedAt = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class PublishUpdateOrganizationUser : pb::IMessage<PublishUpdateOrganizationUser> {
    private static readonly pb::MessageParser<PublishUpdateOrganizationUser> _parser = new pb::MessageParser<PublishUpdateOrganizationUser>(() => new PublishUpdateOrganizationUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublishUpdateOrganizationUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishUpdateOrganizationUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishUpdateOrganizationUser(PublishUpdateOrganizationUser other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublishUpdateOrganizationUser Clone() {
      return new PublishUpdateOrganizationUser(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublishUpdateOrganizationUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublishUpdateOrganizationUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublishUpdateOrganizationUser other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PublishUpdateOrganizationUser message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationUserId_ = other.organizationUserId_;
          userType_ = other.userType_;
          firstName_ = other.firstName_;
          lastName_ = other.lastName_;
          email_ = other.email_;
          isActive_ = other.isActive_;
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 2;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        /// <summary>Field number for the "FirstName" field.</summary>
        public const int FirstNameFieldNumber = 3;
        private string firstName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstName {
          get { return firstName_; }
          set {
            firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "LastName" field.</summary>
        public const int LastNameFieldNumber = 4;
        private string lastName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastName {
          get { return lastName_; }
          set {
            lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 5;
        private string email_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "IsActive" field.</summary>
        public const int IsActiveFieldNumber = 6;
        private bool isActive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsActive {
          get { return isActive_; }
          set {
            isActive_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 7;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (UserType != other.UserType) return false;
          if (FirstName != other.FirstName) return false;
          if (LastName != other.LastName) return false;
          if (Email != other.Email) return false;
          if (IsActive != other.IsActive) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
          if (LastName.Length != 0) hash ^= LastName.GetHashCode();
          if (Email.Length != 0) hash ^= Email.GetHashCode();
          if (IsActive != false) hash ^= IsActive.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (UserType != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(UserType);
          }
          if (FirstName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(FirstName);
          }
          if (LastName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastName);
          }
          if (Email.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Email);
          }
          if (IsActive != false) {
            output.WriteRawTag(48);
            output.WriteBool(IsActive);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (FirstName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
          }
          if (LastName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
          }
          if (Email.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
          }
          if (IsActive != false) {
            size += 1 + 1;
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          if (other.FirstName.Length != 0) {
            FirstName = other.FirstName;
          }
          if (other.LastName.Length != 0) {
            LastName = other.LastName;
          }
          if (other.Email.Length != 0) {
            Email = other.Email;
          }
          if (other.IsActive != false) {
            IsActive = other.IsActive;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 16: {
                UserType = input.ReadInt32();
                break;
              }
              case 26: {
                FirstName = input.ReadString();
                break;
              }
              case 34: {
                LastName = input.ReadString();
                break;
              }
              case 42: {
                Email = input.ReadString();
                break;
              }
              case 48: {
                IsActive = input.ReadBool();
                break;
              }
              case 56: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.PublishUpdateOrganizationUser.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          createdAt_ = other.createdAt_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "CreatedAt" field.</summary>
        public const int CreatedAtFieldNumber = 1;
        private long createdAt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long CreatedAt {
          get { return createdAt_; }
          set {
            createdAt_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CreatedAt != other.CreatedAt) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CreatedAt != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(CreatedAt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CreatedAt != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.CreatedAt != 0L) {
            CreatedAt = other.CreatedAt;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                CreatedAt = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class QueryUserOrganizations : pb::IMessage<QueryUserOrganizations> {
    private static readonly pb::MessageParser<QueryUserOrganizations> _parser = new pb::MessageParser<QueryUserOrganizations>(() => new QueryUserOrganizations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryUserOrganizations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryUserOrganizations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryUserOrganizations(QueryUserOrganizations other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryUserOrganizations Clone() {
      return new QueryUserOrganizations(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryUserOrganizations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryUserOrganizations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryUserOrganizations other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryUserOrganizations message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          userId_ = other.userId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 1;
        private string userId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                UserId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryUserOrganizations.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          organizationIds_ = other.organizationIds_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "OrganizationIds" field.</summary>
        public const int OrganizationIdsFieldNumber = 1;
        private static readonly pb::FieldCodec<int> _repeated_organizationIds_codec
            = pb::FieldCodec.ForInt32(10);
        private readonly pbc::RepeatedField<int> organizationIds_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> OrganizationIds {
          get { return organizationIds_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!organizationIds_.Equals(other.organizationIds_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= organizationIds_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          organizationIds_.WriteTo(output, _repeated_organizationIds_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += organizationIds_.CalculateSize(_repeated_organizationIds_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          organizationIds_.Add(other.organizationIds_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                organizationIds_.AddEntriesFrom(input, _repeated_organizationIds_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ExistOrganizationUser : pb::IMessage<ExistOrganizationUser> {
    private static readonly pb::MessageParser<ExistOrganizationUser> _parser = new pb::MessageParser<ExistOrganizationUser>(() => new ExistOrganizationUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExistOrganizationUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistOrganizationUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistOrganizationUser(ExistOrganizationUser other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistOrganizationUser Clone() {
      return new ExistOrganizationUser(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExistOrganizationUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExistOrganizationUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExistOrganizationUser other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ExistOrganizationUser message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          OrganizationUserId = other.OrganizationUserId;
          UserType = other.UserType;
          OrganizationId = other.OrganizationId;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 2;
        private static readonly pb::FieldCodec<int?> _single_userType_codec = pb::FieldCodec.ForStructWrapper<int>(18);
        private int? userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (UserType != other.UserType) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (userType_ != null) hash ^= UserType.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (userType_ != null) {
            _single_userType_codec.WriteTagAndValue(output, UserType);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (userType_ != null) {
            size += _single_userType_codec.CalculateSizeWithTag(UserType);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.userType_ != null) {
            if (userType_ == null || other.UserType != 0) {
              UserType = other.UserType;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 18: {
                int? value = _single_userType_codec.Read(input);
                if (userType_ == null || value != 0) {
                  UserType = value;
                }
                break;
              }
              case 26: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUser.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          Exists = other.Exists;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Exists" field.</summary>
        public const int ExistsFieldNumber = 1;
        private static readonly pb::FieldCodec<bool?> _single_exists_codec = pb::FieldCodec.ForStructWrapper<bool>(10);
        private bool? exists_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? Exists {
          get { return exists_; }
          set {
            exists_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Exists != other.Exists) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (exists_ != null) hash ^= Exists.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (exists_ != null) {
            _single_exists_codec.WriteTagAndValue(output, Exists);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (exists_ != null) {
            size += _single_exists_codec.CalculateSizeWithTag(Exists);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.exists_ != null) {
            if (exists_ == null || other.Exists != false) {
              Exists = other.Exists;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                bool? value = _single_exists_codec.Read(input);
                if (exists_ == null || value != false) {
                  Exists = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ExistOrganizationUserByEmail : pb::IMessage<ExistOrganizationUserByEmail> {
    private static readonly pb::MessageParser<ExistOrganizationUserByEmail> _parser = new pb::MessageParser<ExistOrganizationUserByEmail>(() => new ExistOrganizationUserByEmail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExistOrganizationUserByEmail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistOrganizationUserByEmail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistOrganizationUserByEmail(ExistOrganizationUserByEmail other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistOrganizationUserByEmail Clone() {
      return new ExistOrganizationUserByEmail(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExistOrganizationUserByEmail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExistOrganizationUserByEmail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExistOrganizationUserByEmail other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ExistOrganizationUserByEmail message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          Email = other.Email;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _single_email_codec = pb::FieldCodec.ForClassWrapper<string>(10);
        private string email_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Email != other.Email) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (email_ != null) hash ^= Email.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (email_ != null) {
            _single_email_codec.WriteTagAndValue(output, Email);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (email_ != null) {
            size += _single_email_codec.CalculateSizeWithTag(Email);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.email_ != null) {
            if (email_ == null || other.Email != "") {
              Email = other.Email;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                string value = _single_email_codec.Read(input);
                if (email_ == null || value != "") {
                  Email = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByEmail.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          exists_ = other.exists_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Exists" field.</summary>
        public const int ExistsFieldNumber = 1;
        private bool exists_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Exists {
          get { return exists_; }
          set {
            exists_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Exists != other.Exists) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Exists != false) hash ^= Exists.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Exists != false) {
            output.WriteRawTag(8);
            output.WriteBool(Exists);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Exists != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Exists != false) {
            Exists = other.Exists;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Exists = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ExistOrganizationUserByUsername : pb::IMessage<ExistOrganizationUserByUsername> {
    private static readonly pb::MessageParser<ExistOrganizationUserByUsername> _parser = new pb::MessageParser<ExistOrganizationUserByUsername>(() => new ExistOrganizationUserByUsername());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExistOrganizationUserByUsername> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistOrganizationUserByUsername() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistOrganizationUserByUsername(ExistOrganizationUserByUsername other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistOrganizationUserByUsername Clone() {
      return new ExistOrganizationUserByUsername(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExistOrganizationUserByUsername);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExistOrganizationUserByUsername other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExistOrganizationUserByUsername other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ExistOrganizationUserByUsername message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          Username = other.Username;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "Username" field.</summary>
        public const int UsernameFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _single_username_codec = pb::FieldCodec.ForClassWrapper<string>(10);
        private string username_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username {
          get { return username_; }
          set {
            username_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Username != other.Username) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (username_ != null) hash ^= Username.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (username_ != null) {
            _single_username_codec.WriteTagAndValue(output, Username);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (username_ != null) {
            size += _single_username_codec.CalculateSizeWithTag(Username);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.username_ != null) {
            if (username_ == null || other.Username != "") {
              Username = other.Username;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                string value = _single_username_codec.Read(input);
                if (username_ == null || value != "") {
                  Username = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistOrganizationUserByUsername.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          exists_ = other.exists_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Exists" field.</summary>
        public const int ExistsFieldNumber = 1;
        private bool exists_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Exists {
          get { return exists_; }
          set {
            exists_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Exists != other.Exists) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Exists != false) hash ^= Exists.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Exists != false) {
            output.WriteRawTag(8);
            output.WriteBool(Exists);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Exists != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.Exists != false) {
            Exists = other.Exists;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Exists = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetOrganizationUserType : pb::IMessage<GetOrganizationUserType> {
    private static readonly pb::MessageParser<GetOrganizationUserType> _parser = new pb::MessageParser<GetOrganizationUserType>(() => new GetOrganizationUserType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOrganizationUserType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationUserType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationUserType(GetOrganizationUserType other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOrganizationUserType Clone() {
      return new GetOrganizationUserType(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOrganizationUserType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOrganizationUserType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOrganizationUserType other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetOrganizationUserType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationUserId_ = other.organizationUserId_;
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 1;
        private int organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 2;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationUserId != 0) hash ^= OrganizationUserId.GetHashCode();
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationUserId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationUserId);
          }
          if (OrganizationId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationUserId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationUserId);
          }
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationUserId != 0) {
            OrganizationUserId = other.OrganizationUserId;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationUserId = input.ReadInt32();
                break;
              }
              case 16: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetOrganizationUserType.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          userType_ = other.userType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 1;
        private int userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserType != other.UserType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UserType != 0) hash ^= UserType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UserType != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(UserType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UserType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.UserType != 0) {
            UserType = other.UserType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UserType = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetSingleOrganizationOrgUsers : pb::IMessage<GetSingleOrganizationOrgUsers> {
    private static readonly pb::MessageParser<GetSingleOrganizationOrgUsers> _parser = new pb::MessageParser<GetSingleOrganizationOrgUsers>(() => new GetSingleOrganizationOrgUsers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSingleOrganizationOrgUsers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSingleOrganizationOrgUsers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSingleOrganizationOrgUsers(GetSingleOrganizationOrgUsers other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSingleOrganizationOrgUsers Clone() {
      return new GetSingleOrganizationOrgUsers(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSingleOrganizationOrgUsers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSingleOrganizationOrgUsers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSingleOrganizationOrgUsers other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetSingleOrganizationOrgUsers message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class SingleOrganizationOrgUserListView : pb::IMessage<SingleOrganizationOrgUserListView> {
        private static readonly pb::MessageParser<SingleOrganizationOrgUserListView> _parser = new pb::MessageParser<SingleOrganizationOrgUserListView>(() => new SingleOrganizationOrgUserListView());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SingleOrganizationOrgUserListView> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SingleOrganizationOrgUserListView() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SingleOrganizationOrgUserListView(SingleOrganizationOrgUserListView other) : this() {
          userId_ = other.userId_;
          Email = other.Email;
          OrganizationId = other.OrganizationId;
          OrganizationUserId = other.OrganizationUserId;
          FirstName = other.FirstName;
          LastName = other.LastName;
          IsActive = other.IsActive;
          UserType = other.UserType;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SingleOrganizationOrgUserListView Clone() {
          return new SingleOrganizationOrgUserListView(this);
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 1;
        private string userId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _single_email_codec = pb::FieldCodec.ForClassWrapper<string>(18);
        private string email_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 3;
        private static readonly pb::FieldCodec<int?> _single_organizationId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
        private int? organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        /// <summary>Field number for the "OrganizationUserId" field.</summary>
        public const int OrganizationUserIdFieldNumber = 4;
        private static readonly pb::FieldCodec<int?> _single_organizationUserId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
        private int? organizationUserId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? OrganizationUserId {
          get { return organizationUserId_; }
          set {
            organizationUserId_ = value;
          }
        }

        /// <summary>Field number for the "FirstName" field.</summary>
        public const int FirstNameFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _single_firstName_codec = pb::FieldCodec.ForClassWrapper<string>(42);
        private string firstName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstName {
          get { return firstName_; }
          set {
            firstName_ = value;
          }
        }

        /// <summary>Field number for the "LastName" field.</summary>
        public const int LastNameFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _single_lastName_codec = pb::FieldCodec.ForClassWrapper<string>(50);
        private string lastName_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastName {
          get { return lastName_; }
          set {
            lastName_ = value;
          }
        }

        /// <summary>Field number for the "IsActive" field.</summary>
        public const int IsActiveFieldNumber = 7;
        private static readonly pb::FieldCodec<bool?> _single_isActive_codec = pb::FieldCodec.ForStructWrapper<bool>(58);
        private bool? isActive_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool? IsActive {
          get { return isActive_; }
          set {
            isActive_ = value;
          }
        }

        /// <summary>Field number for the "UserType" field.</summary>
        public const int UserTypeFieldNumber = 8;
        private static readonly pb::FieldCodec<int?> _single_userType_codec = pb::FieldCodec.ForStructWrapper<int>(66);
        private int? userType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int? UserType {
          get { return userType_; }
          set {
            userType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SingleOrganizationOrgUserListView);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SingleOrganizationOrgUserListView other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          if (Email != other.Email) return false;
          if (OrganizationId != other.OrganizationId) return false;
          if (OrganizationUserId != other.OrganizationUserId) return false;
          if (FirstName != other.FirstName) return false;
          if (LastName != other.LastName) return false;
          if (IsActive != other.IsActive) return false;
          if (UserType != other.UserType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (email_ != null) hash ^= Email.GetHashCode();
          if (organizationId_ != null) hash ^= OrganizationId.GetHashCode();
          if (organizationUserId_ != null) hash ^= OrganizationUserId.GetHashCode();
          if (firstName_ != null) hash ^= FirstName.GetHashCode();
          if (lastName_ != null) hash ^= LastName.GetHashCode();
          if (isActive_ != null) hash ^= IsActive.GetHashCode();
          if (userType_ != null) hash ^= UserType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserId);
          }
          if (email_ != null) {
            _single_email_codec.WriteTagAndValue(output, Email);
          }
          if (organizationId_ != null) {
            _single_organizationId_codec.WriteTagAndValue(output, OrganizationId);
          }
          if (organizationUserId_ != null) {
            _single_organizationUserId_codec.WriteTagAndValue(output, OrganizationUserId);
          }
          if (firstName_ != null) {
            _single_firstName_codec.WriteTagAndValue(output, FirstName);
          }
          if (lastName_ != null) {
            _single_lastName_codec.WriteTagAndValue(output, LastName);
          }
          if (isActive_ != null) {
            _single_isActive_codec.WriteTagAndValue(output, IsActive);
          }
          if (userType_ != null) {
            _single_userType_codec.WriteTagAndValue(output, UserType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (email_ != null) {
            size += _single_email_codec.CalculateSizeWithTag(Email);
          }
          if (organizationId_ != null) {
            size += _single_organizationId_codec.CalculateSizeWithTag(OrganizationId);
          }
          if (organizationUserId_ != null) {
            size += _single_organizationUserId_codec.CalculateSizeWithTag(OrganizationUserId);
          }
          if (firstName_ != null) {
            size += _single_firstName_codec.CalculateSizeWithTag(FirstName);
          }
          if (lastName_ != null) {
            size += _single_lastName_codec.CalculateSizeWithTag(LastName);
          }
          if (isActive_ != null) {
            size += _single_isActive_codec.CalculateSizeWithTag(IsActive);
          }
          if (userType_ != null) {
            size += _single_userType_codec.CalculateSizeWithTag(UserType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SingleOrganizationOrgUserListView other) {
          if (other == null) {
            return;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          if (other.email_ != null) {
            if (email_ == null || other.Email != "") {
              Email = other.Email;
            }
          }
          if (other.organizationId_ != null) {
            if (organizationId_ == null || other.OrganizationId != 0) {
              OrganizationId = other.OrganizationId;
            }
          }
          if (other.organizationUserId_ != null) {
            if (organizationUserId_ == null || other.OrganizationUserId != 0) {
              OrganizationUserId = other.OrganizationUserId;
            }
          }
          if (other.firstName_ != null) {
            if (firstName_ == null || other.FirstName != "") {
              FirstName = other.FirstName;
            }
          }
          if (other.lastName_ != null) {
            if (lastName_ == null || other.LastName != "") {
              LastName = other.LastName;
            }
          }
          if (other.isActive_ != null) {
            if (isActive_ == null || other.IsActive != false) {
              IsActive = other.IsActive;
            }
          }
          if (other.userType_ != null) {
            if (userType_ == null || other.UserType != 0) {
              UserType = other.UserType;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                UserId = input.ReadString();
                break;
              }
              case 18: {
                string value = _single_email_codec.Read(input);
                if (email_ == null || value != "") {
                  Email = value;
                }
                break;
              }
              case 26: {
                int? value = _single_organizationId_codec.Read(input);
                if (organizationId_ == null || value != 0) {
                  OrganizationId = value;
                }
                break;
              }
              case 34: {
                int? value = _single_organizationUserId_codec.Read(input);
                if (organizationUserId_ == null || value != 0) {
                  OrganizationUserId = value;
                }
                break;
              }
              case 42: {
                string value = _single_firstName_codec.Read(input);
                if (firstName_ == null || value != "") {
                  FirstName = value;
                }
                break;
              }
              case 50: {
                string value = _single_lastName_codec.Read(input);
                if (lastName_ == null || value != "") {
                  LastName = value;
                }
                break;
              }
              case 58: {
                bool? value = _single_isActive_codec.Read(input);
                if (isActive_ == null || value != false) {
                  IsActive = value;
                }
                break;
              }
              case 66: {
                int? value = _single_userType_codec.Read(input);
                if (userType_ == null || value != 0) {
                  UserType = value;
                }
                break;
              }
            }
          }
        }

      }

      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          organizationId_ = other.organizationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "OrganizationId" field.</summary>
        public const int OrganizationIdFieldNumber = 1;
        private int organizationId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int OrganizationId {
          get { return organizationId_; }
          set {
            organizationId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OrganizationId != other.OrganizationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OrganizationId != 0) hash ^= OrganizationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OrganizationId != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(OrganizationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OrganizationId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.OrganizationId != 0) {
            OrganizationId = other.OrganizationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OrganizationId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          result_ = other.result_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "Result" field.</summary>
        public const int ResultFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.SingleOrganizationOrgUserListView> _repeated_result_codec
            = pb::FieldCodec.ForMessage(10, global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.SingleOrganizationOrgUserListView.Parser);
        private readonly pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.SingleOrganizationOrgUserListView> result_ = new pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.SingleOrganizationOrgUserListView>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Kebormed.Core.OrganizationService.Grpc.Generated.GetSingleOrganizationOrgUsers.Types.SingleOrganizationOrgUserListView> Result {
          get { return result_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!result_.Equals(other.result_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= result_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          result_.WriteTo(output, _repeated_result_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += result_.CalculateSize(_repeated_result_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          result_.Add(other.result_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                result_.AddEntriesFrom(input, _repeated_result_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class SetUserLockStatus : pb::IMessage<SetUserLockStatus> {
    private static readonly pb::MessageParser<SetUserLockStatus> _parser = new pb::MessageParser<SetUserLockStatus>(() => new SetUserLockStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUserLockStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserLockStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserLockStatus(SetUserLockStatus other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserLockStatus Clone() {
      return new SetUserLockStatus(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUserLockStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUserLockStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUserLockStatus other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetUserLockStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          externalUserId_ = other.externalUserId_;
          isLocked_ = other.isLocked_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "ExternalUserId" field.</summary>
        public const int ExternalUserIdFieldNumber = 1;
        private string externalUserId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ExternalUserId {
          get { return externalUserId_; }
          set {
            externalUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "IsLocked" field.</summary>
        public const int IsLockedFieldNumber = 2;
        private bool isLocked_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsLocked {
          get { return isLocked_; }
          set {
            isLocked_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExternalUserId != other.ExternalUserId) return false;
          if (IsLocked != other.IsLocked) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ExternalUserId.Length != 0) hash ^= ExternalUserId.GetHashCode();
          if (IsLocked != false) hash ^= IsLocked.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ExternalUserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ExternalUserId);
          }
          if (IsLocked != false) {
            output.WriteRawTag(16);
            output.WriteBool(IsLocked);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ExternalUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalUserId);
          }
          if (IsLocked != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.ExternalUserId.Length != 0) {
            ExternalUserId = other.ExternalUserId;
          }
          if (other.IsLocked != false) {
            IsLocked = other.IsLocked;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ExternalUserId = input.ReadString();
                break;
              }
              case 16: {
                IsLocked = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserLockStatus.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class SetUserPendingActivationStatus : pb::IMessage<SetUserPendingActivationStatus> {
    private static readonly pb::MessageParser<SetUserPendingActivationStatus> _parser = new pb::MessageParser<SetUserPendingActivationStatus>(() => new SetUserPendingActivationStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetUserPendingActivationStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserPendingActivationStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserPendingActivationStatus(SetUserPendingActivationStatus other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetUserPendingActivationStatus Clone() {
      return new SetUserPendingActivationStatus(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetUserPendingActivationStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetUserPendingActivationStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetUserPendingActivationStatus other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetUserPendingActivationStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          externalUserId_ = other.externalUserId_;
          isPendingActivation_ = other.isPendingActivation_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "ExternalUserId" field.</summary>
        public const int ExternalUserIdFieldNumber = 1;
        private string externalUserId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ExternalUserId {
          get { return externalUserId_; }
          set {
            externalUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "IsPendingActivation" field.</summary>
        public const int IsPendingActivationFieldNumber = 2;
        private bool isPendingActivation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsPendingActivation {
          get { return isPendingActivation_; }
          set {
            isPendingActivation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExternalUserId != other.ExternalUserId) return false;
          if (IsPendingActivation != other.IsPendingActivation) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ExternalUserId.Length != 0) hash ^= ExternalUserId.GetHashCode();
          if (IsPendingActivation != false) hash ^= IsPendingActivation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ExternalUserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ExternalUserId);
          }
          if (IsPendingActivation != false) {
            output.WriteRawTag(16);
            output.WriteBool(IsPendingActivation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ExternalUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalUserId);
          }
          if (IsPendingActivation != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.ExternalUserId.Length != 0) {
            ExternalUserId = other.ExternalUserId;
          }
          if (other.IsPendingActivation != false) {
            IsPendingActivation = other.IsPendingActivation;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ExternalUserId = input.ReadString();
                break;
              }
              case 16: {
                IsPendingActivation = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.SetUserPendingActivationStatus.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class SetLastLoginTime : pb::IMessage<SetLastLoginTime> {
    private static readonly pb::MessageParser<SetLastLoginTime> _parser = new pb::MessageParser<SetLastLoginTime>(() => new SetLastLoginTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLastLoginTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.OrganizationUserServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLastLoginTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLastLoginTime(SetLastLoginTime other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLastLoginTime Clone() {
      return new SetLastLoginTime(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLastLoginTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLastLoginTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLastLoginTime other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetLastLoginTime message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          externalUserId_ = other.externalUserId_;
          lastLoginAt_ = other.lastLoginAt_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "ExternalUserId" field.</summary>
        public const int ExternalUserIdFieldNumber = 1;
        private string externalUserId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ExternalUserId {
          get { return externalUserId_; }
          set {
            externalUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "LastLoginAt" field.</summary>
        public const int LastLoginAtFieldNumber = 2;
        private long lastLoginAt_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LastLoginAt {
          get { return lastLoginAt_; }
          set {
            lastLoginAt_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ExternalUserId != other.ExternalUserId) return false;
          if (LastLoginAt != other.LastLoginAt) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ExternalUserId.Length != 0) hash ^= ExternalUserId.GetHashCode();
          if (LastLoginAt != 0L) hash ^= LastLoginAt.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ExternalUserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ExternalUserId);
          }
          if (LastLoginAt != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(LastLoginAt);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ExternalUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ExternalUserId);
          }
          if (LastLoginAt != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastLoginAt);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.ExternalUserId.Length != 0) {
            ExternalUserId = other.ExternalUserId;
          }
          if (other.LastLoginAt != 0L) {
            LastLoginAt = other.LastLoginAt;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ExternalUserId = input.ReadString();
                break;
              }
              case 16: {
                LastLoginAt = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.SetLastLoginTime.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
