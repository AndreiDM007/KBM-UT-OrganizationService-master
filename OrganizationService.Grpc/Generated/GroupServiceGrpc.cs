// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GroupService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Kebormed.Core.OrganizationService.Grpc.Generated {
  public static partial class GroupService
  {
    static readonly string __ServiceName = "Kebormed.Core.OrganizationService.Grpc.Generated.GroupService";

    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateGroup_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateGroup_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateGroup_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateGroup_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteGroup_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteGroup_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryGroups_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryGroups_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_AssociateOrganizationUserToGroup_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_AssociateOrganizationUserToGroup_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DisassociateOrganizationUserFromGroup_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DisassociateOrganizationUserFromGroup_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryGroupMember_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryGroupMember_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryMemberGroup_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryMemberGroup_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistGroupByName_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response> __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistGroupByName_Response = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response.Parser.ParseFrom);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response> __Method_CreateGroup = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateGroup",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateGroup_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_CreateGroup_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response> __Method_UpdateGroup = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGroup",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateGroup_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_UpdateGroup_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response> __Method_DeleteGroup = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGroup",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteGroup_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DeleteGroup_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response> __Method_QueryGroups = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryGroups",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryGroups_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryGroups_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response> __Method_AssociateOrganizationUserToGroup = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AssociateOrganizationUserToGroup",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_AssociateOrganizationUserToGroup_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_AssociateOrganizationUserToGroup_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response> __Method_DisassociateOrganizationUserFromGroup = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisassociateOrganizationUserFromGroup",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DisassociateOrganizationUserFromGroup_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_DisassociateOrganizationUserFromGroup_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response> __Method_QueryGroupMember = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryGroupMember",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryGroupMember_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryGroupMember_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response> __Method_QueryMemberGroup = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryMemberGroup",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryMemberGroup_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_QueryMemberGroup_Response);

    static readonly grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response> __Method_ExistGroupByName = new grpc::Method<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request, global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExistGroupByName",
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistGroupByName_Request,
        __Marshaller_Kebormed_Core_OrganizationService_Grpc_Generated_ExistGroupByName_Response);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Kebormed.Core.OrganizationService.Grpc.Generated.GroupServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GroupService</summary>
    public abstract partial class GroupServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response> CreateGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response> UpdateGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response> DeleteGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response> QueryGroups(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response> AssociateOrganizationUserToGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response> DisassociateOrganizationUserFromGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response> QueryGroupMember(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response> QueryMemberGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response> ExistGroupByName(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GroupService</summary>
    public partial class GroupServiceClient : grpc::ClientBase<GroupServiceClient>
    {
      /// <summary>Creates a new client for GroupService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GroupServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GroupService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GroupServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GroupServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GroupServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response CreateGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response CreateGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response> CreateGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Response> CreateGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.CreateGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateGroup, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response UpdateGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response UpdateGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response> UpdateGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Response> UpdateGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.UpdateGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGroup, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response DeleteGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response DeleteGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response> DeleteGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Response> DeleteGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.DeleteGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteGroup, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response QueryGroups(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response QueryGroups(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryGroups, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response> QueryGroupsAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryGroupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Response> QueryGroupsAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroups.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryGroups, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response AssociateOrganizationUserToGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AssociateOrganizationUserToGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response AssociateOrganizationUserToGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AssociateOrganizationUserToGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response> AssociateOrganizationUserToGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AssociateOrganizationUserToGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Response> AssociateOrganizationUserToGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.AssociateOrganizationUserToGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AssociateOrganizationUserToGroup, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response DisassociateOrganizationUserFromGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisassociateOrganizationUserFromGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response DisassociateOrganizationUserFromGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisassociateOrganizationUserFromGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response> DisassociateOrganizationUserFromGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisassociateOrganizationUserFromGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Response> DisassociateOrganizationUserFromGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.DisassociateOrganizationUserFromGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisassociateOrganizationUserFromGroup, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response QueryGroupMember(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryGroupMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response QueryGroupMember(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryGroupMember, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response> QueryGroupMemberAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryGroupMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Response> QueryGroupMemberAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryGroupMember.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryGroupMember, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response QueryMemberGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryMemberGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response QueryMemberGroup(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryMemberGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response> QueryMemberGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryMemberGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Response> QueryMemberGroupAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.QueryMemberGroup.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryMemberGroup, null, options, request);
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response ExistGroupByName(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExistGroupByName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response ExistGroupByName(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExistGroupByName, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response> ExistGroupByNameAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExistGroupByNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Response> ExistGroupByNameAsync(global::Kebormed.Core.OrganizationService.Grpc.Generated.ExistGroupByName.Types.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExistGroupByName, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GroupServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GroupServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GroupServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateGroup, serviceImpl.CreateGroup)
          .AddMethod(__Method_UpdateGroup, serviceImpl.UpdateGroup)
          .AddMethod(__Method_DeleteGroup, serviceImpl.DeleteGroup)
          .AddMethod(__Method_QueryGroups, serviceImpl.QueryGroups)
          .AddMethod(__Method_AssociateOrganizationUserToGroup, serviceImpl.AssociateOrganizationUserToGroup)
          .AddMethod(__Method_DisassociateOrganizationUserFromGroup, serviceImpl.DisassociateOrganizationUserFromGroup)
          .AddMethod(__Method_QueryGroupMember, serviceImpl.QueryGroupMember)
          .AddMethod(__Method_QueryMemberGroup, serviceImpl.QueryMemberGroup)
          .AddMethod(__Method_ExistGroupByName, serviceImpl.ExistGroupByName).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GroupServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateGroup, serviceImpl.CreateGroup);
      serviceBinder.AddMethod(__Method_UpdateGroup, serviceImpl.UpdateGroup);
      serviceBinder.AddMethod(__Method_DeleteGroup, serviceImpl.DeleteGroup);
      serviceBinder.AddMethod(__Method_QueryGroups, serviceImpl.QueryGroups);
      serviceBinder.AddMethod(__Method_AssociateOrganizationUserToGroup, serviceImpl.AssociateOrganizationUserToGroup);
      serviceBinder.AddMethod(__Method_DisassociateOrganizationUserFromGroup, serviceImpl.DisassociateOrganizationUserFromGroup);
      serviceBinder.AddMethod(__Method_QueryGroupMember, serviceImpl.QueryGroupMember);
      serviceBinder.AddMethod(__Method_QueryMemberGroup, serviceImpl.QueryMemberGroup);
      serviceBinder.AddMethod(__Method_ExistGroupByName, serviceImpl.ExistGroupByName);
    }

  }
}
#endregion
