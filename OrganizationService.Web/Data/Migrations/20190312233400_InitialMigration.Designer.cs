// <auto-generated />
using Kebormed.Core.OrganizationService.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kebormed.Core.OrganizationService.Web.Data.Migrations
{
    [DbContext(typeof(OrganizationServiceDataContext))]
    [Migration("20190312233400_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("OrganizationId");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.OrganizationUser", b =>
                {
                    b.Property<int>("OrganizationUserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrganizationId");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("OrganizationUserId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationUser");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrganizationUserId");

                    b.HasKey("ProfileId");

                    b.HasIndex("OrganizationUserId")
                        .IsUnique();

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.ProfileParameter", b =>
                {
                    b.Property<int>("ProfileParameterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ProfileParameterId");

                    b.ToTable("ProfileParameter");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.ProfileValue", b =>
                {
                    b.Property<int>("ProfileValueId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProfileId");

                    b.Property<int>("ProfileParameterId");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("ProfileValueId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProfileParameterId");

                    b.ToTable("ProfileValue");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.OrganizationUser", b =>
                {
                    b.HasOne("Kebormed.Core.OrganizationService.Web.Data.Entities.Organization", "Organization")
                        .WithMany("OrganizationUsers")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.Profile", b =>
                {
                    b.HasOne("Kebormed.Core.OrganizationService.Web.Data.Entities.OrganizationUser", "OrganizationUser")
                        .WithOne("Profile")
                        .HasForeignKey("Kebormed.Core.OrganizationService.Web.Data.Entities.Profile", "OrganizationUserId");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.ProfileValue", b =>
                {
                    b.HasOne("Kebormed.Core.OrganizationService.Web.Data.Entities.Profile", "Profile")
                        .WithMany("ProfileValues")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kebormed.Core.OrganizationService.Web.Data.Entities.ProfileParameter", "ProfileParameter")
                        .WithMany("ProfileValues")
                        .HasForeignKey("ProfileParameterId");
                });
#pragma warning restore 612, 618
        }
    }
}
