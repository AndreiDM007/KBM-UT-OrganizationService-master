// <auto-generated />
using Kebormed.Core.OrganizationService.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kebormed.Core.OrganizationService.Web.Data.Migrations
{
    [DbContext(typeof(OrganizationServiceDataContext))]
    [Migration("20190313122606_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("OrganizationId");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.OrganizationUser", b =>
                {
                    b.Property<int>("OrganizationUserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrganizationId");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("OrganizationUserId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationUser");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrganizationUserId");

                    b.HasKey("ProfileId");

                    b.HasIndex("OrganizationUserId")
                        .IsUnique();

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.ProfileParameter", b =>
                {
                    b.Property<int>("ProfileParameterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ProfileParameterId");

                    b.ToTable("ProfileParameter");

                    b.HasData(
                        new
                        {
                            ProfileParameterId = 1,
                            Name = "First Name"
                        },
                        new
                        {
                            ProfileParameterId = 2,
                            Name = "Last Name"
                        },
                        new
                        {
                            ProfileParameterId = 3,
                            Name = "Birthdate"
                        },
                        new
                        {
                            ProfileParameterId = 4,
                            Name = "Gender"
                        },
                        new
                        {
                            ProfileParameterId = 5,
                            Name = "Height"
                        },
                        new
                        {
                            ProfileParameterId = 6,
                            Name = "Weight"
                        },
                        new
                        {
                            ProfileParameterId = 7,
                            Name = "BMI"
                        },
                        new
                        {
                            ProfileParameterId = 8,
                            Name = "Therapy Start Date"
                        },
                        new
                        {
                            ProfileParameterId = 9,
                            Name = "Date Collected"
                        },
                        new
                        {
                            ProfileParameterId = 10,
                            Name = "Address 1"
                        },
                        new
                        {
                            ProfileParameterId = 11,
                            Name = "Address 2"
                        },
                        new
                        {
                            ProfileParameterId = 12,
                            Name = "City"
                        },
                        new
                        {
                            ProfileParameterId = 13,
                            Name = "State"
                        },
                        new
                        {
                            ProfileParameterId = 14,
                            Name = "Country"
                        },
                        new
                        {
                            ProfileParameterId = 15,
                            Name = "Postal Code"
                        },
                        new
                        {
                            ProfileParameterId = 16,
                            Name = "Email"
                        },
                        new
                        {
                            ProfileParameterId = 17,
                            Name = "Phone 1"
                        },
                        new
                        {
                            ProfileParameterId = 18,
                            Name = "Phone 2"
                        },
                        new
                        {
                            ProfileParameterId = 19,
                            Name = "Phone 3"
                        },
                        new
                        {
                            ProfileParameterId = 20,
                            Name = "Phone 4"
                        },
                        new
                        {
                            ProfileParameterId = 21,
                            Name = "Phone 4"
                        },
                        new
                        {
                            ProfileParameterId = 22,
                            Name = "Generic 1"
                        },
                        new
                        {
                            ProfileParameterId = 23,
                            Name = "Generic 2"
                        },
                        new
                        {
                            ProfileParameterId = 24,
                            Name = "Generic 3"
                        },
                        new
                        {
                            ProfileParameterId = 25,
                            Name = "Generic 4"
                        },
                        new
                        {
                            ProfileParameterId = 26,
                            Name = "Generic 5"
                        },
                        new
                        {
                            ProfileParameterId = 27,
                            Name = "Physician"
                        },
                        new
                        {
                            ProfileParameterId = 28,
                            Name = "Primary Care Physician"
                        },
                        new
                        {
                            ProfileParameterId = 29,
                            Name = "Group"
                        },
                        new
                        {
                            ProfileParameterId = 30,
                            Name = "Sleep Doctor"
                        },
                        new
                        {
                            ProfileParameterId = 31,
                            Name = "Practice"
                        });
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.ProfileValue", b =>
                {
                    b.Property<int>("ProfileValueId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProfileId");

                    b.Property<int>("ProfileParameterId");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("ProfileValueId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProfileParameterId");

                    b.ToTable("ProfileValue");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.OrganizationUser", b =>
                {
                    b.HasOne("Kebormed.Core.OrganizationService.Web.Data.Entities.Organization", "Organization")
                        .WithMany("OrganizationUsers")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.Profile", b =>
                {
                    b.HasOne("Kebormed.Core.OrganizationService.Web.Data.Entities.OrganizationUser", "OrganizationUser")
                        .WithOne("Profile")
                        .HasForeignKey("Kebormed.Core.OrganizationService.Web.Data.Entities.Profile", "OrganizationUserId");
                });

            modelBuilder.Entity("Kebormed.Core.OrganizationService.Web.Data.Entities.ProfileValue", b =>
                {
                    b.HasOne("Kebormed.Core.OrganizationService.Web.Data.Entities.Profile", "Profile")
                        .WithMany("ProfileValues")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Kebormed.Core.OrganizationService.Web.Data.Entities.ProfileParameter", "ProfileParameter")
                        .WithMany("ProfileValues")
                        .HasForeignKey("ProfileParameterId");
                });
#pragma warning restore 612, 618
        }
    }
}
